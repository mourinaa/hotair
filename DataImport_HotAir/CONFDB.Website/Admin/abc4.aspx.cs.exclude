

#region Using directives
using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using CONFDB.Web.UI;
using CONFDB.Entities;
using CONFDB.Services;
using CONFDB.Data;
#endregion

public partial class Admin_abc4 : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        FormUtil.RedirectAfterUpdate(GridView1, "Conference.aspx?page={0}");
        FormUtil.SetPageIndex(GridView1, "page");
        BindData();

    }

    protected void BindData()
    {
        TList<Moderator> modList = DataRepository.ModeratorProvider.GetAll();
        DataRepository.ModeratorProvider.DeepLoad(modList, true, DeepLoadType.IncludeChildren, typeof(Customer), typeof(Company),typeof(User));
        //now try to sort the beast, used tip at: http://community.codesmithtools.com/blogs/nettiers/archive/2006/03/09/10861.aspx
        //DataSet ds = modList.ToDataSet(false); //Doesn't work with deeploaded items
        modList.Sort(SortByCompanyName2);

        GridView2.DataSource = modList;
        GridView2.DataBind();
    }

    private static int SortByCompanyName2(Moderator x, Moderator y)
    {
        return x.CustomerIdSource.CompanyIdSource.Description.CompareTo(y.CustomerIdSource.CompanyIdSource.Description);
    }

    protected void GridView1_SelectedIndexChanged(object sender, EventArgs e)
    {
        string urlParams = string.Format("Id={0}", GridView1.SelectedDataKey.Values[0]);
        Response.Redirect("ConferenceEdit.aspx?" + urlParams, true);
    }

    protected void GridView3_SelectedIndexChanged(object sender, EventArgs e)
    {
        string urlParams = string.Format("Id={0}", GridView1.SelectedDataKey.Values[0]);
        Response.Redirect("ConferenceEdit.aspx?" + urlParams, true);
    }

}


