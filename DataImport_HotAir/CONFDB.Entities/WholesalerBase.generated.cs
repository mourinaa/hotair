
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Wholesaler.cs instead.
*/

#region using directives

using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'Wholesaler' table. [No description found the database]	
	///</summary>
	[Serializable, DataObject]
	[CLSCompliant(true)]
	public abstract partial class WholesalerBase : EntityBase, CONFDB.Entities.IWholesaler, IEntityId<WholesalerKey>, System.IComparable, System.ICloneable, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private WholesalerEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private WholesalerEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private WholesalerEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<Wholesaler> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>	
		[field:NonSerialized]
		public event WholesalerEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event WholesalerEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="WholesalerBase"/> instance.
		///</summary>
		public WholesalerBase()
		{
			this.entityData = new WholesalerEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="WholesalerBase"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_companyName"></param>
		///<param name="_companyShortName"></param>
		///<param name="_retailPriCustomerNumber"></param>
		///<param name="_retailPriCustomerNumberLikeExp"></param>
		///<param name="_defaultModCodeLength"></param>
		///<param name="_defaultPassCodeLength"></param>
		///<param name="_defaultPasswordLength"></param>
		///<param name="_defaultCapsOk"></param>
		///<param name="_moderatorTxt"></param>
		///<param name="_participantTxt"></param>
		///<param name="_enabled"></param>
		///<param name="_customerNumberExceptionList"></param>
		///<param name="_webProductProviderName"></param>
		///<param name="_webProductProviderBranding"></param>
		///<param name="_webSecProductProvider"></param>
		///<param name="_currencyId"></param>
		///<param name="_billingWholesalerId"></param>
		///<param name="_billingCustomerNumber"></param>
		///<param name="_taxableId"></param>
		///<param name="_webSiteUrl"></param>
		///<param name="_adminSiteUrl"></param>
		///<param name="_adminSiteIp"></param>
		///<param name="_selfServeUrl"></param>
		///<param name="_selfServeIp"></param>
		///<param name="_webConferencingUrl"></param>
		///<param name="_webConferencingIp"></param>
		///<param name="_supportEmail"></param>
		///<param name="_supportPhoneNumber"></param>
		///<param name="_doRetailBilling"></param>
		///<param name="_commissionLockDate"></param>
		///<param name="_portalId">Link to the DNN Portal</param>
		///<param name="_billingAddress1"></param>
		///<param name="_billingAddress2"></param>
		///<param name="_billingCity"></param>
		///<param name="_billingCountry"></param>
		///<param name="_billingRegion">State, Province, etc.</param>
		///<param name="_billingPostalCode"></param>
		public WholesalerBase(System.String _id, System.String _companyName, System.String _companyShortName, 
			System.String _retailPriCustomerNumber, System.String _retailPriCustomerNumberLikeExp, System.Byte? _defaultModCodeLength, 
			System.Byte? _defaultPassCodeLength, System.Byte? _defaultPasswordLength, System.Boolean? _defaultCapsOk, 
			System.String _moderatorTxt, System.String _participantTxt, System.Boolean? _enabled, System.String _customerNumberExceptionList, 
			System.String _webProductProviderName, System.String _webProductProviderBranding, System.String _webSecProductProvider, 
			System.String _currencyId, System.String _billingWholesalerId, System.String _billingCustomerNumber, 
			System.Int32 _taxableId, System.String _webSiteUrl, System.String _adminSiteUrl, System.String _adminSiteIp, 
			System.String _selfServeUrl, System.String _selfServeIp, System.String _webConferencingUrl, 
			System.String _webConferencingIp, System.String _supportEmail, System.String _supportPhoneNumber, 
			System.Boolean _doRetailBilling, System.DateTime? _commissionLockDate, System.Int32? _portalId, 
			System.String _billingAddress1, System.String _billingAddress2, System.String _billingCity, 
			System.String _billingCountry, System.String _billingRegion, System.String _billingPostalCode)
		{
			this.entityData = new WholesalerEntityData();
			this.backupData = null;

			this.Id = _id;
			this.CompanyName = _companyName;
			this.CompanyShortName = _companyShortName;
			this.RetailPriCustomerNumber = _retailPriCustomerNumber;
			this.RetailPriCustomerNumberLikeExp = _retailPriCustomerNumberLikeExp;
			this.DefaultModCodeLength = _defaultModCodeLength;
			this.DefaultPassCodeLength = _defaultPassCodeLength;
			this.DefaultPasswordLength = _defaultPasswordLength;
			this.DefaultCapsOk = _defaultCapsOk;
			this.ModeratorTxt = _moderatorTxt;
			this.ParticipantTxt = _participantTxt;
			this.Enabled = _enabled;
			this.CustomerNumberExceptionList = _customerNumberExceptionList;
			this.WebProductProviderName = _webProductProviderName;
			this.WebProductProviderBranding = _webProductProviderBranding;
			this.WebSecProductProvider = _webSecProductProvider;
			this.CurrencyId = _currencyId;
			this.BillingWholesalerId = _billingWholesalerId;
			this.BillingCustomerNumber = _billingCustomerNumber;
			this.TaxableId = _taxableId;
			this.WebSiteUrl = _webSiteUrl;
			this.AdminSiteUrl = _adminSiteUrl;
			this.AdminSiteIp = _adminSiteIp;
			this.SelfServeUrl = _selfServeUrl;
			this.SelfServeIp = _selfServeIp;
			this.WebConferencingUrl = _webConferencingUrl;
			this.WebConferencingIp = _webConferencingIp;
			this.SupportEmail = _supportEmail;
			this.SupportPhoneNumber = _supportPhoneNumber;
			this.DoRetailBilling = _doRetailBilling;
			this.CommissionLockDate = _commissionLockDate;
			this.PortalId = _portalId;
			this.BillingAddress1 = _billingAddress1;
			this.BillingAddress2 = _billingAddress2;
			this.BillingCity = _billingCity;
			this.BillingCountry = _billingCountry;
			this.BillingRegion = _billingRegion;
			this.BillingPostalCode = _billingPostalCode;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Wholesaler"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_companyName"></param>
		///<param name="_companyShortName"></param>
		///<param name="_retailPriCustomerNumber"></param>
		///<param name="_retailPriCustomerNumberLikeExp"></param>
		///<param name="_defaultModCodeLength"></param>
		///<param name="_defaultPassCodeLength"></param>
		///<param name="_defaultPasswordLength"></param>
		///<param name="_defaultCapsOk"></param>
		///<param name="_moderatorTxt"></param>
		///<param name="_participantTxt"></param>
		///<param name="_enabled"></param>
		///<param name="_customerNumberExceptionList"></param>
		///<param name="_webProductProviderName"></param>
		///<param name="_webProductProviderBranding"></param>
		///<param name="_webSecProductProvider"></param>
		///<param name="_currencyId"></param>
		///<param name="_billingWholesalerId"></param>
		///<param name="_billingCustomerNumber"></param>
		///<param name="_taxableId"></param>
		///<param name="_webSiteUrl"></param>
		///<param name="_adminSiteUrl"></param>
		///<param name="_adminSiteIp"></param>
		///<param name="_selfServeUrl"></param>
		///<param name="_selfServeIp"></param>
		///<param name="_webConferencingUrl"></param>
		///<param name="_webConferencingIp"></param>
		///<param name="_supportEmail"></param>
		///<param name="_supportPhoneNumber"></param>
		///<param name="_doRetailBilling"></param>
		///<param name="_commissionLockDate"></param>
		///<param name="_portalId">Link to the DNN Portal</param>
		///<param name="_billingAddress1"></param>
		///<param name="_billingAddress2"></param>
		///<param name="_billingCity"></param>
		///<param name="_billingCountry"></param>
		///<param name="_billingRegion">State, Province, etc.</param>
		///<param name="_billingPostalCode"></param>
		public static Wholesaler CreateWholesaler(System.String _id, System.String _companyName, System.String _companyShortName, 
			System.String _retailPriCustomerNumber, System.String _retailPriCustomerNumberLikeExp, System.Byte? _defaultModCodeLength, 
			System.Byte? _defaultPassCodeLength, System.Byte? _defaultPasswordLength, System.Boolean? _defaultCapsOk, 
			System.String _moderatorTxt, System.String _participantTxt, System.Boolean? _enabled, System.String _customerNumberExceptionList, 
			System.String _webProductProviderName, System.String _webProductProviderBranding, System.String _webSecProductProvider, 
			System.String _currencyId, System.String _billingWholesalerId, System.String _billingCustomerNumber, 
			System.Int32 _taxableId, System.String _webSiteUrl, System.String _adminSiteUrl, System.String _adminSiteIp, 
			System.String _selfServeUrl, System.String _selfServeIp, System.String _webConferencingUrl, 
			System.String _webConferencingIp, System.String _supportEmail, System.String _supportPhoneNumber, 
			System.Boolean _doRetailBilling, System.DateTime? _commissionLockDate, System.Int32? _portalId, 
			System.String _billingAddress1, System.String _billingAddress2, System.String _billingCity, 
			System.String _billingCountry, System.String _billingRegion, System.String _billingPostalCode)
		{
			Wholesaler newWholesaler = new Wholesaler();
			newWholesaler.Id = _id;
			newWholesaler.CompanyName = _companyName;
			newWholesaler.CompanyShortName = _companyShortName;
			newWholesaler.RetailPriCustomerNumber = _retailPriCustomerNumber;
			newWholesaler.RetailPriCustomerNumberLikeExp = _retailPriCustomerNumberLikeExp;
			newWholesaler.DefaultModCodeLength = _defaultModCodeLength;
			newWholesaler.DefaultPassCodeLength = _defaultPassCodeLength;
			newWholesaler.DefaultPasswordLength = _defaultPasswordLength;
			newWholesaler.DefaultCapsOk = _defaultCapsOk;
			newWholesaler.ModeratorTxt = _moderatorTxt;
			newWholesaler.ParticipantTxt = _participantTxt;
			newWholesaler.Enabled = _enabled;
			newWholesaler.CustomerNumberExceptionList = _customerNumberExceptionList;
			newWholesaler.WebProductProviderName = _webProductProviderName;
			newWholesaler.WebProductProviderBranding = _webProductProviderBranding;
			newWholesaler.WebSecProductProvider = _webSecProductProvider;
			newWholesaler.CurrencyId = _currencyId;
			newWholesaler.BillingWholesalerId = _billingWholesalerId;
			newWholesaler.BillingCustomerNumber = _billingCustomerNumber;
			newWholesaler.TaxableId = _taxableId;
			newWholesaler.WebSiteUrl = _webSiteUrl;
			newWholesaler.AdminSiteUrl = _adminSiteUrl;
			newWholesaler.AdminSiteIp = _adminSiteIp;
			newWholesaler.SelfServeUrl = _selfServeUrl;
			newWholesaler.SelfServeIp = _selfServeIp;
			newWholesaler.WebConferencingUrl = _webConferencingUrl;
			newWholesaler.WebConferencingIp = _webConferencingIp;
			newWholesaler.SupportEmail = _supportEmail;
			newWholesaler.SupportPhoneNumber = _supportPhoneNumber;
			newWholesaler.DoRetailBilling = _doRetailBilling;
			newWholesaler.CommissionLockDate = _commissionLockDate;
			newWholesaler.PortalId = _portalId;
			newWholesaler.BillingAddress1 = _billingAddress1;
			newWholesaler.BillingAddress2 = _billingAddress2;
			newWholesaler.BillingCity = _billingCity;
			newWholesaler.BillingCountry = _billingCountry;
			newWholesaler.BillingRegion = _billingRegion;
			newWholesaler.BillingPostalCode = _billingPostalCode;
			return newWholesaler;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the Id property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false, 10)]
		public virtual System.String Id
		{
			get
			{
				return this.entityData.Id; 
			}
			
			set
			{
				if (this.entityData.Id == value)
					return;
					
				OnColumnChanging(WholesalerColumn.Id, this.entityData.Id);
				this.entityData.Id = value;
				this.EntityId.Id = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.Id, this.entityData.Id);
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ID property.</remarks>
		/// <value>This type is varchar</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.String OriginalId
		{
			get { return this.entityData.OriginalId; }
			set { this.entityData.OriginalId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the CompanyName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String CompanyName
		{
			get
			{
				return this.entityData.CompanyName; 
			}
			
			set
			{
				if (this.entityData.CompanyName == value)
					return;
					
				OnColumnChanging(WholesalerColumn.CompanyName, this.entityData.CompanyName);
				this.entityData.CompanyName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.CompanyName, this.entityData.CompanyName);
				OnPropertyChanged("CompanyName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CompanyShortName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String CompanyShortName
		{
			get
			{
				return this.entityData.CompanyShortName; 
			}
			
			set
			{
				if (this.entityData.CompanyShortName == value)
					return;
					
				OnColumnChanging(WholesalerColumn.CompanyShortName, this.entityData.CompanyShortName);
				this.entityData.CompanyShortName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.CompanyShortName, this.entityData.CompanyShortName);
				OnPropertyChanged("CompanyShortName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RetailPriCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String RetailPriCustomerNumber
		{
			get
			{
				return this.entityData.RetailPriCustomerNumber; 
			}
			
			set
			{
				if (this.entityData.RetailPriCustomerNumber == value)
					return;
					
				OnColumnChanging(WholesalerColumn.RetailPriCustomerNumber, this.entityData.RetailPriCustomerNumber);
				this.entityData.RetailPriCustomerNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.RetailPriCustomerNumber, this.entityData.RetailPriCustomerNumber);
				OnPropertyChanged("RetailPriCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RetailPriCustomerNumberLikeExp property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String RetailPriCustomerNumberLikeExp
		{
			get
			{
				return this.entityData.RetailPriCustomerNumberLikeExp; 
			}
			
			set
			{
				if (this.entityData.RetailPriCustomerNumberLikeExp == value)
					return;
					
				OnColumnChanging(WholesalerColumn.RetailPriCustomerNumberLikeExp, this.entityData.RetailPriCustomerNumberLikeExp);
				this.entityData.RetailPriCustomerNumberLikeExp = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.RetailPriCustomerNumberLikeExp, this.entityData.RetailPriCustomerNumberLikeExp);
				OnPropertyChanged("RetailPriCustomerNumberLikeExp");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DefaultModCodeLength property. 
		///		
		/// </summary>
		/// <value>This type is tinyint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (byte)0. It is up to the developer
		/// to check the value of IsDefaultModCodeLengthNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte? DefaultModCodeLength
		{
			get
			{
				return this.entityData.DefaultModCodeLength; 
			}
			
			set
			{
				if (this.entityData.DefaultModCodeLength == value)
					return;
					
				OnColumnChanging(WholesalerColumn.DefaultModCodeLength, this.entityData.DefaultModCodeLength);
				this.entityData.DefaultModCodeLength = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.DefaultModCodeLength, this.entityData.DefaultModCodeLength);
				OnPropertyChanged("DefaultModCodeLength");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DefaultPassCodeLength property. 
		///		
		/// </summary>
		/// <value>This type is tinyint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (byte)0. It is up to the developer
		/// to check the value of IsDefaultPassCodeLengthNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte? DefaultPassCodeLength
		{
			get
			{
				return this.entityData.DefaultPassCodeLength; 
			}
			
			set
			{
				if (this.entityData.DefaultPassCodeLength == value)
					return;
					
				OnColumnChanging(WholesalerColumn.DefaultPassCodeLength, this.entityData.DefaultPassCodeLength);
				this.entityData.DefaultPassCodeLength = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.DefaultPassCodeLength, this.entityData.DefaultPassCodeLength);
				OnPropertyChanged("DefaultPassCodeLength");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DefaultPasswordLength property. 
		///		
		/// </summary>
		/// <value>This type is tinyint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (byte)0. It is up to the developer
		/// to check the value of IsDefaultPasswordLengthNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte? DefaultPasswordLength
		{
			get
			{
				return this.entityData.DefaultPasswordLength; 
			}
			
			set
			{
				if (this.entityData.DefaultPasswordLength == value)
					return;
					
				OnColumnChanging(WholesalerColumn.DefaultPasswordLength, this.entityData.DefaultPasswordLength);
				this.entityData.DefaultPasswordLength = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.DefaultPasswordLength, this.entityData.DefaultPasswordLength);
				OnPropertyChanged("DefaultPasswordLength");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DefaultCapsOk property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsDefaultCapsOkNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DefaultCapsOk
		{
			get
			{
				return this.entityData.DefaultCapsOk; 
			}
			
			set
			{
				if (this.entityData.DefaultCapsOk == value)
					return;
					
				OnColumnChanging(WholesalerColumn.DefaultCapsOk, this.entityData.DefaultCapsOk);
				this.entityData.DefaultCapsOk = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.DefaultCapsOk, this.entityData.DefaultCapsOk);
				OnPropertyChanged("DefaultCapsOk");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ModeratorTxt property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ModeratorTxt
		{
			get
			{
				return this.entityData.ModeratorTxt; 
			}
			
			set
			{
				if (this.entityData.ModeratorTxt == value)
					return;
					
				OnColumnChanging(WholesalerColumn.ModeratorTxt, this.entityData.ModeratorTxt);
				this.entityData.ModeratorTxt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.ModeratorTxt, this.entityData.ModeratorTxt);
				OnPropertyChanged("ModeratorTxt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ParticipantTxt property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ParticipantTxt
		{
			get
			{
				return this.entityData.ParticipantTxt; 
			}
			
			set
			{
				if (this.entityData.ParticipantTxt == value)
					return;
					
				OnColumnChanging(WholesalerColumn.ParticipantTxt, this.entityData.ParticipantTxt);
				this.entityData.ParticipantTxt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.ParticipantTxt, this.entityData.ParticipantTxt);
				OnPropertyChanged("ParticipantTxt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Enabled property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsEnabledNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? Enabled
		{
			get
			{
				return this.entityData.Enabled; 
			}
			
			set
			{
				if (this.entityData.Enabled == value)
					return;
					
				OnColumnChanging(WholesalerColumn.Enabled, this.entityData.Enabled);
				this.entityData.Enabled = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.Enabled, this.entityData.Enabled);
				OnPropertyChanged("Enabled");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CustomerNumberExceptionList property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String CustomerNumberExceptionList
		{
			get
			{
				return this.entityData.CustomerNumberExceptionList; 
			}
			
			set
			{
				if (this.entityData.CustomerNumberExceptionList == value)
					return;
					
				OnColumnChanging(WholesalerColumn.CustomerNumberExceptionList, this.entityData.CustomerNumberExceptionList);
				this.entityData.CustomerNumberExceptionList = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.CustomerNumberExceptionList, this.entityData.CustomerNumberExceptionList);
				OnPropertyChanged("CustomerNumberExceptionList");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebProductProviderName property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String WebProductProviderName
		{
			get
			{
				return this.entityData.WebProductProviderName; 
			}
			
			set
			{
				if (this.entityData.WebProductProviderName == value)
					return;
					
				OnColumnChanging(WholesalerColumn.WebProductProviderName, this.entityData.WebProductProviderName);
				this.entityData.WebProductProviderName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.WebProductProviderName, this.entityData.WebProductProviderName);
				OnPropertyChanged("WebProductProviderName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebProductProviderBranding property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String WebProductProviderBranding
		{
			get
			{
				return this.entityData.WebProductProviderBranding; 
			}
			
			set
			{
				if (this.entityData.WebProductProviderBranding == value)
					return;
					
				OnColumnChanging(WholesalerColumn.WebProductProviderBranding, this.entityData.WebProductProviderBranding);
				this.entityData.WebProductProviderBranding = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.WebProductProviderBranding, this.entityData.WebProductProviderBranding);
				OnPropertyChanged("WebProductProviderBranding");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebSecProductProvider property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String WebSecProductProvider
		{
			get
			{
				return this.entityData.WebSecProductProvider; 
			}
			
			set
			{
				if (this.entityData.WebSecProductProvider == value)
					return;
					
				OnColumnChanging(WholesalerColumn.WebSecProductProvider, this.entityData.WebSecProductProvider);
				this.entityData.WebSecProductProvider = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.WebSecProductProvider, this.entityData.WebSecProductProvider);
				OnPropertyChanged("WebSecProductProvider");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrencyId property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 3)]
		public virtual System.String CurrencyId
		{
			get
			{
				return this.entityData.CurrencyId; 
			}
			
			set
			{
				if (this.entityData.CurrencyId == value)
					return;
					
				OnColumnChanging(WholesalerColumn.CurrencyId, this.entityData.CurrencyId);
				this.entityData.CurrencyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.CurrencyId, this.entityData.CurrencyId);
				OnPropertyChanged("CurrencyId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingWholesalerId property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String BillingWholesalerId
		{
			get
			{
				return this.entityData.BillingWholesalerId; 
			}
			
			set
			{
				if (this.entityData.BillingWholesalerId == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingWholesalerId, this.entityData.BillingWholesalerId);
				this.entityData.BillingWholesalerId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingWholesalerId, this.entityData.BillingWholesalerId);
				OnPropertyChanged("BillingWholesalerId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is char.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String BillingCustomerNumber
		{
			get
			{
				return this.entityData.BillingCustomerNumber; 
			}
			
			set
			{
				if (this.entityData.BillingCustomerNumber == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingCustomerNumber, this.entityData.BillingCustomerNumber);
				this.entityData.BillingCustomerNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingCustomerNumber, this.entityData.BillingCustomerNumber);
				OnPropertyChanged("BillingCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TaxableId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 TaxableId
		{
			get
			{
				return this.entityData.TaxableId; 
			}
			
			set
			{
				if (this.entityData.TaxableId == value)
					return;
					
				OnColumnChanging(WholesalerColumn.TaxableId, this.entityData.TaxableId);
				this.entityData.TaxableId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.TaxableId, this.entityData.TaxableId);
				OnPropertyChanged("TaxableId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebSiteUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String WebSiteUrl
		{
			get
			{
				return this.entityData.WebSiteUrl; 
			}
			
			set
			{
				if (this.entityData.WebSiteUrl == value)
					return;
					
				OnColumnChanging(WholesalerColumn.WebSiteUrl, this.entityData.WebSiteUrl);
				this.entityData.WebSiteUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.WebSiteUrl, this.entityData.WebSiteUrl);
				OnPropertyChanged("WebSiteUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdminSiteUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String AdminSiteUrl
		{
			get
			{
				return this.entityData.AdminSiteUrl; 
			}
			
			set
			{
				if (this.entityData.AdminSiteUrl == value)
					return;
					
				OnColumnChanging(WholesalerColumn.AdminSiteUrl, this.entityData.AdminSiteUrl);
				this.entityData.AdminSiteUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.AdminSiteUrl, this.entityData.AdminSiteUrl);
				OnPropertyChanged("AdminSiteUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdminSiteIp property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String AdminSiteIp
		{
			get
			{
				return this.entityData.AdminSiteIp; 
			}
			
			set
			{
				if (this.entityData.AdminSiteIp == value)
					return;
					
				OnColumnChanging(WholesalerColumn.AdminSiteIp, this.entityData.AdminSiteIp);
				this.entityData.AdminSiteIp = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.AdminSiteIp, this.entityData.AdminSiteIp);
				OnPropertyChanged("AdminSiteIp");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SelfServeUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String SelfServeUrl
		{
			get
			{
				return this.entityData.SelfServeUrl; 
			}
			
			set
			{
				if (this.entityData.SelfServeUrl == value)
					return;
					
				OnColumnChanging(WholesalerColumn.SelfServeUrl, this.entityData.SelfServeUrl);
				this.entityData.SelfServeUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.SelfServeUrl, this.entityData.SelfServeUrl);
				OnPropertyChanged("SelfServeUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SelfServeIp property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String SelfServeIp
		{
			get
			{
				return this.entityData.SelfServeIp; 
			}
			
			set
			{
				if (this.entityData.SelfServeIp == value)
					return;
					
				OnColumnChanging(WholesalerColumn.SelfServeIp, this.entityData.SelfServeIp);
				this.entityData.SelfServeIp = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.SelfServeIp, this.entityData.SelfServeIp);
				OnPropertyChanged("SelfServeIp");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebConferencingUrl property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String WebConferencingUrl
		{
			get
			{
				return this.entityData.WebConferencingUrl; 
			}
			
			set
			{
				if (this.entityData.WebConferencingUrl == value)
					return;
					
				OnColumnChanging(WholesalerColumn.WebConferencingUrl, this.entityData.WebConferencingUrl);
				this.entityData.WebConferencingUrl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.WebConferencingUrl, this.entityData.WebConferencingUrl);
				OnPropertyChanged("WebConferencingUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebConferencingIp property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String WebConferencingIp
		{
			get
			{
				return this.entityData.WebConferencingIp; 
			}
			
			set
			{
				if (this.entityData.WebConferencingIp == value)
					return;
					
				OnColumnChanging(WholesalerColumn.WebConferencingIp, this.entityData.WebConferencingIp);
				this.entityData.WebConferencingIp = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.WebConferencingIp, this.entityData.WebConferencingIp);
				OnPropertyChanged("WebConferencingIp");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SupportEmail property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SupportEmail
		{
			get
			{
				return this.entityData.SupportEmail; 
			}
			
			set
			{
				if (this.entityData.SupportEmail == value)
					return;
					
				OnColumnChanging(WholesalerColumn.SupportEmail, this.entityData.SupportEmail);
				this.entityData.SupportEmail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.SupportEmail, this.entityData.SupportEmail);
				OnPropertyChanged("SupportEmail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SupportPhoneNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String SupportPhoneNumber
		{
			get
			{
				return this.entityData.SupportPhoneNumber; 
			}
			
			set
			{
				if (this.entityData.SupportPhoneNumber == value)
					return;
					
				OnColumnChanging(WholesalerColumn.SupportPhoneNumber, this.entityData.SupportPhoneNumber);
				this.entityData.SupportPhoneNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.SupportPhoneNumber, this.entityData.SupportPhoneNumber);
				OnPropertyChanged("SupportPhoneNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DoRetailBilling property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean DoRetailBilling
		{
			get
			{
				return this.entityData.DoRetailBilling; 
			}
			
			set
			{
				if (this.entityData.DoRetailBilling == value)
					return;
					
				OnColumnChanging(WholesalerColumn.DoRetailBilling, this.entityData.DoRetailBilling);
				this.entityData.DoRetailBilling = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.DoRetailBilling, this.entityData.DoRetailBilling);
				OnPropertyChanged("DoRetailBilling");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CommissionLockDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCommissionLockDateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? CommissionLockDate
		{
			get
			{
				return this.entityData.CommissionLockDate; 
			}
			
			set
			{
				if (this.entityData.CommissionLockDate == value)
					return;
					
				OnColumnChanging(WholesalerColumn.CommissionLockDate, this.entityData.CommissionLockDate);
				this.entityData.CommissionLockDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.CommissionLockDate, this.entityData.CommissionLockDate);
				OnPropertyChanged("CommissionLockDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PortalId property. 
		///		Link to the DNN Portal
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsPortalIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute("Link to the DNN Portal"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PortalId
		{
			get
			{
				return this.entityData.PortalId; 
			}
			
			set
			{
				if (this.entityData.PortalId == value)
					return;
					
				OnColumnChanging(WholesalerColumn.PortalId, this.entityData.PortalId);
				this.entityData.PortalId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.PortalId, this.entityData.PortalId);
				OnPropertyChanged("PortalId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String BillingAddress1
		{
			get
			{
				return this.entityData.BillingAddress1; 
			}
			
			set
			{
				if (this.entityData.BillingAddress1 == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingAddress1, this.entityData.BillingAddress1);
				this.entityData.BillingAddress1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingAddress1, this.entityData.BillingAddress1);
				OnPropertyChanged("BillingAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String BillingAddress2
		{
			get
			{
				return this.entityData.BillingAddress2; 
			}
			
			set
			{
				if (this.entityData.BillingAddress2 == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingAddress2, this.entityData.BillingAddress2);
				this.entityData.BillingAddress2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingAddress2, this.entityData.BillingAddress2);
				OnPropertyChanged("BillingAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingCity property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String BillingCity
		{
			get
			{
				return this.entityData.BillingCity; 
			}
			
			set
			{
				if (this.entityData.BillingCity == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingCity, this.entityData.BillingCity);
				this.entityData.BillingCity = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingCity, this.entityData.BillingCity);
				OnPropertyChanged("BillingCity");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingCountry property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 3)]
		public virtual System.String BillingCountry
		{
			get
			{
				return this.entityData.BillingCountry; 
			}
			
			set
			{
				if (this.entityData.BillingCountry == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingCountry, this.entityData.BillingCountry);
				this.entityData.BillingCountry = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingCountry, this.entityData.BillingCountry);
				OnPropertyChanged("BillingCountry");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingRegion property. 
		///		State, Province, etc.
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute("State, Province, etc."), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 3)]
		public virtual System.String BillingRegion
		{
			get
			{
				return this.entityData.BillingRegion; 
			}
			
			set
			{
				if (this.entityData.BillingRegion == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingRegion, this.entityData.BillingRegion);
				this.entityData.BillingRegion = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingRegion, this.entityData.BillingRegion);
				OnPropertyChanged("BillingRegion");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BillingPostalCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String BillingPostalCode
		{
			get
			{
				return this.entityData.BillingPostalCode; 
			}
			
			set
			{
				if (this.entityData.BillingPostalCode == value)
					return;
					
				OnColumnChanging(WholesalerColumn.BillingPostalCode, this.entityData.BillingPostalCode);
				this.entityData.BillingPostalCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(WholesalerColumn.BillingPostalCode, this.entityData.BillingPostalCode);
				OnPropertyChanged("BillingPostalCode");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="Currency"/>.
		/// </summary>
		/// <value>The source Currency for CurrencyId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Currency CurrencyIdSource
      	{
            get { return entityData.CurrencyIdSource; }
            set { entityData.CurrencyIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Country"/>.
		/// </summary>
		/// <value>The source Country for BillingCountry.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Country BillingCountrySource
      	{
            get { return entityData.BillingCountrySource; }
            set { entityData.BillingCountrySource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="State"/>.
		/// </summary>
		/// <value>The source State for BillingRegion.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual State BillingRegionSource
      	{
            get { return entityData.BillingRegionSource; }
            set { entityData.BillingRegionSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Taxable"/>.
		/// </summary>
		/// <value>The source Taxable for TaxableId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Taxable TaxableIdSource
      	{
            get { return entityData.TaxableIdSource; }
            set { entityData.TaxableIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of Vertical objects
		///	which are related to this object through the relation Wholesaler_Vertical_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Vertical> VerticalCollection
		{
			get { return entityData.VerticalCollection; }
			set { entityData.VerticalCollection = value; }	
		}

		/// <summary>
		///	Holds a collection of LanguageFromIrWholesaler objects
		///	which are related to this object through the junction table IrWholesaler
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Language> LanguageIdLanguageCollection_From_IrWholesaler
		{
			get { return entityData.LanguageIdLanguageCollection_From_IrWholesaler; }
			set { entityData.LanguageIdLanguageCollection_From_IrWholesaler = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CustomerTransaction objects
		///	which are related to this object through the relation Wholesaler_CustomerTransactions_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CustomerTransaction> CustomerTransactionCollection
		{
			get { return entityData.CustomerTransactionCollection; }
			set { entityData.CustomerTransactionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CustomerDocument objects
		///	which are related to this object through the relation Wholesaler_CustomerDocument_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CustomerDocument> CustomerDocumentCollection
		{
			get { return entityData.CustomerDocumentCollection; }
			set { entityData.CustomerDocumentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CommissionCustomer objects
		///	which are related to this object through the relation Wholesaler_CommissionCustomer_FK
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CommissionCustomer> CommissionCustomerCollection
		{
			get { return entityData.CommissionCustomerCollection; }
			set { entityData.CommissionCustomerCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Commission objects
		///	which are related to this object through the relation Wholesaler_Commission_FK
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Commission> CommissionCollection
		{
			get { return entityData.CommissionCollection; }
			set { entityData.CommissionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EmailTemplate objects
		///	which are related to this object through the relation FK_EmailTemplates_Wholesaler
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EmailTemplate> EmailTemplateCollection
		{
			get { return entityData.EmailTemplateCollection; }
			set { entityData.EmailTemplateCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RatedCdr objects
		///	which are related to this object through the relation Wholesaler_RatedCDR_FK
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RatedCdr> RatedCdrCollection
		{
			get { return entityData.RatedCdrCollection; }
			set { entityData.RatedCdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Wholesaler_Product objects
		///	which are related to this object through the relation Wholesaler_Wholesaler_Product_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Wholesaler_Product> Wholesaler_ProductCollection
		{
			get { return entityData.Wholesaler_ProductCollection; }
			set { entityData.Wholesaler_ProductCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccountManager objects
		///	which are related to this object through the relation Wholesaler_AccountManager_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccountManager> AccountManagerCollection
		{
			get { return entityData.AccountManagerCollection; }
			set { entityData.AccountManagerCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ProductRateValue objects
		///	which are related to this object through the relation Wholesaler_ProductRateValue_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ProductRateValue> ProductRateValueCollection
		{
			get { return entityData.ProductRateValueCollection; }
			set { entityData.ProductRateValueCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Dnis objects
		///	which are related to this object through the relation Wholesaler_DNIS_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Dnis> DnisCollection
		{
			get { return entityData.DnisCollection; }
			set { entityData.DnisCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Customer objects
		///	which are related to this object through the relation Wholesaler_Customer_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Customer> CustomerCollection
		{
			get { return entityData.CustomerCollection; }
			set { entityData.CustomerCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of IrWholesaler objects
		///	which are related to this object through the relation Wholesaler_IRWholesaler_FK
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<IrWholesaler> IrWholesalerCollection
		{
			get { return entityData.IrWholesalerCollection; }
			set { entityData.IrWholesalerCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Lead objects
		///	which are related to this object through the relation FK_Lead_Wholesaler
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Lead> LeadCollection
		{
			get { return entityData.LeadCollection; }
			set { entityData.LeadCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SalesPerson objects
		///	which are related to this object through the relation Wholesaler_SalesPerson_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SalesPerson> SalesPersonCollection
		{
			get { return entityData.SalesPersonCollection; }
			set { entityData.SalesPersonCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Department objects
		///	which are related to this object through the relation Wholesaler_Department_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Department> DepartmentCollection
		{
			get { return entityData.DepartmentCollection; }
			set { entityData.DepartmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Company objects
		///	which are related to this object through the relation Wholesaler_Company_FK1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Company> CompanyCollection
		{
			get { return entityData.CompanyCollection; }
			set { entityData.CompanyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Ticket objects
		///	which are related to this object through the relation FK_Ticket_Wholesaler
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Ticket> TicketCollection
		{
			get { return entityData.TicketCollection; }
			set { entityData.TicketCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MarketingService objects
		///	which are related to this object through the relation FK_MarketingService_Wholesaler
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MarketingService> MarketingServiceCollection
		{
			get { return entityData.MarketingServiceCollection; }
			set { entityData.MarketingServiceCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("Id", "Id"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("Id", "Id", 10));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("CompanyName", "Company Name", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("CompanyShortName", "Company Short Name", 30));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("RetailPriCustomerNumber", "Retail Pri Customer Number", 10));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("RetailPriCustomerNumberLikeExp", "Retail Pri Customer Number Like Exp", 10));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("ModeratorTxt", "Moderator Txt", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("ParticipantTxt", "Participant Txt", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("CustomerNumberExceptionList", "Customer Number Exception List", 500));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("WebProductProviderName", "Web Product Provider Name", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("WebProductProviderBranding", "Web Product Provider Branding", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("WebSecProductProvider", "Web Sec Product Provider", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("CurrencyId", "Currency Id", 3));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingWholesalerId", "Billing Wholesaler Id", 10));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingCustomerNumber", "Billing Customer Number", 10));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("WebSiteUrl", "Web Site Url", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("AdminSiteUrl", "Admin Site Url", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("AdminSiteIp", "Admin Site Ip", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("SelfServeUrl", "Self Serve Url", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("SelfServeIp", "Self Serve Ip", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("WebConferencingUrl", "Web Conferencing Url", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("WebConferencingIp", "Web Conferencing Ip", 100));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("SupportEmail", "Support Email", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("SupportPhoneNumber", "Support Phone Number", 30));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingAddress1", "Billing Address1", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingAddress2", "Billing Address2", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingCity", "Billing City", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingCountry", "Billing Country", 3));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingRegion", "Billing Region", 3));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("BillingPostalCode", "Billing Postal Code", 20));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "Wholesaler"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ID", "CompanyName", "CompanyShortName", "RetailPriCustomerNumber", "RetailPriCustomerNumberLIKEExp", "DefaultModCodeLength", "DefaultPassCodeLength", "DefaultPasswordLength", "DefaultCapsOK", "ModeratorTxt", "ParticipantTxt", "Enabled", "CustomerNumberExceptionList", "WebProductProviderName", "WebProductProviderBranding", "WebSecProductProvider", "CurrencyID", "BillingWholesalerID", "BillingCustomerNumber", "TaxableID", "WebSiteURL", "AdminSiteURL", "AdminSiteIP", "SelfServeURL", "SelfServeIP", "WebConferencingURL", "WebConferencingIP", "SupportEmail", "SupportPhoneNumber", "DoRetailBilling", "CommissionLockDate", "PortalID", "BillingAddress1", "BillingAddress2", "BillingCity", "BillingCountry", "BillingRegion", "BillingPostalCode"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as WholesalerEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (Wholesaler) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<Wholesaler>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as Wholesaler);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Wholesaler Entity 
		///</summary>
		public virtual Wholesaler Copy()
		{
			//shallow copy entity
			Wholesaler copy = new Wholesaler();
			copy.SuppressEntityEvents = true;
			copy.Id = this.Id;
			copy.OriginalId = this.OriginalId;
			copy.CompanyName = this.CompanyName;
			copy.CompanyShortName = this.CompanyShortName;
			copy.RetailPriCustomerNumber = this.RetailPriCustomerNumber;
			copy.RetailPriCustomerNumberLikeExp = this.RetailPriCustomerNumberLikeExp;
			copy.DefaultModCodeLength = this.DefaultModCodeLength;
			copy.DefaultPassCodeLength = this.DefaultPassCodeLength;
			copy.DefaultPasswordLength = this.DefaultPasswordLength;
			copy.DefaultCapsOk = this.DefaultCapsOk;
			copy.ModeratorTxt = this.ModeratorTxt;
			copy.ParticipantTxt = this.ParticipantTxt;
			copy.Enabled = this.Enabled;
			copy.CustomerNumberExceptionList = this.CustomerNumberExceptionList;
			copy.WebProductProviderName = this.WebProductProviderName;
			copy.WebProductProviderBranding = this.WebProductProviderBranding;
			copy.WebSecProductProvider = this.WebSecProductProvider;
			copy.CurrencyId = this.CurrencyId;
			copy.BillingWholesalerId = this.BillingWholesalerId;
			copy.BillingCustomerNumber = this.BillingCustomerNumber;
			copy.TaxableId = this.TaxableId;
			copy.WebSiteUrl = this.WebSiteUrl;
			copy.AdminSiteUrl = this.AdminSiteUrl;
			copy.AdminSiteIp = this.AdminSiteIp;
			copy.SelfServeUrl = this.SelfServeUrl;
			copy.SelfServeIp = this.SelfServeIp;
			copy.WebConferencingUrl = this.WebConferencingUrl;
			copy.WebConferencingIp = this.WebConferencingIp;
			copy.SupportEmail = this.SupportEmail;
			copy.SupportPhoneNumber = this.SupportPhoneNumber;
			copy.DoRetailBilling = this.DoRetailBilling;
			copy.CommissionLockDate = this.CommissionLockDate;
			copy.PortalId = this.PortalId;
			copy.BillingAddress1 = this.BillingAddress1;
			copy.BillingAddress2 = this.BillingAddress2;
			copy.BillingCity = this.BillingCity;
			copy.BillingCountry = this.BillingCountry;
			copy.BillingRegion = this.BillingRegion;
			copy.BillingPostalCode = this.BillingPostalCode;
			
			copy.CurrencyIdSource = MakeCopyOf(this.CurrencyIdSource) as Currency;
			copy.BillingCountrySource = MakeCopyOf(this.BillingCountrySource) as Country;
			copy.BillingRegionSource = MakeCopyOf(this.BillingRegionSource) as State;
			copy.TaxableIdSource = MakeCopyOf(this.TaxableIdSource) as Taxable;
		
			//deep copy nested objects
			copy.VerticalCollection = (TList<Vertical>) MakeCopyOf(this.VerticalCollection); 
			copy.LanguageIdLanguageCollection_From_IrWholesaler = (TList<Language>) MakeCopyOf(this.LanguageIdLanguageCollection_From_IrWholesaler); 
			copy.CustomerTransactionCollection = (TList<CustomerTransaction>) MakeCopyOf(this.CustomerTransactionCollection); 
			copy.CustomerDocumentCollection = (TList<CustomerDocument>) MakeCopyOf(this.CustomerDocumentCollection); 
			copy.CommissionCustomerCollection = (TList<CommissionCustomer>) MakeCopyOf(this.CommissionCustomerCollection); 
			copy.CommissionCollection = (TList<Commission>) MakeCopyOf(this.CommissionCollection); 
			copy.EmailTemplateCollection = (TList<EmailTemplate>) MakeCopyOf(this.EmailTemplateCollection); 
			copy.RatedCdrCollection = (TList<RatedCdr>) MakeCopyOf(this.RatedCdrCollection); 
			copy.Wholesaler_ProductCollection = (TList<Wholesaler_Product>) MakeCopyOf(this.Wholesaler_ProductCollection); 
			copy.AccountManagerCollection = (TList<AccountManager>) MakeCopyOf(this.AccountManagerCollection); 
			copy.ProductRateValueCollection = (TList<ProductRateValue>) MakeCopyOf(this.ProductRateValueCollection); 
			copy.DnisCollection = (TList<Dnis>) MakeCopyOf(this.DnisCollection); 
			copy.CustomerCollection = (TList<Customer>) MakeCopyOf(this.CustomerCollection); 
			copy.IrWholesalerCollection = (TList<IrWholesaler>) MakeCopyOf(this.IrWholesalerCollection); 
			copy.LeadCollection = (TList<Lead>) MakeCopyOf(this.LeadCollection); 
			copy.SalesPersonCollection = (TList<SalesPerson>) MakeCopyOf(this.SalesPersonCollection); 
			copy.DepartmentCollection = (TList<Department>) MakeCopyOf(this.DepartmentCollection); 
			copy.CompanyCollection = (TList<Company>) MakeCopyOf(this.CompanyCollection); 
			copy.TicketCollection = (TList<Ticket>) MakeCopyOf(this.TicketCollection); 
			copy.MarketingServiceCollection = (TList<MarketingService>) MakeCopyOf(this.MarketingServiceCollection); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		///  Returns a Typed Wholesaler Entity which is a deep copy of the current entity.
		///</summary>
		public virtual Wholesaler DeepCopy()
		{
			return EntityHelper.Clone<Wholesaler>(this as Wholesaler);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as WholesalerEntityData;
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as WholesalerEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(WholesalerColumn column)
		{
			switch(column)
			{
					case WholesalerColumn.Id:
					return entityData.Id != _originalData.Id;
					case WholesalerColumn.CompanyName:
					return entityData.CompanyName != _originalData.CompanyName;
					case WholesalerColumn.CompanyShortName:
					return entityData.CompanyShortName != _originalData.CompanyShortName;
					case WholesalerColumn.RetailPriCustomerNumber:
					return entityData.RetailPriCustomerNumber != _originalData.RetailPriCustomerNumber;
					case WholesalerColumn.RetailPriCustomerNumberLikeExp:
					return entityData.RetailPriCustomerNumberLikeExp != _originalData.RetailPriCustomerNumberLikeExp;
					case WholesalerColumn.DefaultModCodeLength:
					return entityData.DefaultModCodeLength != _originalData.DefaultModCodeLength;
					case WholesalerColumn.DefaultPassCodeLength:
					return entityData.DefaultPassCodeLength != _originalData.DefaultPassCodeLength;
					case WholesalerColumn.DefaultPasswordLength:
					return entityData.DefaultPasswordLength != _originalData.DefaultPasswordLength;
					case WholesalerColumn.DefaultCapsOk:
					return entityData.DefaultCapsOk != _originalData.DefaultCapsOk;
					case WholesalerColumn.ModeratorTxt:
					return entityData.ModeratorTxt != _originalData.ModeratorTxt;
					case WholesalerColumn.ParticipantTxt:
					return entityData.ParticipantTxt != _originalData.ParticipantTxt;
					case WholesalerColumn.Enabled:
					return entityData.Enabled != _originalData.Enabled;
					case WholesalerColumn.CustomerNumberExceptionList:
					return entityData.CustomerNumberExceptionList != _originalData.CustomerNumberExceptionList;
					case WholesalerColumn.WebProductProviderName:
					return entityData.WebProductProviderName != _originalData.WebProductProviderName;
					case WholesalerColumn.WebProductProviderBranding:
					return entityData.WebProductProviderBranding != _originalData.WebProductProviderBranding;
					case WholesalerColumn.WebSecProductProvider:
					return entityData.WebSecProductProvider != _originalData.WebSecProductProvider;
					case WholesalerColumn.CurrencyId:
					return entityData.CurrencyId != _originalData.CurrencyId;
					case WholesalerColumn.BillingWholesalerId:
					return entityData.BillingWholesalerId != _originalData.BillingWholesalerId;
					case WholesalerColumn.BillingCustomerNumber:
					return entityData.BillingCustomerNumber != _originalData.BillingCustomerNumber;
					case WholesalerColumn.TaxableId:
					return entityData.TaxableId != _originalData.TaxableId;
					case WholesalerColumn.WebSiteUrl:
					return entityData.WebSiteUrl != _originalData.WebSiteUrl;
					case WholesalerColumn.AdminSiteUrl:
					return entityData.AdminSiteUrl != _originalData.AdminSiteUrl;
					case WholesalerColumn.AdminSiteIp:
					return entityData.AdminSiteIp != _originalData.AdminSiteIp;
					case WholesalerColumn.SelfServeUrl:
					return entityData.SelfServeUrl != _originalData.SelfServeUrl;
					case WholesalerColumn.SelfServeIp:
					return entityData.SelfServeIp != _originalData.SelfServeIp;
					case WholesalerColumn.WebConferencingUrl:
					return entityData.WebConferencingUrl != _originalData.WebConferencingUrl;
					case WholesalerColumn.WebConferencingIp:
					return entityData.WebConferencingIp != _originalData.WebConferencingIp;
					case WholesalerColumn.SupportEmail:
					return entityData.SupportEmail != _originalData.SupportEmail;
					case WholesalerColumn.SupportPhoneNumber:
					return entityData.SupportPhoneNumber != _originalData.SupportPhoneNumber;
					case WholesalerColumn.DoRetailBilling:
					return entityData.DoRetailBilling != _originalData.DoRetailBilling;
					case WholesalerColumn.CommissionLockDate:
					return entityData.CommissionLockDate != _originalData.CommissionLockDate;
					case WholesalerColumn.PortalId:
					return entityData.PortalId != _originalData.PortalId;
					case WholesalerColumn.BillingAddress1:
					return entityData.BillingAddress1 != _originalData.BillingAddress1;
					case WholesalerColumn.BillingAddress2:
					return entityData.BillingAddress2 != _originalData.BillingAddress2;
					case WholesalerColumn.BillingCity:
					return entityData.BillingCity != _originalData.BillingCity;
					case WholesalerColumn.BillingCountry:
					return entityData.BillingCountry != _originalData.BillingCountry;
					case WholesalerColumn.BillingRegion:
					return entityData.BillingRegion != _originalData.BillingRegion;
					case WholesalerColumn.BillingPostalCode:
					return entityData.BillingPostalCode != _originalData.BillingPostalCode;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if [has data changed]; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.Id != _originalData.Id;
			result = result || entityData.CompanyName != _originalData.CompanyName;
			result = result || entityData.CompanyShortName != _originalData.CompanyShortName;
			result = result || entityData.RetailPriCustomerNumber != _originalData.RetailPriCustomerNumber;
			result = result || entityData.RetailPriCustomerNumberLikeExp != _originalData.RetailPriCustomerNumberLikeExp;
			result = result || entityData.DefaultModCodeLength != _originalData.DefaultModCodeLength;
			result = result || entityData.DefaultPassCodeLength != _originalData.DefaultPassCodeLength;
			result = result || entityData.DefaultPasswordLength != _originalData.DefaultPasswordLength;
			result = result || entityData.DefaultCapsOk != _originalData.DefaultCapsOk;
			result = result || entityData.ModeratorTxt != _originalData.ModeratorTxt;
			result = result || entityData.ParticipantTxt != _originalData.ParticipantTxt;
			result = result || entityData.Enabled != _originalData.Enabled;
			result = result || entityData.CustomerNumberExceptionList != _originalData.CustomerNumberExceptionList;
			result = result || entityData.WebProductProviderName != _originalData.WebProductProviderName;
			result = result || entityData.WebProductProviderBranding != _originalData.WebProductProviderBranding;
			result = result || entityData.WebSecProductProvider != _originalData.WebSecProductProvider;
			result = result || entityData.CurrencyId != _originalData.CurrencyId;
			result = result || entityData.BillingWholesalerId != _originalData.BillingWholesalerId;
			result = result || entityData.BillingCustomerNumber != _originalData.BillingCustomerNumber;
			result = result || entityData.TaxableId != _originalData.TaxableId;
			result = result || entityData.WebSiteUrl != _originalData.WebSiteUrl;
			result = result || entityData.AdminSiteUrl != _originalData.AdminSiteUrl;
			result = result || entityData.AdminSiteIp != _originalData.AdminSiteIp;
			result = result || entityData.SelfServeUrl != _originalData.SelfServeUrl;
			result = result || entityData.SelfServeIp != _originalData.SelfServeIp;
			result = result || entityData.WebConferencingUrl != _originalData.WebConferencingUrl;
			result = result || entityData.WebConferencingIp != _originalData.WebConferencingIp;
			result = result || entityData.SupportEmail != _originalData.SupportEmail;
			result = result || entityData.SupportPhoneNumber != _originalData.SupportPhoneNumber;
			result = result || entityData.DoRetailBilling != _originalData.DoRetailBilling;
			result = result || entityData.CommissionLockDate != _originalData.CommissionLockDate;
			result = result || entityData.PortalId != _originalData.PortalId;
			result = result || entityData.BillingAddress1 != _originalData.BillingAddress1;
			result = result || entityData.BillingAddress2 != _originalData.BillingAddress2;
			result = result || entityData.BillingCity != _originalData.BillingCity;
			result = result || entityData.BillingCountry != _originalData.BillingCountry;
			result = result || entityData.BillingRegion != _originalData.BillingRegion;
			result = result || entityData.BillingPostalCode != _originalData.BillingPostalCode;
			return result;
}	
		
		#endregion

        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="WholesalerBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			if (Object1 is WholesalerBase)
				return Equals(this, (WholesalerBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="WholesalerBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.Id.GetHashCode() ^ 
					((this.CompanyName == null) ? string.Empty : this.CompanyName.ToString()).GetHashCode() ^ 
					((this.CompanyShortName == null) ? string.Empty : this.CompanyShortName.ToString()).GetHashCode() ^ 
					((this.RetailPriCustomerNumber == null) ? string.Empty : this.RetailPriCustomerNumber.ToString()).GetHashCode() ^ 
					((this.RetailPriCustomerNumberLikeExp == null) ? string.Empty : this.RetailPriCustomerNumberLikeExp.ToString()).GetHashCode() ^ 
					((this.DefaultModCodeLength == null) ? string.Empty : this.DefaultModCodeLength.ToString()).GetHashCode() ^ 
					((this.DefaultPassCodeLength == null) ? string.Empty : this.DefaultPassCodeLength.ToString()).GetHashCode() ^ 
					((this.DefaultPasswordLength == null) ? string.Empty : this.DefaultPasswordLength.ToString()).GetHashCode() ^ 
					((this.DefaultCapsOk == null) ? string.Empty : this.DefaultCapsOk.ToString()).GetHashCode() ^ 
					((this.ModeratorTxt == null) ? string.Empty : this.ModeratorTxt.ToString()).GetHashCode() ^ 
					((this.ParticipantTxt == null) ? string.Empty : this.ParticipantTxt.ToString()).GetHashCode() ^ 
					((this.Enabled == null) ? string.Empty : this.Enabled.ToString()).GetHashCode() ^ 
					((this.CustomerNumberExceptionList == null) ? string.Empty : this.CustomerNumberExceptionList.ToString()).GetHashCode() ^ 
					((this.WebProductProviderName == null) ? string.Empty : this.WebProductProviderName.ToString()).GetHashCode() ^ 
					((this.WebProductProviderBranding == null) ? string.Empty : this.WebProductProviderBranding.ToString()).GetHashCode() ^ 
					((this.WebSecProductProvider == null) ? string.Empty : this.WebSecProductProvider.ToString()).GetHashCode() ^ 
					((this.CurrencyId == null) ? string.Empty : this.CurrencyId.ToString()).GetHashCode() ^ 
					((this.BillingWholesalerId == null) ? string.Empty : this.BillingWholesalerId.ToString()).GetHashCode() ^ 
					((this.BillingCustomerNumber == null) ? string.Empty : this.BillingCustomerNumber.ToString()).GetHashCode() ^ 
					this.TaxableId.GetHashCode() ^ 
					((this.WebSiteUrl == null) ? string.Empty : this.WebSiteUrl.ToString()).GetHashCode() ^ 
					((this.AdminSiteUrl == null) ? string.Empty : this.AdminSiteUrl.ToString()).GetHashCode() ^ 
					((this.AdminSiteIp == null) ? string.Empty : this.AdminSiteIp.ToString()).GetHashCode() ^ 
					((this.SelfServeUrl == null) ? string.Empty : this.SelfServeUrl.ToString()).GetHashCode() ^ 
					((this.SelfServeIp == null) ? string.Empty : this.SelfServeIp.ToString()).GetHashCode() ^ 
					((this.WebConferencingUrl == null) ? string.Empty : this.WebConferencingUrl.ToString()).GetHashCode() ^ 
					((this.WebConferencingIp == null) ? string.Empty : this.WebConferencingIp.ToString()).GetHashCode() ^ 
					((this.SupportEmail == null) ? string.Empty : this.SupportEmail.ToString()).GetHashCode() ^ 
					((this.SupportPhoneNumber == null) ? string.Empty : this.SupportPhoneNumber.ToString()).GetHashCode() ^ 
					this.DoRetailBilling.GetHashCode() ^ 
					((this.CommissionLockDate == null) ? string.Empty : this.CommissionLockDate.ToString()).GetHashCode() ^ 
					((this.PortalId == null) ? string.Empty : this.PortalId.ToString()).GetHashCode() ^ 
					((this.BillingAddress1 == null) ? string.Empty : this.BillingAddress1.ToString()).GetHashCode() ^ 
					((this.BillingAddress2 == null) ? string.Empty : this.BillingAddress2.ToString()).GetHashCode() ^ 
					((this.BillingCity == null) ? string.Empty : this.BillingCity.ToString()).GetHashCode() ^ 
					((this.BillingCountry == null) ? string.Empty : this.BillingCountry.ToString()).GetHashCode() ^ 
					((this.BillingRegion == null) ? string.Empty : this.BillingRegion.ToString()).GetHashCode() ^ 
					((this.BillingPostalCode == null) ? string.Empty : this.BillingPostalCode.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="WholesalerBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(WholesalerBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="WholesalerBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="WholesalerBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="WholesalerBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(WholesalerBase Object1, WholesalerBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if ( Object1.CompanyName != null && Object2.CompanyName != null )
			{
				if (Object1.CompanyName != Object2.CompanyName)
					equal = false;
			}
			else if (Object1.CompanyName == null ^ Object2.CompanyName == null )
			{
				equal = false;
			}
			if ( Object1.CompanyShortName != null && Object2.CompanyShortName != null )
			{
				if (Object1.CompanyShortName != Object2.CompanyShortName)
					equal = false;
			}
			else if (Object1.CompanyShortName == null ^ Object2.CompanyShortName == null )
			{
				equal = false;
			}
			if ( Object1.RetailPriCustomerNumber != null && Object2.RetailPriCustomerNumber != null )
			{
				if (Object1.RetailPriCustomerNumber != Object2.RetailPriCustomerNumber)
					equal = false;
			}
			else if (Object1.RetailPriCustomerNumber == null ^ Object2.RetailPriCustomerNumber == null )
			{
				equal = false;
			}
			if ( Object1.RetailPriCustomerNumberLikeExp != null && Object2.RetailPriCustomerNumberLikeExp != null )
			{
				if (Object1.RetailPriCustomerNumberLikeExp != Object2.RetailPriCustomerNumberLikeExp)
					equal = false;
			}
			else if (Object1.RetailPriCustomerNumberLikeExp == null ^ Object2.RetailPriCustomerNumberLikeExp == null )
			{
				equal = false;
			}
			if ( Object1.DefaultModCodeLength != null && Object2.DefaultModCodeLength != null )
			{
				if (Object1.DefaultModCodeLength != Object2.DefaultModCodeLength)
					equal = false;
			}
			else if (Object1.DefaultModCodeLength == null ^ Object2.DefaultModCodeLength == null )
			{
				equal = false;
			}
			if ( Object1.DefaultPassCodeLength != null && Object2.DefaultPassCodeLength != null )
			{
				if (Object1.DefaultPassCodeLength != Object2.DefaultPassCodeLength)
					equal = false;
			}
			else if (Object1.DefaultPassCodeLength == null ^ Object2.DefaultPassCodeLength == null )
			{
				equal = false;
			}
			if ( Object1.DefaultPasswordLength != null && Object2.DefaultPasswordLength != null )
			{
				if (Object1.DefaultPasswordLength != Object2.DefaultPasswordLength)
					equal = false;
			}
			else if (Object1.DefaultPasswordLength == null ^ Object2.DefaultPasswordLength == null )
			{
				equal = false;
			}
			if ( Object1.DefaultCapsOk != null && Object2.DefaultCapsOk != null )
			{
				if (Object1.DefaultCapsOk != Object2.DefaultCapsOk)
					equal = false;
			}
			else if (Object1.DefaultCapsOk == null ^ Object2.DefaultCapsOk == null )
			{
				equal = false;
			}
			if ( Object1.ModeratorTxt != null && Object2.ModeratorTxt != null )
			{
				if (Object1.ModeratorTxt != Object2.ModeratorTxt)
					equal = false;
			}
			else if (Object1.ModeratorTxt == null ^ Object2.ModeratorTxt == null )
			{
				equal = false;
			}
			if ( Object1.ParticipantTxt != null && Object2.ParticipantTxt != null )
			{
				if (Object1.ParticipantTxt != Object2.ParticipantTxt)
					equal = false;
			}
			else if (Object1.ParticipantTxt == null ^ Object2.ParticipantTxt == null )
			{
				equal = false;
			}
			if ( Object1.Enabled != null && Object2.Enabled != null )
			{
				if (Object1.Enabled != Object2.Enabled)
					equal = false;
			}
			else if (Object1.Enabled == null ^ Object2.Enabled == null )
			{
				equal = false;
			}
			if ( Object1.CustomerNumberExceptionList != null && Object2.CustomerNumberExceptionList != null )
			{
				if (Object1.CustomerNumberExceptionList != Object2.CustomerNumberExceptionList)
					equal = false;
			}
			else if (Object1.CustomerNumberExceptionList == null ^ Object2.CustomerNumberExceptionList == null )
			{
				equal = false;
			}
			if ( Object1.WebProductProviderName != null && Object2.WebProductProviderName != null )
			{
				if (Object1.WebProductProviderName != Object2.WebProductProviderName)
					equal = false;
			}
			else if (Object1.WebProductProviderName == null ^ Object2.WebProductProviderName == null )
			{
				equal = false;
			}
			if ( Object1.WebProductProviderBranding != null && Object2.WebProductProviderBranding != null )
			{
				if (Object1.WebProductProviderBranding != Object2.WebProductProviderBranding)
					equal = false;
			}
			else if (Object1.WebProductProviderBranding == null ^ Object2.WebProductProviderBranding == null )
			{
				equal = false;
			}
			if ( Object1.WebSecProductProvider != null && Object2.WebSecProductProvider != null )
			{
				if (Object1.WebSecProductProvider != Object2.WebSecProductProvider)
					equal = false;
			}
			else if (Object1.WebSecProductProvider == null ^ Object2.WebSecProductProvider == null )
			{
				equal = false;
			}
			if ( Object1.CurrencyId != null && Object2.CurrencyId != null )
			{
				if (Object1.CurrencyId != Object2.CurrencyId)
					equal = false;
			}
			else if (Object1.CurrencyId == null ^ Object2.CurrencyId == null )
			{
				equal = false;
			}
			if ( Object1.BillingWholesalerId != null && Object2.BillingWholesalerId != null )
			{
				if (Object1.BillingWholesalerId != Object2.BillingWholesalerId)
					equal = false;
			}
			else if (Object1.BillingWholesalerId == null ^ Object2.BillingWholesalerId == null )
			{
				equal = false;
			}
			if ( Object1.BillingCustomerNumber != null && Object2.BillingCustomerNumber != null )
			{
				if (Object1.BillingCustomerNumber != Object2.BillingCustomerNumber)
					equal = false;
			}
			else if (Object1.BillingCustomerNumber == null ^ Object2.BillingCustomerNumber == null )
			{
				equal = false;
			}
			if (Object1.TaxableId != Object2.TaxableId)
				equal = false;
			if ( Object1.WebSiteUrl != null && Object2.WebSiteUrl != null )
			{
				if (Object1.WebSiteUrl != Object2.WebSiteUrl)
					equal = false;
			}
			else if (Object1.WebSiteUrl == null ^ Object2.WebSiteUrl == null )
			{
				equal = false;
			}
			if ( Object1.AdminSiteUrl != null && Object2.AdminSiteUrl != null )
			{
				if (Object1.AdminSiteUrl != Object2.AdminSiteUrl)
					equal = false;
			}
			else if (Object1.AdminSiteUrl == null ^ Object2.AdminSiteUrl == null )
			{
				equal = false;
			}
			if ( Object1.AdminSiteIp != null && Object2.AdminSiteIp != null )
			{
				if (Object1.AdminSiteIp != Object2.AdminSiteIp)
					equal = false;
			}
			else if (Object1.AdminSiteIp == null ^ Object2.AdminSiteIp == null )
			{
				equal = false;
			}
			if ( Object1.SelfServeUrl != null && Object2.SelfServeUrl != null )
			{
				if (Object1.SelfServeUrl != Object2.SelfServeUrl)
					equal = false;
			}
			else if (Object1.SelfServeUrl == null ^ Object2.SelfServeUrl == null )
			{
				equal = false;
			}
			if ( Object1.SelfServeIp != null && Object2.SelfServeIp != null )
			{
				if (Object1.SelfServeIp != Object2.SelfServeIp)
					equal = false;
			}
			else if (Object1.SelfServeIp == null ^ Object2.SelfServeIp == null )
			{
				equal = false;
			}
			if ( Object1.WebConferencingUrl != null && Object2.WebConferencingUrl != null )
			{
				if (Object1.WebConferencingUrl != Object2.WebConferencingUrl)
					equal = false;
			}
			else if (Object1.WebConferencingUrl == null ^ Object2.WebConferencingUrl == null )
			{
				equal = false;
			}
			if ( Object1.WebConferencingIp != null && Object2.WebConferencingIp != null )
			{
				if (Object1.WebConferencingIp != Object2.WebConferencingIp)
					equal = false;
			}
			else if (Object1.WebConferencingIp == null ^ Object2.WebConferencingIp == null )
			{
				equal = false;
			}
			if ( Object1.SupportEmail != null && Object2.SupportEmail != null )
			{
				if (Object1.SupportEmail != Object2.SupportEmail)
					equal = false;
			}
			else if (Object1.SupportEmail == null ^ Object2.SupportEmail == null )
			{
				equal = false;
			}
			if ( Object1.SupportPhoneNumber != null && Object2.SupportPhoneNumber != null )
			{
				if (Object1.SupportPhoneNumber != Object2.SupportPhoneNumber)
					equal = false;
			}
			else if (Object1.SupportPhoneNumber == null ^ Object2.SupportPhoneNumber == null )
			{
				equal = false;
			}
			if (Object1.DoRetailBilling != Object2.DoRetailBilling)
				equal = false;
			if ( Object1.CommissionLockDate != null && Object2.CommissionLockDate != null )
			{
				if (Object1.CommissionLockDate != Object2.CommissionLockDate)
					equal = false;
			}
			else if (Object1.CommissionLockDate == null ^ Object2.CommissionLockDate == null )
			{
				equal = false;
			}
			if ( Object1.PortalId != null && Object2.PortalId != null )
			{
				if (Object1.PortalId != Object2.PortalId)
					equal = false;
			}
			else if (Object1.PortalId == null ^ Object2.PortalId == null )
			{
				equal = false;
			}
			if ( Object1.BillingAddress1 != null && Object2.BillingAddress1 != null )
			{
				if (Object1.BillingAddress1 != Object2.BillingAddress1)
					equal = false;
			}
			else if (Object1.BillingAddress1 == null ^ Object2.BillingAddress1 == null )
			{
				equal = false;
			}
			if ( Object1.BillingAddress2 != null && Object2.BillingAddress2 != null )
			{
				if (Object1.BillingAddress2 != Object2.BillingAddress2)
					equal = false;
			}
			else if (Object1.BillingAddress2 == null ^ Object2.BillingAddress2 == null )
			{
				equal = false;
			}
			if ( Object1.BillingCity != null && Object2.BillingCity != null )
			{
				if (Object1.BillingCity != Object2.BillingCity)
					equal = false;
			}
			else if (Object1.BillingCity == null ^ Object2.BillingCity == null )
			{
				equal = false;
			}
			if ( Object1.BillingCountry != null && Object2.BillingCountry != null )
			{
				if (Object1.BillingCountry != Object2.BillingCountry)
					equal = false;
			}
			else if (Object1.BillingCountry == null ^ Object2.BillingCountry == null )
			{
				equal = false;
			}
			if ( Object1.BillingRegion != null && Object2.BillingRegion != null )
			{
				if (Object1.BillingRegion != Object2.BillingRegion)
					equal = false;
			}
			else if (Object1.BillingRegion == null ^ Object2.BillingRegion == null )
			{
				equal = false;
			}
			if ( Object1.BillingPostalCode != null && Object2.BillingPostalCode != null )
			{
				if (Object1.BillingPostalCode != Object2.BillingPostalCode)
					equal = false;
			}
			else if (Object1.BillingPostalCode == null ^ Object2.BillingPostalCode == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((WholesalerBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static WholesalerComparer GetComparer()
        {
            return new WholesalerComparer();
        }
        */

        // Comparer delegates back to Wholesaler
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(Wholesaler rhs, WholesalerColumn which)
        {
            switch (which)
            {
            	
            	
            	case WholesalerColumn.Id:
            		return this.Id.CompareTo(rhs.Id);
            		
            		                 
            	
            	
            	case WholesalerColumn.CompanyName:
            		return this.CompanyName.CompareTo(rhs.CompanyName);
            		
            		                 
            	
            	
            	case WholesalerColumn.CompanyShortName:
            		return this.CompanyShortName.CompareTo(rhs.CompanyShortName);
            		
            		                 
            	
            	
            	case WholesalerColumn.RetailPriCustomerNumber:
            		return this.RetailPriCustomerNumber.CompareTo(rhs.RetailPriCustomerNumber);
            		
            		                 
            	
            	
            	case WholesalerColumn.RetailPriCustomerNumberLikeExp:
            		return this.RetailPriCustomerNumberLikeExp.CompareTo(rhs.RetailPriCustomerNumberLikeExp);
            		
            		                 
            	
            	
            	case WholesalerColumn.DefaultModCodeLength:
            		return this.DefaultModCodeLength.Value.CompareTo(rhs.DefaultModCodeLength.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.DefaultPassCodeLength:
            		return this.DefaultPassCodeLength.Value.CompareTo(rhs.DefaultPassCodeLength.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.DefaultPasswordLength:
            		return this.DefaultPasswordLength.Value.CompareTo(rhs.DefaultPasswordLength.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.DefaultCapsOk:
            		return this.DefaultCapsOk.Value.CompareTo(rhs.DefaultCapsOk.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.ModeratorTxt:
            		return this.ModeratorTxt.CompareTo(rhs.ModeratorTxt);
            		
            		                 
            	
            	
            	case WholesalerColumn.ParticipantTxt:
            		return this.ParticipantTxt.CompareTo(rhs.ParticipantTxt);
            		
            		                 
            	
            	
            	case WholesalerColumn.Enabled:
            		return this.Enabled.Value.CompareTo(rhs.Enabled.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.CustomerNumberExceptionList:
            		return this.CustomerNumberExceptionList.CompareTo(rhs.CustomerNumberExceptionList);
            		
            		                 
            	
            	
            	case WholesalerColumn.WebProductProviderName:
            		return this.WebProductProviderName.CompareTo(rhs.WebProductProviderName);
            		
            		                 
            	
            	
            	case WholesalerColumn.WebProductProviderBranding:
            		return this.WebProductProviderBranding.CompareTo(rhs.WebProductProviderBranding);
            		
            		                 
            	
            	
            	case WholesalerColumn.WebSecProductProvider:
            		return this.WebSecProductProvider.CompareTo(rhs.WebSecProductProvider);
            		
            		                 
            	
            	
            	case WholesalerColumn.CurrencyId:
            		return this.CurrencyId.CompareTo(rhs.CurrencyId);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingWholesalerId:
            		return this.BillingWholesalerId.CompareTo(rhs.BillingWholesalerId);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingCustomerNumber:
            		return this.BillingCustomerNumber.CompareTo(rhs.BillingCustomerNumber);
            		
            		                 
            	
            	
            	case WholesalerColumn.TaxableId:
            		return this.TaxableId.CompareTo(rhs.TaxableId);
            		
            		                 
            	
            	
            	case WholesalerColumn.WebSiteUrl:
            		return this.WebSiteUrl.CompareTo(rhs.WebSiteUrl);
            		
            		                 
            	
            	
            	case WholesalerColumn.AdminSiteUrl:
            		return this.AdminSiteUrl.CompareTo(rhs.AdminSiteUrl);
            		
            		                 
            	
            	
            	case WholesalerColumn.AdminSiteIp:
            		return this.AdminSiteIp.CompareTo(rhs.AdminSiteIp);
            		
            		                 
            	
            	
            	case WholesalerColumn.SelfServeUrl:
            		return this.SelfServeUrl.CompareTo(rhs.SelfServeUrl);
            		
            		                 
            	
            	
            	case WholesalerColumn.SelfServeIp:
            		return this.SelfServeIp.CompareTo(rhs.SelfServeIp);
            		
            		                 
            	
            	
            	case WholesalerColumn.WebConferencingUrl:
            		return this.WebConferencingUrl.CompareTo(rhs.WebConferencingUrl);
            		
            		                 
            	
            	
            	case WholesalerColumn.WebConferencingIp:
            		return this.WebConferencingIp.CompareTo(rhs.WebConferencingIp);
            		
            		                 
            	
            	
            	case WholesalerColumn.SupportEmail:
            		return this.SupportEmail.CompareTo(rhs.SupportEmail);
            		
            		                 
            	
            	
            	case WholesalerColumn.SupportPhoneNumber:
            		return this.SupportPhoneNumber.CompareTo(rhs.SupportPhoneNumber);
            		
            		                 
            	
            	
            	case WholesalerColumn.DoRetailBilling:
            		return this.DoRetailBilling.CompareTo(rhs.DoRetailBilling);
            		
            		                 
            	
            	
            	case WholesalerColumn.CommissionLockDate:
            		return this.CommissionLockDate.Value.CompareTo(rhs.CommissionLockDate.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.PortalId:
            		return this.PortalId.Value.CompareTo(rhs.PortalId.Value);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingAddress1:
            		return this.BillingAddress1.CompareTo(rhs.BillingAddress1);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingAddress2:
            		return this.BillingAddress2.CompareTo(rhs.BillingAddress2);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingCity:
            		return this.BillingCity.CompareTo(rhs.BillingCity);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingCountry:
            		return this.BillingCountry.CompareTo(rhs.BillingCountry);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingRegion:
            		return this.BillingRegion.CompareTo(rhs.BillingRegion);
            		
            		                 
            	
            	
            	case WholesalerColumn.BillingPostalCode:
            		return this.BillingPostalCode.CompareTo(rhs.BillingPostalCode);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<WholesalerKey> Members
		
		// member variable for the EntityId property
		private WholesalerKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual WholesalerKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new WholesalerKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("Wholesaler")
					.Append("|").Append( this.Id.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{39}{38}- Id: {0}{38}- CompanyName: {1}{38}- CompanyShortName: {2}{38}- RetailPriCustomerNumber: {3}{38}- RetailPriCustomerNumberLikeExp: {4}{38}- DefaultModCodeLength: {5}{38}- DefaultPassCodeLength: {6}{38}- DefaultPasswordLength: {7}{38}- DefaultCapsOk: {8}{38}- ModeratorTxt: {9}{38}- ParticipantTxt: {10}{38}- Enabled: {11}{38}- CustomerNumberExceptionList: {12}{38}- WebProductProviderName: {13}{38}- WebProductProviderBranding: {14}{38}- WebSecProductProvider: {15}{38}- CurrencyId: {16}{38}- BillingWholesalerId: {17}{38}- BillingCustomerNumber: {18}{38}- TaxableId: {19}{38}- WebSiteUrl: {20}{38}- AdminSiteUrl: {21}{38}- AdminSiteIp: {22}{38}- SelfServeUrl: {23}{38}- SelfServeIp: {24}{38}- WebConferencingUrl: {25}{38}- WebConferencingIp: {26}{38}- SupportEmail: {27}{38}- SupportPhoneNumber: {28}{38}- DoRetailBilling: {29}{38}- CommissionLockDate: {30}{38}- PortalId: {31}{38}- BillingAddress1: {32}{38}- BillingAddress2: {33}{38}- BillingCity: {34}{38}- BillingCountry: {35}{38}- BillingRegion: {36}{38}- BillingPostalCode: {37}{38}", 
				this.Id,
				(this.CompanyName == null) ? string.Empty : this.CompanyName.ToString(),
				(this.CompanyShortName == null) ? string.Empty : this.CompanyShortName.ToString(),
				(this.RetailPriCustomerNumber == null) ? string.Empty : this.RetailPriCustomerNumber.ToString(),
				(this.RetailPriCustomerNumberLikeExp == null) ? string.Empty : this.RetailPriCustomerNumberLikeExp.ToString(),
				(this.DefaultModCodeLength == null) ? string.Empty : this.DefaultModCodeLength.ToString(),
				(this.DefaultPassCodeLength == null) ? string.Empty : this.DefaultPassCodeLength.ToString(),
				(this.DefaultPasswordLength == null) ? string.Empty : this.DefaultPasswordLength.ToString(),
				(this.DefaultCapsOk == null) ? string.Empty : this.DefaultCapsOk.ToString(),
				(this.ModeratorTxt == null) ? string.Empty : this.ModeratorTxt.ToString(),
				(this.ParticipantTxt == null) ? string.Empty : this.ParticipantTxt.ToString(),
				(this.Enabled == null) ? string.Empty : this.Enabled.ToString(),
				(this.CustomerNumberExceptionList == null) ? string.Empty : this.CustomerNumberExceptionList.ToString(),
				(this.WebProductProviderName == null) ? string.Empty : this.WebProductProviderName.ToString(),
				(this.WebProductProviderBranding == null) ? string.Empty : this.WebProductProviderBranding.ToString(),
				(this.WebSecProductProvider == null) ? string.Empty : this.WebSecProductProvider.ToString(),
				(this.CurrencyId == null) ? string.Empty : this.CurrencyId.ToString(),
				(this.BillingWholesalerId == null) ? string.Empty : this.BillingWholesalerId.ToString(),
				(this.BillingCustomerNumber == null) ? string.Empty : this.BillingCustomerNumber.ToString(),
				this.TaxableId,
				(this.WebSiteUrl == null) ? string.Empty : this.WebSiteUrl.ToString(),
				(this.AdminSiteUrl == null) ? string.Empty : this.AdminSiteUrl.ToString(),
				(this.AdminSiteIp == null) ? string.Empty : this.AdminSiteIp.ToString(),
				(this.SelfServeUrl == null) ? string.Empty : this.SelfServeUrl.ToString(),
				(this.SelfServeIp == null) ? string.Empty : this.SelfServeIp.ToString(),
				(this.WebConferencingUrl == null) ? string.Empty : this.WebConferencingUrl.ToString(),
				(this.WebConferencingIp == null) ? string.Empty : this.WebConferencingIp.ToString(),
				(this.SupportEmail == null) ? string.Empty : this.SupportEmail.ToString(),
				(this.SupportPhoneNumber == null) ? string.Empty : this.SupportPhoneNumber.ToString(),
				this.DoRetailBilling,
				(this.CommissionLockDate == null) ? string.Empty : this.CommissionLockDate.ToString(),
				(this.PortalId == null) ? string.Empty : this.PortalId.ToString(),
				(this.BillingAddress1 == null) ? string.Empty : this.BillingAddress1.ToString(),
				(this.BillingAddress2 == null) ? string.Empty : this.BillingAddress2.ToString(),
				(this.BillingCity == null) ? string.Empty : this.BillingCity.ToString(),
				(this.BillingCountry == null) ? string.Empty : this.BillingCountry.ToString(),
				(this.BillingRegion == null) ? string.Empty : this.BillingRegion.ToString(),
				(this.BillingPostalCode == null) ? string.Empty : this.BillingPostalCode.ToString(),
				System.Environment.NewLine, 
				this.GetType());
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'Wholesaler' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class WholesalerEntityData : ICloneable
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
			/// <summary>			
			/// ID : 
			/// </summary>
			/// <remarks>Member of the primary key of the underlying table "Wholesaler"</remarks>
			public System.String Id;
				
			/// <summary>
			/// keep a copy of the original so it can be used for editable primary keys.
			/// </summary>
			public System.String OriginalId;
			
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// CompanyName : 
		/// </summary>
		public System.String		  CompanyName = null;
		
		/// <summary>
		/// CompanyShortName : 
		/// </summary>
		public System.String		  CompanyShortName = null;
		
		/// <summary>
		/// RetailPriCustomerNumber : 
		/// </summary>
		public System.String		  RetailPriCustomerNumber = null;
		
		/// <summary>
		/// RetailPriCustomerNumberLIKEExp : 
		/// </summary>
		public System.String		  RetailPriCustomerNumberLikeExp = null;
		
		/// <summary>
		/// DefaultModCodeLength : 
		/// </summary>
		public System.Byte?		  DefaultModCodeLength = null;
		
		/// <summary>
		/// DefaultPassCodeLength : 
		/// </summary>
		public System.Byte?		  DefaultPassCodeLength = null;
		
		/// <summary>
		/// DefaultPasswordLength : 
		/// </summary>
		public System.Byte?		  DefaultPasswordLength = null;
		
		/// <summary>
		/// DefaultCapsOK : 
		/// </summary>
		public System.Boolean?		  DefaultCapsOk = null;
		
		/// <summary>
		/// ModeratorTxt : 
		/// </summary>
		public System.String		  ModeratorTxt = null;
		
		/// <summary>
		/// ParticipantTxt : 
		/// </summary>
		public System.String		  ParticipantTxt = null;
		
		/// <summary>
		/// Enabled : 
		/// </summary>
		public System.Boolean?		  Enabled = null;
		
		/// <summary>
		/// CustomerNumberExceptionList : 
		/// </summary>
		public System.String		  CustomerNumberExceptionList = null;
		
		/// <summary>
		/// WebProductProviderName : 
		/// </summary>
		public System.String		  WebProductProviderName = null;
		
		/// <summary>
		/// WebProductProviderBranding : 
		/// </summary>
		public System.String		  WebProductProviderBranding = null;
		
		/// <summary>
		/// WebSecProductProvider : 
		/// </summary>
		public System.String		  WebSecProductProvider = null;
		
		/// <summary>
		/// CurrencyID : 
		/// </summary>
		public System.String		  CurrencyId = null;
		
		/// <summary>
		/// BillingWholesalerID : 
		/// </summary>
		public System.String		  BillingWholesalerId = null;
		
		/// <summary>
		/// BillingCustomerNumber : 
		/// </summary>
		public System.String		  BillingCustomerNumber = null;
		
		/// <summary>
		/// TaxableID : 
		/// </summary>
		public System.Int32		  TaxableId = (int)0;
		
		/// <summary>
		/// WebSiteURL : 
		/// </summary>
		public System.String		  WebSiteUrl = null;
		
		/// <summary>
		/// AdminSiteURL : 
		/// </summary>
		public System.String		  AdminSiteUrl = null;
		
		/// <summary>
		/// AdminSiteIP : 
		/// </summary>
		public System.String		  AdminSiteIp = null;
		
		/// <summary>
		/// SelfServeURL : 
		/// </summary>
		public System.String		  SelfServeUrl = null;
		
		/// <summary>
		/// SelfServeIP : 
		/// </summary>
		public System.String		  SelfServeIp = null;
		
		/// <summary>
		/// WebConferencingURL : 
		/// </summary>
		public System.String		  WebConferencingUrl = null;
		
		/// <summary>
		/// WebConferencingIP : 
		/// </summary>
		public System.String		  WebConferencingIp = null;
		
		/// <summary>
		/// SupportEmail : 
		/// </summary>
		public System.String		  SupportEmail = null;
		
		/// <summary>
		/// SupportPhoneNumber : 
		/// </summary>
		public System.String		  SupportPhoneNumber = null;
		
		/// <summary>
		/// DoRetailBilling : 
		/// </summary>
		public System.Boolean		  DoRetailBilling = false;
		
		/// <summary>
		/// CommissionLockDate : 
		/// </summary>
		public System.DateTime?		  CommissionLockDate = null;
		
		/// <summary>
		/// PortalID : Link to the DNN Portal
		/// </summary>
		public System.Int32?		  PortalId = null;
		
		/// <summary>
		/// BillingAddress1 : 
		/// </summary>
		public System.String		  BillingAddress1 = null;
		
		/// <summary>
		/// BillingAddress2 : 
		/// </summary>
		public System.String		  BillingAddress2 = null;
		
		/// <summary>
		/// BillingCity : 
		/// </summary>
		public System.String		  BillingCity = null;
		
		/// <summary>
		/// BillingCountry : 
		/// </summary>
		public System.String		  BillingCountry = null;
		
		/// <summary>
		/// BillingRegion : State, Province, etc.
		/// </summary>
		public System.String		  BillingRegion = null;
		
		/// <summary>
		/// BillingPostalCode : 
		/// </summary>
		public System.String		  BillingPostalCode = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private Currency _currencyIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Currency"/>.
		/// </summary>
		/// <value>The source Currency for CurrencyId.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Currency CurrencyIdSource
      	{
            get { return this._currencyIdSource; }
            set { this._currencyIdSource = value; }
      	}
		private Country _billingCountrySource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Country"/>.
		/// </summary>
		/// <value>The source Country for BillingCountry.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Country BillingCountrySource
      	{
            get { return this._billingCountrySource; }
            set { this._billingCountrySource = value; }
      	}
		private State _billingRegionSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="State"/>.
		/// </summary>
		/// <value>The source State for BillingRegion.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual State BillingRegionSource
      	{
            get { return this._billingRegionSource; }
            set { this._billingRegionSource = value; }
      	}
		private Taxable _taxableIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Taxable"/>.
		/// </summary>
		/// <value>The source Taxable for TaxableId.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Taxable TaxableIdSource
      	{
            get { return this._taxableIdSource; }
            set { this._taxableIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region VerticalCollection
		
		private TList<Vertical> _verticalWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _verticalWholesalerId
		/// </summary>	
		public TList<Vertical> VerticalCollection
		{
			get
			{
				if (_verticalWholesalerId == null)
				{
				_verticalWholesalerId = new TList<Vertical>();
				}
	
				return _verticalWholesalerId;
			}
			set { _verticalWholesalerId = value; }
		}
		
		#endregion

		#region LanguageIdLanguageCollection_From_IrWholesaler
		
		private TList<Language> languageIdLanguageCollection_From_IrWholesaler;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table languageIdLanguageCollection_From_IrWholesaler
		/// </summary>	
		public TList<Language> LanguageIdLanguageCollection_From_IrWholesaler
		{
			get
			{
				if (languageIdLanguageCollection_From_IrWholesaler == null)
				{
				languageIdLanguageCollection_From_IrWholesaler = new TList<Language>();
				}
	
				return languageIdLanguageCollection_From_IrWholesaler;
			}
			set { languageIdLanguageCollection_From_IrWholesaler = value; }
		}
		
		#endregion 

		#region CustomerTransactionCollection
		
		private TList<CustomerTransaction> _customerTransactionWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _customerTransactionWholesalerId
		/// </summary>	
		public TList<CustomerTransaction> CustomerTransactionCollection
		{
			get
			{
				if (_customerTransactionWholesalerId == null)
				{
				_customerTransactionWholesalerId = new TList<CustomerTransaction>();
				}
	
				return _customerTransactionWholesalerId;
			}
			set { _customerTransactionWholesalerId = value; }
		}
		
		#endregion

		#region CustomerDocumentCollection
		
		private TList<CustomerDocument> _customerDocumentWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _customerDocumentWholesalerId
		/// </summary>	
		public TList<CustomerDocument> CustomerDocumentCollection
		{
			get
			{
				if (_customerDocumentWholesalerId == null)
				{
				_customerDocumentWholesalerId = new TList<CustomerDocument>();
				}
	
				return _customerDocumentWholesalerId;
			}
			set { _customerDocumentWholesalerId = value; }
		}
		
		#endregion

		#region CommissionCustomerCollection
		
		private TList<CommissionCustomer> _commissionCustomerWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _commissionCustomerWholesalerId
		/// </summary>	
		public TList<CommissionCustomer> CommissionCustomerCollection
		{
			get
			{
				if (_commissionCustomerWholesalerId == null)
				{
				_commissionCustomerWholesalerId = new TList<CommissionCustomer>();
				}
	
				return _commissionCustomerWholesalerId;
			}
			set { _commissionCustomerWholesalerId = value; }
		}
		
		#endregion

		#region CommissionCollection
		
		private TList<Commission> _commissionWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _commissionWholesalerId
		/// </summary>	
		public TList<Commission> CommissionCollection
		{
			get
			{
				if (_commissionWholesalerId == null)
				{
				_commissionWholesalerId = new TList<Commission>();
				}
	
				return _commissionWholesalerId;
			}
			set { _commissionWholesalerId = value; }
		}
		
		#endregion

		#region EmailTemplateCollection
		
		private TList<EmailTemplate> _emailTemplateWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _emailTemplateWholesalerId
		/// </summary>	
		public TList<EmailTemplate> EmailTemplateCollection
		{
			get
			{
				if (_emailTemplateWholesalerId == null)
				{
				_emailTemplateWholesalerId = new TList<EmailTemplate>();
				}
	
				return _emailTemplateWholesalerId;
			}
			set { _emailTemplateWholesalerId = value; }
		}
		
		#endregion

		#region RatedCdrCollection
		
		private TList<RatedCdr> _ratedCdrWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ratedCdrWholesalerId
		/// </summary>	
		public TList<RatedCdr> RatedCdrCollection
		{
			get
			{
				if (_ratedCdrWholesalerId == null)
				{
				_ratedCdrWholesalerId = new TList<RatedCdr>();
				}
	
				return _ratedCdrWholesalerId;
			}
			set { _ratedCdrWholesalerId = value; }
		}
		
		#endregion

		#region Wholesaler_ProductCollection
		
		private TList<Wholesaler_Product> _wholesaler_ProductWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _wholesaler_ProductWholesalerId
		/// </summary>	
		public TList<Wholesaler_Product> Wholesaler_ProductCollection
		{
			get
			{
				if (_wholesaler_ProductWholesalerId == null)
				{
				_wholesaler_ProductWholesalerId = new TList<Wholesaler_Product>();
				}
	
				return _wholesaler_ProductWholesalerId;
			}
			set { _wholesaler_ProductWholesalerId = value; }
		}
		
		#endregion

		#region AccountManagerCollection
		
		private TList<AccountManager> _accountManagerWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accountManagerWholesalerId
		/// </summary>	
		public TList<AccountManager> AccountManagerCollection
		{
			get
			{
				if (_accountManagerWholesalerId == null)
				{
				_accountManagerWholesalerId = new TList<AccountManager>();
				}
	
				return _accountManagerWholesalerId;
			}
			set { _accountManagerWholesalerId = value; }
		}
		
		#endregion

		#region ProductRateValueCollection
		
		private TList<ProductRateValue> _productRateValueWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _productRateValueWholesalerId
		/// </summary>	
		public TList<ProductRateValue> ProductRateValueCollection
		{
			get
			{
				if (_productRateValueWholesalerId == null)
				{
				_productRateValueWholesalerId = new TList<ProductRateValue>();
				}
	
				return _productRateValueWholesalerId;
			}
			set { _productRateValueWholesalerId = value; }
		}
		
		#endregion

		#region DnisCollection
		
		private TList<Dnis> _dnisWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _dnisWholesalerId
		/// </summary>	
		public TList<Dnis> DnisCollection
		{
			get
			{
				if (_dnisWholesalerId == null)
				{
				_dnisWholesalerId = new TList<Dnis>();
				}
	
				return _dnisWholesalerId;
			}
			set { _dnisWholesalerId = value; }
		}
		
		#endregion

		#region CustomerCollection
		
		private TList<Customer> _customerWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _customerWholesalerId
		/// </summary>	
		public TList<Customer> CustomerCollection
		{
			get
			{
				if (_customerWholesalerId == null)
				{
				_customerWholesalerId = new TList<Customer>();
				}
	
				return _customerWholesalerId;
			}
			set { _customerWholesalerId = value; }
		}
		
		#endregion

		#region IrWholesalerCollection
		
		private TList<IrWholesaler> _irWholesalerWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _irWholesalerWholesalerId
		/// </summary>	
		public TList<IrWholesaler> IrWholesalerCollection
		{
			get
			{
				if (_irWholesalerWholesalerId == null)
				{
				_irWholesalerWholesalerId = new TList<IrWholesaler>();
				}
	
				return _irWholesalerWholesalerId;
			}
			set { _irWholesalerWholesalerId = value; }
		}
		
		#endregion

		#region LeadCollection
		
		private TList<Lead> _leadWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _leadWholesalerId
		/// </summary>	
		public TList<Lead> LeadCollection
		{
			get
			{
				if (_leadWholesalerId == null)
				{
				_leadWholesalerId = new TList<Lead>();
				}
	
				return _leadWholesalerId;
			}
			set { _leadWholesalerId = value; }
		}
		
		#endregion

		#region SalesPersonCollection
		
		private TList<SalesPerson> _salesPersonWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _salesPersonWholesalerId
		/// </summary>	
		public TList<SalesPerson> SalesPersonCollection
		{
			get
			{
				if (_salesPersonWholesalerId == null)
				{
				_salesPersonWholesalerId = new TList<SalesPerson>();
				}
	
				return _salesPersonWholesalerId;
			}
			set { _salesPersonWholesalerId = value; }
		}
		
		#endregion

		#region DepartmentCollection
		
		private TList<Department> _departmentWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _departmentWholesalerId
		/// </summary>	
		public TList<Department> DepartmentCollection
		{
			get
			{
				if (_departmentWholesalerId == null)
				{
				_departmentWholesalerId = new TList<Department>();
				}
	
				return _departmentWholesalerId;
			}
			set { _departmentWholesalerId = value; }
		}
		
		#endregion

		#region CompanyCollection
		
		private TList<Company> _companyWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _companyWholesalerId
		/// </summary>	
		public TList<Company> CompanyCollection
		{
			get
			{
				if (_companyWholesalerId == null)
				{
				_companyWholesalerId = new TList<Company>();
				}
	
				return _companyWholesalerId;
			}
			set { _companyWholesalerId = value; }
		}
		
		#endregion

		#region TicketCollection
		
		private TList<Ticket> _ticketWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ticketWholesalerId
		/// </summary>	
		public TList<Ticket> TicketCollection
		{
			get
			{
				if (_ticketWholesalerId == null)
				{
				_ticketWholesalerId = new TList<Ticket>();
				}
	
				return _ticketWholesalerId;
			}
			set { _ticketWholesalerId = value; }
		}
		
		#endregion

		#region MarketingServiceCollection
		
		private TList<MarketingService> _marketingServiceWholesalerId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _marketingServiceWholesalerId
		/// </summary>	
		public TList<MarketingService> MarketingServiceCollection
		{
			get
			{
				if (_marketingServiceWholesalerId == null)
				{
				_marketingServiceWholesalerId = new TList<MarketingService>();
				}
	
				return _marketingServiceWholesalerId;
			}
			set { _marketingServiceWholesalerId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			WholesalerEntityData _tmp = new WholesalerEntityData();
						
			_tmp.Id = this.Id;
			_tmp.OriginalId = this.OriginalId;
			
			_tmp.CompanyName = this.CompanyName;
			_tmp.CompanyShortName = this.CompanyShortName;
			_tmp.RetailPriCustomerNumber = this.RetailPriCustomerNumber;
			_tmp.RetailPriCustomerNumberLikeExp = this.RetailPriCustomerNumberLikeExp;
			_tmp.DefaultModCodeLength = this.DefaultModCodeLength;
			_tmp.DefaultPassCodeLength = this.DefaultPassCodeLength;
			_tmp.DefaultPasswordLength = this.DefaultPasswordLength;
			_tmp.DefaultCapsOk = this.DefaultCapsOk;
			_tmp.ModeratorTxt = this.ModeratorTxt;
			_tmp.ParticipantTxt = this.ParticipantTxt;
			_tmp.Enabled = this.Enabled;
			_tmp.CustomerNumberExceptionList = this.CustomerNumberExceptionList;
			_tmp.WebProductProviderName = this.WebProductProviderName;
			_tmp.WebProductProviderBranding = this.WebProductProviderBranding;
			_tmp.WebSecProductProvider = this.WebSecProductProvider;
			_tmp.CurrencyId = this.CurrencyId;
			_tmp.BillingWholesalerId = this.BillingWholesalerId;
			_tmp.BillingCustomerNumber = this.BillingCustomerNumber;
			_tmp.TaxableId = this.TaxableId;
			_tmp.WebSiteUrl = this.WebSiteUrl;
			_tmp.AdminSiteUrl = this.AdminSiteUrl;
			_tmp.AdminSiteIp = this.AdminSiteIp;
			_tmp.SelfServeUrl = this.SelfServeUrl;
			_tmp.SelfServeIp = this.SelfServeIp;
			_tmp.WebConferencingUrl = this.WebConferencingUrl;
			_tmp.WebConferencingIp = this.WebConferencingIp;
			_tmp.SupportEmail = this.SupportEmail;
			_tmp.SupportPhoneNumber = this.SupportPhoneNumber;
			_tmp.DoRetailBilling = this.DoRetailBilling;
			_tmp.CommissionLockDate = this.CommissionLockDate;
			_tmp.PortalId = this.PortalId;
			_tmp.BillingAddress1 = this.BillingAddress1;
			_tmp.BillingAddress2 = this.BillingAddress2;
			_tmp.BillingCity = this.BillingCity;
			_tmp.BillingCountry = this.BillingCountry;
			_tmp.BillingRegion = this.BillingRegion;
			_tmp.BillingPostalCode = this.BillingPostalCode;
			
			#region Source Parent Composite Entities
			if (this.CurrencyIdSource != null)
				_tmp.CurrencyIdSource = MakeCopyOf(this.CurrencyIdSource) as Currency;
			if (this.BillingCountrySource != null)
				_tmp.BillingCountrySource = MakeCopyOf(this.BillingCountrySource) as Country;
			if (this.BillingRegionSource != null)
				_tmp.BillingRegionSource = MakeCopyOf(this.BillingRegionSource) as State;
			if (this.TaxableIdSource != null)
				_tmp.TaxableIdSource = MakeCopyOf(this.TaxableIdSource) as Taxable;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._verticalWholesalerId != null)
				_tmp.VerticalCollection = (TList<Vertical>) MakeCopyOf(this.VerticalCollection); 
			if (this.languageIdLanguageCollection_From_IrWholesaler != null)
				_tmp.LanguageIdLanguageCollection_From_IrWholesaler = (TList<Language>) MakeCopyOf(this.LanguageIdLanguageCollection_From_IrWholesaler); 
			if (this._customerTransactionWholesalerId != null)
				_tmp.CustomerTransactionCollection = (TList<CustomerTransaction>) MakeCopyOf(this.CustomerTransactionCollection); 
			if (this._customerDocumentWholesalerId != null)
				_tmp.CustomerDocumentCollection = (TList<CustomerDocument>) MakeCopyOf(this.CustomerDocumentCollection); 
			if (this._commissionCustomerWholesalerId != null)
				_tmp.CommissionCustomerCollection = (TList<CommissionCustomer>) MakeCopyOf(this.CommissionCustomerCollection); 
			if (this._commissionWholesalerId != null)
				_tmp.CommissionCollection = (TList<Commission>) MakeCopyOf(this.CommissionCollection); 
			if (this._emailTemplateWholesalerId != null)
				_tmp.EmailTemplateCollection = (TList<EmailTemplate>) MakeCopyOf(this.EmailTemplateCollection); 
			if (this._ratedCdrWholesalerId != null)
				_tmp.RatedCdrCollection = (TList<RatedCdr>) MakeCopyOf(this.RatedCdrCollection); 
			if (this._wholesaler_ProductWholesalerId != null)
				_tmp.Wholesaler_ProductCollection = (TList<Wholesaler_Product>) MakeCopyOf(this.Wholesaler_ProductCollection); 
			if (this._accountManagerWholesalerId != null)
				_tmp.AccountManagerCollection = (TList<AccountManager>) MakeCopyOf(this.AccountManagerCollection); 
			if (this._productRateValueWholesalerId != null)
				_tmp.ProductRateValueCollection = (TList<ProductRateValue>) MakeCopyOf(this.ProductRateValueCollection); 
			if (this._dnisWholesalerId != null)
				_tmp.DnisCollection = (TList<Dnis>) MakeCopyOf(this.DnisCollection); 
			if (this._customerWholesalerId != null)
				_tmp.CustomerCollection = (TList<Customer>) MakeCopyOf(this.CustomerCollection); 
			if (this._irWholesalerWholesalerId != null)
				_tmp.IrWholesalerCollection = (TList<IrWholesaler>) MakeCopyOf(this.IrWholesalerCollection); 
			if (this._leadWholesalerId != null)
				_tmp.LeadCollection = (TList<Lead>) MakeCopyOf(this.LeadCollection); 
			if (this._salesPersonWholesalerId != null)
				_tmp.SalesPersonCollection = (TList<SalesPerson>) MakeCopyOf(this.SalesPersonCollection); 
			if (this._departmentWholesalerId != null)
				_tmp.DepartmentCollection = (TList<Department>) MakeCopyOf(this.DepartmentCollection); 
			if (this._companyWholesalerId != null)
				_tmp.CompanyCollection = (TList<Company>) MakeCopyOf(this.CompanyCollection); 
			if (this._ticketWholesalerId != null)
				_tmp.TicketCollection = (TList<Ticket>) MakeCopyOf(this.TicketCollection); 
			if (this._marketingServiceWholesalerId != null)
				_tmp.MarketingServiceCollection = (TList<MarketingService>) MakeCopyOf(this.MarketingServiceCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct



		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="WholesalerColumn"/> which has raised the event.</param>
		public void OnColumnChanging(WholesalerColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="WholesalerColumn"/> which has raised the event.</param>
		public void OnColumnChanged(WholesalerColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="WholesalerColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public void OnColumnChanging(WholesalerColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				WholesalerEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new WholesalerEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="WholesalerColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public void OnColumnChanged(WholesalerColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				WholesalerEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new WholesalerEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region WholesalerEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="Wholesaler"/> object.
	/// </remarks>
	public class WholesalerEventArgs : System.EventArgs
	{
		private WholesalerColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the WholesalerEventArgs class.
		///</summary>
		public WholesalerEventArgs(WholesalerColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the WholesalerEventArgs class.
		///</summary>
		public WholesalerEventArgs(WholesalerColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The WholesalerColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="WholesalerColumn" />
		public WholesalerColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all Wholesaler related events.
	///</summary>
	public delegate void WholesalerEventHandler(object sender, WholesalerEventArgs e);
	
	#region WholesalerComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class WholesalerComparer : System.Collections.Generic.IComparer<Wholesaler>
	{
		WholesalerColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:WholesalerComparer"/> class.
        /// </summary>
		public WholesalerComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:WholesalerComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public WholesalerComparer(WholesalerColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="Wholesaler"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="Wholesaler"/> to compare.</param>
        /// <param name="b">The second <c>Wholesaler</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(Wholesaler a, Wholesaler b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(Wholesaler entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(Wholesaler a, Wholesaler b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public WholesalerColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region WholesalerKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="Wholesaler"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class WholesalerKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the WholesalerKey class.
		/// </summary>
		public WholesalerKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the WholesalerKey class.
		/// </summary>
		public WholesalerKey(WholesalerBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.Id = entity.Id;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the WholesalerKey class.
		/// </summary>
		public WholesalerKey(System.String _id)
		{
			#region Init Properties

			this.Id = _id;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private WholesalerBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public WholesalerBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the Id property
		private System.String _id;
		
		/// <summary>
		/// Gets or sets the Id property.
		/// </summary>
		public System.String Id
		{
			get { return _id; }
			set
			{
				if ( this.Entity != null )
					this.Entity.Id = value;
				
				_id = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				Id = ( values["Id"] != null ) ? (System.String) EntityUtil.ChangeType(values["Id"], typeof(System.String)) : string.Empty;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("Id", Id);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("Id: {0}{1}",
								Id,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region WholesalerColumn Enum
	
	/// <summary>
	/// Enumerate the Wholesaler columns.
	/// </summary>
	[Serializable]
	public enum WholesalerColumn : int
	{
		/// <summary>
		/// Id : 
		/// </summary>
		[EnumTextValue("ID")]
		[ColumnEnum("ID", typeof(System.String), System.Data.DbType.AnsiString, true, false, false, 10)]
		Id = 1,
		/// <summary>
		/// CompanyName : 
		/// </summary>
		[EnumTextValue("CompanyName")]
		[ColumnEnum("CompanyName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CompanyName = 2,
		/// <summary>
		/// CompanyShortName : 
		/// </summary>
		[EnumTextValue("CompanyShortName")]
		[ColumnEnum("CompanyShortName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		CompanyShortName = 3,
		/// <summary>
		/// RetailPriCustomerNumber : 
		/// </summary>
		[EnumTextValue("RetailPriCustomerNumber")]
		[ColumnEnum("RetailPriCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		RetailPriCustomerNumber = 4,
		/// <summary>
		/// RetailPriCustomerNumberLikeExp : 
		/// </summary>
		[EnumTextValue("RetailPriCustomerNumberLIKEExp")]
		[ColumnEnum("RetailPriCustomerNumberLIKEExp", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		RetailPriCustomerNumberLikeExp = 5,
		/// <summary>
		/// DefaultModCodeLength : 
		/// </summary>
		[EnumTextValue("DefaultModCodeLength")]
		[ColumnEnum("DefaultModCodeLength", typeof(System.Byte), System.Data.DbType.Byte, false, false, true)]
		DefaultModCodeLength = 6,
		/// <summary>
		/// DefaultPassCodeLength : 
		/// </summary>
		[EnumTextValue("DefaultPassCodeLength")]
		[ColumnEnum("DefaultPassCodeLength", typeof(System.Byte), System.Data.DbType.Byte, false, false, true)]
		DefaultPassCodeLength = 7,
		/// <summary>
		/// DefaultPasswordLength : 
		/// </summary>
		[EnumTextValue("DefaultPasswordLength")]
		[ColumnEnum("DefaultPasswordLength", typeof(System.Byte), System.Data.DbType.Byte, false, false, true)]
		DefaultPasswordLength = 8,
		/// <summary>
		/// DefaultCapsOk : 
		/// </summary>
		[EnumTextValue("DefaultCapsOK")]
		[ColumnEnum("DefaultCapsOK", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DefaultCapsOk = 9,
		/// <summary>
		/// ModeratorTxt : 
		/// </summary>
		[EnumTextValue("ModeratorTxt")]
		[ColumnEnum("ModeratorTxt", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ModeratorTxt = 10,
		/// <summary>
		/// ParticipantTxt : 
		/// </summary>
		[EnumTextValue("ParticipantTxt")]
		[ColumnEnum("ParticipantTxt", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ParticipantTxt = 11,
		/// <summary>
		/// Enabled : 
		/// </summary>
		[EnumTextValue("Enabled")]
		[ColumnEnum("Enabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Enabled = 12,
		/// <summary>
		/// CustomerNumberExceptionList : 
		/// </summary>
		[EnumTextValue("CustomerNumberExceptionList")]
		[ColumnEnum("CustomerNumberExceptionList", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		CustomerNumberExceptionList = 13,
		/// <summary>
		/// WebProductProviderName : 
		/// </summary>
		[EnumTextValue("WebProductProviderName")]
		[ColumnEnum("WebProductProviderName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebProductProviderName = 14,
		/// <summary>
		/// WebProductProviderBranding : 
		/// </summary>
		[EnumTextValue("WebProductProviderBranding")]
		[ColumnEnum("WebProductProviderBranding", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebProductProviderBranding = 15,
		/// <summary>
		/// WebSecProductProvider : 
		/// </summary>
		[EnumTextValue("WebSecProductProvider")]
		[ColumnEnum("WebSecProductProvider", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebSecProductProvider = 16,
		/// <summary>
		/// CurrencyId : 
		/// </summary>
		[EnumTextValue("CurrencyID")]
		[ColumnEnum("CurrencyID", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 3)]
		CurrencyId = 17,
		/// <summary>
		/// BillingWholesalerId : 
		/// </summary>
		[EnumTextValue("BillingWholesalerID")]
		[ColumnEnum("BillingWholesalerID", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 10)]
		BillingWholesalerId = 18,
		/// <summary>
		/// BillingCustomerNumber : 
		/// </summary>
		[EnumTextValue("BillingCustomerNumber")]
		[ColumnEnum("BillingCustomerNumber", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, true, 10)]
		BillingCustomerNumber = 19,
		/// <summary>
		/// TaxableId : 
		/// </summary>
		[EnumTextValue("TaxableID")]
		[ColumnEnum("TaxableID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TaxableId = 20,
		/// <summary>
		/// WebSiteUrl : 
		/// </summary>
		[EnumTextValue("WebSiteURL")]
		[ColumnEnum("WebSiteURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		WebSiteUrl = 21,
		/// <summary>
		/// AdminSiteUrl : 
		/// </summary>
		[EnumTextValue("AdminSiteURL")]
		[ColumnEnum("AdminSiteURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		AdminSiteUrl = 22,
		/// <summary>
		/// AdminSiteIp : 
		/// </summary>
		[EnumTextValue("AdminSiteIP")]
		[ColumnEnum("AdminSiteIP", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		AdminSiteIp = 23,
		/// <summary>
		/// SelfServeUrl : 
		/// </summary>
		[EnumTextValue("SelfServeURL")]
		[ColumnEnum("SelfServeURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		SelfServeUrl = 24,
		/// <summary>
		/// SelfServeIp : 
		/// </summary>
		[EnumTextValue("SelfServeIP")]
		[ColumnEnum("SelfServeIP", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		SelfServeIp = 25,
		/// <summary>
		/// WebConferencingUrl : 
		/// </summary>
		[EnumTextValue("WebConferencingURL")]
		[ColumnEnum("WebConferencingURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		WebConferencingUrl = 26,
		/// <summary>
		/// WebConferencingIp : 
		/// </summary>
		[EnumTextValue("WebConferencingIP")]
		[ColumnEnum("WebConferencingIP", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		WebConferencingIp = 27,
		/// <summary>
		/// SupportEmail : 
		/// </summary>
		[EnumTextValue("SupportEmail")]
		[ColumnEnum("SupportEmail", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SupportEmail = 28,
		/// <summary>
		/// SupportPhoneNumber : 
		/// </summary>
		[EnumTextValue("SupportPhoneNumber")]
		[ColumnEnum("SupportPhoneNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		SupportPhoneNumber = 29,
		/// <summary>
		/// DoRetailBilling : 
		/// </summary>
		[EnumTextValue("DoRetailBilling")]
		[ColumnEnum("DoRetailBilling", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		DoRetailBilling = 30,
		/// <summary>
		/// CommissionLockDate : 
		/// </summary>
		[EnumTextValue("CommissionLockDate")]
		[ColumnEnum("CommissionLockDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CommissionLockDate = 31,
		/// <summary>
		/// PortalId : Link to the DNN Portal
		/// </summary>
		[EnumTextValue("PortalID")]
		[ColumnEnum("PortalID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PortalId = 32,
		/// <summary>
		/// BillingAddress1 : 
		/// </summary>
		[EnumTextValue("BillingAddress1")]
		[ColumnEnum("BillingAddress1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingAddress1 = 33,
		/// <summary>
		/// BillingAddress2 : 
		/// </summary>
		[EnumTextValue("BillingAddress2")]
		[ColumnEnum("BillingAddress2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingAddress2 = 34,
		/// <summary>
		/// BillingCity : 
		/// </summary>
		[EnumTextValue("BillingCity")]
		[ColumnEnum("BillingCity", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingCity = 35,
		/// <summary>
		/// BillingCountry : 
		/// </summary>
		[EnumTextValue("BillingCountry")]
		[ColumnEnum("BillingCountry", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		BillingCountry = 36,
		/// <summary>
		/// BillingRegion : State, Province, etc.
		/// </summary>
		[EnumTextValue("BillingRegion")]
		[ColumnEnum("BillingRegion", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		BillingRegion = 37,
		/// <summary>
		/// BillingPostalCode : 
		/// </summary>
		[EnumTextValue("BillingPostalCode")]
		[ColumnEnum("BillingPostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		BillingPostalCode = 38
	}//End enum

	#endregion WholesalerColumn Enum

} // end namespace
