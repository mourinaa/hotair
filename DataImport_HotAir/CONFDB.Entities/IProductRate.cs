using System;
using System.ComponentModel;

namespace CONFDB.Entities
{
	/// <summary>
	///		The data structure representation of the 'ProductRate' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IProductRate 
	{
		/// <summary>			
		/// ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ProductRate"</remarks>
		System.Int32 Id { get; set; }
				
		
		
		/// <summary>
		/// ProductID : 
		/// </summary>
		System.Int32  ProductId  { get; set; }
		
		/// <summary>
		/// ProductRateTypeID : The Product Rate Type is used to group together different types of product rates. Example would be Outbound Toll Free and Outbound Mobile rates. The are similar but different rates are required as there are different prices for each.
		/// </summary>
		System.Int32  ProductRateTypeId  { get; set; }
		
		/// <summary>
		/// ProductRateIntervalID : 
		/// </summary>
		System.Int32  ProductRateIntervalId  { get; set; }
		
		/// <summary>
		/// TaxableID : 
		/// </summary>
		System.Int32  TaxableId  { get; set; }
		
		/// <summary>
		/// CountryID : 
		/// </summary>
		System.String  CountryId  { get; set; }
		
		/// <summary>
		/// Name : 
		/// </summary>
		System.String  Name  { get; set; }
		
		/// <summary>
		/// DisplayName : 
		/// </summary>
		System.String  DisplayName  { get; set; }
		
		/// <summary>
		/// Description : 
		/// </summary>
		System.String  Description  { get; set; }
		
		/// <summary>
		/// DisplayOrder : 
		/// </summary>
		System.Int32?  DisplayOrder  { get; set; }
		
		/// <summary>
		/// MinimumTimeBeforeChargedSec : 
		/// </summary>
		System.Int32?  MinimumTimeBeforeChargedSec  { get; set; }
		
		/// <summary>
		/// RatingTypeID : Used to simplify the rating of rates by provided a grouping mechanism as all CDR based rates are rated with either bridge, LD, Connect(Transport) rates or miscellaneous charges.
		/// </summary>
		System.Int32  RatingTypeId  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _productRateValueProductRateId
		/// </summary>	
		TList<ProductRateValue> ProductRateValueCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accessType_ProductRateProductRateId
		/// </summary>	
		TList<AccessType_ProductRate> AccessType_ProductRateCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _customerTransactionProductRateId
		/// </summary>	
		TList<CustomerTransaction> CustomerTransactionCollection {  get;  set;}	

		#endregion Data Properties

	}
}


