using System;
using System.ComponentModel;

namespace CONFDB.Entities
{
	/// <summary>
	///		The data structure representation of the 'User' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IUser 
	{
		/// <summary>			
		/// UserID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "User"</remarks>
		System.Int32 UserId { get; set; }
				
		
		
		/// <summary>
		/// Username : Needs to be unique and can be anything e.g. Customer Number, Email Address, etc.
		/// </summary>
		System.String  Username  { get; set; }
		
		/// <summary>
		/// Password : 
		/// </summary>
		System.String  Password  { get; set; }
		
		/// <summary>
		/// DisplayName : 
		/// </summary>
		System.String  DisplayName  { get; set; }
		
		/// <summary>
		/// Email : 
		/// </summary>
		System.String  Email  { get; set; }
		
		/// <summary>
		/// Telephone : 
		/// </summary>
		System.String  Telephone  { get; set; }
		
		/// <summary>
		/// Enabled : Denotes if the user is active or not. Default is Disabled for security reasons.
		/// </summary>
		System.Boolean  Enabled  { get; set; }
		
		/// <summary>
		/// CompanyID : Used for the Company Admin role and links to the company the user is associated with to restrict data access.
		/// </summary>
		System.Int32?  CompanyId  { get; set; }
		
		/// <summary>
		/// SalesPersonID : Used for the Sales Manger/Sales role(s) and links to the sales person the user is associated with to restrict data access.
		/// </summary>
		System.Int32?  SalesPersonId  { get; set; }
		
		/// <summary>
		/// RoleID : Used to denote the role of the user.
		/// </summary>
		System.Int32?  RoleId  { get; set; }
		
		/// <summary>
		/// MustChangePassword : Denotes if the user is forced to change their password.
		/// </summary>
		System.Boolean?  MustChangePassword  { get; set; }
		
		/// <summary>
		/// Address1 : 
		/// </summary>
		System.String  Address1  { get; set; }
		
		/// <summary>
		/// Address2 : 
		/// </summary>
		System.String  Address2  { get; set; }
		
		/// <summary>
		/// City : 
		/// </summary>
		System.String  City  { get; set; }
		
		/// <summary>
		/// Country : 
		/// </summary>
		System.String  Country  { get; set; }
		
		/// <summary>
		/// Region : 
		/// </summary>
		System.String  Region  { get; set; }
		
		/// <summary>
		/// PostalCode : 
		/// </summary>
		System.String  PostalCode  { get; set; }
		
		/// <summary>
		/// CharityID : 
		/// </summary>
		System.Int32?  CharityId  { get; set; }
		
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		System.String  WebMemberId  { get; set; }
		
		/// <summary>
		/// UserUniqueID : 
		/// </summary>
		System.Guid  UserUniqueId  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties

		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the junction table marketingServiceIdMarketingServiceCollection_From_User_MarketingService
		/// </summary>	
		TList<MarketingService> MarketingServiceIdMarketingServiceCollection_From_User_MarketingService { get; set; }	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _moderatorUserId
		/// </summary>	
		TList<Moderator> ModeratorCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _user_MarketingServiceUserId
		/// </summary>	
		TList<User_MarketingService> User_MarketingServiceCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _customerUserId
		/// </summary>	
		TList<Customer> CustomerCollection {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _eventManagerUserId
		/// </summary>	
		TList<EventManager> EventManagerCollection {  get;  set;}	

		#endregion Data Properties

	}
}


