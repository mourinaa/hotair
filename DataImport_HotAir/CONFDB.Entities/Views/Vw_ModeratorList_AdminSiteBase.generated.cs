/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_ModeratorList_AdminSite.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_ModeratorList_AdminSite' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_ModeratorList_AdminSiteBase")]
	public abstract partial class Vw_ModeratorList_AdminSiteBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// UserID : 
		/// </summary>
		private System.Int32		  _userId = (int)0;
		
		/// <summary>
		/// CompanyName : 
		/// </summary>
		private System.String		  _companyName = null;
		
		/// <summary>
		/// AdminName : 
		/// </summary>
		private System.String		  _adminName = string.Empty;
		
		/// <summary>
		/// WebLoginName : 
		/// </summary>
		private System.String		  _webLoginName = string.Empty;
		
		/// <summary>
		/// WebLoginPassword : 
		/// </summary>
		private System.String		  _webLoginPassword = string.Empty;
		
		/// <summary>
		/// ModeratorName : 
		/// </summary>
		private System.String		  _moderatorName = string.Empty;
		
		/// <summary>
		/// Email : 
		/// </summary>
		private System.String		  _email = null;
		
		/// <summary>
		/// Address1 : 
		/// </summary>
		private System.String		  _address1 = null;
		
		/// <summary>
		/// Address2 : 
		/// </summary>
		private System.String		  _address2 = null;
		
		/// <summary>
		/// City : 
		/// </summary>
		private System.String		  _city = null;
		
		/// <summary>
		/// Country : 
		/// </summary>
		private System.String		  _country = null;
		
		/// <summary>
		/// Region : 
		/// </summary>
		private System.String		  _region = null;
		
		/// <summary>
		/// PostalCode : 
		/// </summary>
		private System.String		  _postalCode = null;
		
		/// <summary>
		/// Telephone : 
		/// </summary>
		private System.String		  _telephone = null;
		
		/// <summary>
		/// RoleID : 
		/// </summary>
		private System.Int32?		  _roleId = (int)0;
		
		/// <summary>
		/// CharityID : 
		/// </summary>
		private System.Int32?		  _charityId = (int)0;
		
		/// <summary>
		/// CharityName : 
		/// </summary>
		private System.String		  _charityName = null;
		
		/// <summary>
		/// SalesPerson : 
		/// </summary>
		private System.String		  _salesPerson = string.Empty;
		
		/// <summary>
		/// SalesPersonID : 
		/// </summary>
		private System.Int32		  _salesPersonId = (int)0;
		
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		private System.String		  _wholesalerId = string.Empty;
		
		/// <summary>
		/// CustomerID : 
		/// </summary>
		private System.Int32		  _customerId = (int)0;
		
		/// <summary>
		/// AccountManagerID : 
		/// </summary>
		private System.Int32		  _accountManagerId = (int)0;
		
		/// <summary>
		/// AccountManager : 
		/// </summary>
		private System.String		  _accountManager = string.Empty;
		
		/// <summary>
		/// DateProvisioned : 
		/// </summary>
		private System.DateTime		  _dateProvisioned = DateTime.MinValue;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_ModeratorList_AdminSiteBase"/> instance.
		///</summary>
		public Vw_ModeratorList_AdminSiteBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_ModeratorList_AdminSiteBase"/> instance.
		///</summary>
		///<param name="_userId"></param>
		///<param name="_companyName"></param>
		///<param name="_adminName"></param>
		///<param name="_webLoginName"></param>
		///<param name="_webLoginPassword"></param>
		///<param name="_moderatorName"></param>
		///<param name="_email"></param>
		///<param name="_address1"></param>
		///<param name="_address2"></param>
		///<param name="_city"></param>
		///<param name="_country"></param>
		///<param name="_region"></param>
		///<param name="_postalCode"></param>
		///<param name="_telephone"></param>
		///<param name="_roleId"></param>
		///<param name="_charityId"></param>
		///<param name="_charityName"></param>
		///<param name="_salesPerson"></param>
		///<param name="_salesPersonId"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_accountManagerId"></param>
		///<param name="_accountManager"></param>
		///<param name="_dateProvisioned"></param>
		public Vw_ModeratorList_AdminSiteBase(System.Int32 _userId, System.String _companyName, System.String _adminName, System.String _webLoginName, System.String _webLoginPassword, System.String _moderatorName, System.String _email, System.String _address1, System.String _address2, System.String _city, System.String _country, System.String _region, System.String _postalCode, System.String _telephone, System.Int32? _roleId, System.Int32? _charityId, System.String _charityName, System.String _salesPerson, System.Int32 _salesPersonId, System.String _wholesalerId, System.Int32 _customerId, System.Int32 _accountManagerId, System.String _accountManager, System.DateTime _dateProvisioned)
		{
			this._userId = _userId;
			this._companyName = _companyName;
			this._adminName = _adminName;
			this._webLoginName = _webLoginName;
			this._webLoginPassword = _webLoginPassword;
			this._moderatorName = _moderatorName;
			this._email = _email;
			this._address1 = _address1;
			this._address2 = _address2;
			this._city = _city;
			this._country = _country;
			this._region = _region;
			this._postalCode = _postalCode;
			this._telephone = _telephone;
			this._roleId = _roleId;
			this._charityId = _charityId;
			this._charityName = _charityName;
			this._salesPerson = _salesPerson;
			this._salesPersonId = _salesPersonId;
			this._wholesalerId = _wholesalerId;
			this._customerId = _customerId;
			this._accountManagerId = _accountManagerId;
			this._accountManager = _accountManager;
			this._dateProvisioned = _dateProvisioned;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_ModeratorList_AdminSite"/> instance.
		///</summary>
		///<param name="_userId"></param>
		///<param name="_companyName"></param>
		///<param name="_adminName"></param>
		///<param name="_webLoginName"></param>
		///<param name="_webLoginPassword"></param>
		///<param name="_moderatorName"></param>
		///<param name="_email"></param>
		///<param name="_address1"></param>
		///<param name="_address2"></param>
		///<param name="_city"></param>
		///<param name="_country"></param>
		///<param name="_region"></param>
		///<param name="_postalCode"></param>
		///<param name="_telephone"></param>
		///<param name="_roleId"></param>
		///<param name="_charityId"></param>
		///<param name="_charityName"></param>
		///<param name="_salesPerson"></param>
		///<param name="_salesPersonId"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_accountManagerId"></param>
		///<param name="_accountManager"></param>
		///<param name="_dateProvisioned"></param>
		public static Vw_ModeratorList_AdminSite CreateVw_ModeratorList_AdminSite(System.Int32 _userId, System.String _companyName, System.String _adminName, System.String _webLoginName, System.String _webLoginPassword, System.String _moderatorName, System.String _email, System.String _address1, System.String _address2, System.String _city, System.String _country, System.String _region, System.String _postalCode, System.String _telephone, System.Int32? _roleId, System.Int32? _charityId, System.String _charityName, System.String _salesPerson, System.Int32 _salesPersonId, System.String _wholesalerId, System.Int32 _customerId, System.Int32 _accountManagerId, System.String _accountManager, System.DateTime _dateProvisioned)
		{
			Vw_ModeratorList_AdminSite newVw_ModeratorList_AdminSite = new Vw_ModeratorList_AdminSite();
			newVw_ModeratorList_AdminSite.UserId = _userId;
			newVw_ModeratorList_AdminSite.CompanyName = _companyName;
			newVw_ModeratorList_AdminSite.AdminName = _adminName;
			newVw_ModeratorList_AdminSite.WebLoginName = _webLoginName;
			newVw_ModeratorList_AdminSite.WebLoginPassword = _webLoginPassword;
			newVw_ModeratorList_AdminSite.ModeratorName = _moderatorName;
			newVw_ModeratorList_AdminSite.Email = _email;
			newVw_ModeratorList_AdminSite.Address1 = _address1;
			newVw_ModeratorList_AdminSite.Address2 = _address2;
			newVw_ModeratorList_AdminSite.City = _city;
			newVw_ModeratorList_AdminSite.Country = _country;
			newVw_ModeratorList_AdminSite.Region = _region;
			newVw_ModeratorList_AdminSite.PostalCode = _postalCode;
			newVw_ModeratorList_AdminSite.Telephone = _telephone;
			newVw_ModeratorList_AdminSite.RoleId = _roleId;
			newVw_ModeratorList_AdminSite.CharityId = _charityId;
			newVw_ModeratorList_AdminSite.CharityName = _charityName;
			newVw_ModeratorList_AdminSite.SalesPerson = _salesPerson;
			newVw_ModeratorList_AdminSite.SalesPersonId = _salesPersonId;
			newVw_ModeratorList_AdminSite.WholesalerId = _wholesalerId;
			newVw_ModeratorList_AdminSite.CustomerId = _customerId;
			newVw_ModeratorList_AdminSite.AccountManagerId = _accountManagerId;
			newVw_ModeratorList_AdminSite.AccountManager = _accountManager;
			newVw_ModeratorList_AdminSite.DateProvisioned = _dateProvisioned;
			return newVw_ModeratorList_AdminSite;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the UserID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 UserId
		{
			get
			{
				return this._userId; 
			}
			set
			{
				if (_userId == value)
					return;
					
				this._userId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CompanyName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CompanyName
		{
			get
			{
				return this._companyName; 
			}
			set
			{
				if (_companyName == value)
					return;
					
				this._companyName = value;
				this._isDirty = true;
				
				OnPropertyChanged("CompanyName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AdminName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String AdminName
		{
			get
			{
				return this._adminName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "AdminName does not allow null values.");
				if (_adminName == value)
					return;
					
				this._adminName = value;
				this._isDirty = true;
				
				OnPropertyChanged("AdminName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebLoginName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebLoginName
		{
			get
			{
				return this._webLoginName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WebLoginName does not allow null values.");
				if (_webLoginName == value)
					return;
					
				this._webLoginName = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebLoginName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebLoginPassword property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebLoginPassword
		{
			get
			{
				return this._webLoginPassword; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WebLoginPassword does not allow null values.");
				if (_webLoginPassword == value)
					return;
					
				this._webLoginPassword = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebLoginPassword");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModeratorName
		{
			get
			{
				return this._moderatorName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "ModeratorName does not allow null values.");
				if (_moderatorName == value)
					return;
					
				this._moderatorName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Email
		{
			get
			{
				return this._email; 
			}
			set
			{
				if (_email == value)
					return;
					
				this._email = value;
				this._isDirty = true;
				
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Address1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Address1
		{
			get
			{
				return this._address1; 
			}
			set
			{
				if (_address1 == value)
					return;
					
				this._address1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("Address1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Address2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Address2
		{
			get
			{
				return this._address2; 
			}
			set
			{
				if (_address2 == value)
					return;
					
				this._address2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("Address2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the City property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String City
		{
			get
			{
				return this._city; 
			}
			set
			{
				if (_city == value)
					return;
					
				this._city = value;
				this._isDirty = true;
				
				OnPropertyChanged("City");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Country property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Country
		{
			get
			{
				return this._country; 
			}
			set
			{
				if (_country == value)
					return;
					
				this._country = value;
				this._isDirty = true;
				
				OnPropertyChanged("Country");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Region property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Region
		{
			get
			{
				return this._region; 
			}
			set
			{
				if (_region == value)
					return;
					
				this._region = value;
				this._isDirty = true;
				
				OnPropertyChanged("Region");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PostalCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PostalCode
		{
			get
			{
				return this._postalCode; 
			}
			set
			{
				if (_postalCode == value)
					return;
					
				this._postalCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("PostalCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Telephone property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Telephone
		{
			get
			{
				return this._telephone; 
			}
			set
			{
				if (_telephone == value)
					return;
					
				this._telephone = value;
				this._isDirty = true;
				
				OnPropertyChanged("Telephone");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RoleID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsRoleIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? RoleId
		{
			get
			{
				return this._roleId; 
			}
			set
			{
				if (_roleId == value && RoleId != null )
					return;
					
				this._roleId = value;
				this._isDirty = true;
				
				OnPropertyChanged("RoleId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CharityID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCharityIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CharityId
		{
			get
			{
				return this._charityId; 
			}
			set
			{
				if (_charityId == value && CharityId != null )
					return;
					
				this._charityId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CharityId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CharityName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CharityName
		{
			get
			{
				return this._charityName; 
			}
			set
			{
				if (_charityName == value)
					return;
					
				this._charityName = value;
				this._isDirty = true;
				
				OnPropertyChanged("CharityName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SalesPerson property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SalesPerson
		{
			get
			{
				return this._salesPerson; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "SalesPerson does not allow null values.");
				if (_salesPerson == value)
					return;
					
				this._salesPerson = value;
				this._isDirty = true;
				
				OnPropertyChanged("SalesPerson");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SalesPersonID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 SalesPersonId
		{
			get
			{
				return this._salesPersonId; 
			}
			set
			{
				if (_salesPersonId == value)
					return;
					
				this._salesPersonId = value;
				this._isDirty = true;
				
				OnPropertyChanged("SalesPersonId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WholesalerID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WholesalerId
		{
			get
			{
				return this._wholesalerId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WholesalerId does not allow null values.");
				if (_wholesalerId == value)
					return;
					
				this._wholesalerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WholesalerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 CustomerId
		{
			get
			{
				return this._customerId; 
			}
			set
			{
				if (_customerId == value)
					return;
					
				this._customerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccountManagerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 AccountManagerId
		{
			get
			{
				return this._accountManagerId; 
			}
			set
			{
				if (_accountManagerId == value)
					return;
					
				this._accountManagerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccountManagerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccountManager property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String AccountManager
		{
			get
			{
				return this._accountManager; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "AccountManager does not allow null values.");
				if (_accountManager == value)
					return;
					
				this._accountManager = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccountManager");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DateProvisioned property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime DateProvisioned
		{
			get
			{
				return this._dateProvisioned; 
			}
			set
			{
				if (_dateProvisioned == value)
					return;
					
				this._dateProvisioned = value;
				this._isDirty = true;
				
				OnPropertyChanged("DateProvisioned");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_ModeratorList_AdminSite"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_ModeratorList_AdminSiteBase Entity 
		///</summary>
		public virtual Vw_ModeratorList_AdminSiteBase Copy()
		{
			//shallow copy entity
			Vw_ModeratorList_AdminSite copy = new Vw_ModeratorList_AdminSite();
				copy.UserId = this.UserId;
				copy.CompanyName = this.CompanyName;
				copy.AdminName = this.AdminName;
				copy.WebLoginName = this.WebLoginName;
				copy.WebLoginPassword = this.WebLoginPassword;
				copy.ModeratorName = this.ModeratorName;
				copy.Email = this.Email;
				copy.Address1 = this.Address1;
				copy.Address2 = this.Address2;
				copy.City = this.City;
				copy.Country = this.Country;
				copy.Region = this.Region;
				copy.PostalCode = this.PostalCode;
				copy.Telephone = this.Telephone;
				copy.RoleId = this.RoleId;
				copy.CharityId = this.CharityId;
				copy.CharityName = this.CharityName;
				copy.SalesPerson = this.SalesPerson;
				copy.SalesPersonId = this.SalesPersonId;
				copy.WholesalerId = this.WholesalerId;
				copy.CustomerId = this.CustomerId;
				copy.AccountManagerId = this.AccountManagerId;
				copy.AccountManager = this.AccountManager;
				copy.DateProvisioned = this.DateProvisioned;
			copy.AcceptChanges();
			return (Vw_ModeratorList_AdminSite)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_ModeratorList_AdminSiteBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_ModeratorList_AdminSiteBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_ModeratorList_AdminSiteBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_ModeratorList_AdminSiteBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_ModeratorList_AdminSiteBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_ModeratorList_AdminSiteBase Object1, Vw_ModeratorList_AdminSiteBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.UserId != Object2.UserId)
				equal = false;
			if (Object1.CompanyName != null && Object2.CompanyName != null )
			{
				if (Object1.CompanyName != Object2.CompanyName)
					equal = false;
			}
			else if (Object1.CompanyName == null ^ Object1.CompanyName == null )
			{
				equal = false;
			}
			if (Object1.AdminName != Object2.AdminName)
				equal = false;
			if (Object1.WebLoginName != Object2.WebLoginName)
				equal = false;
			if (Object1.WebLoginPassword != Object2.WebLoginPassword)
				equal = false;
			if (Object1.ModeratorName != Object2.ModeratorName)
				equal = false;
			if (Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object1.Email == null )
			{
				equal = false;
			}
			if (Object1.Address1 != null && Object2.Address1 != null )
			{
				if (Object1.Address1 != Object2.Address1)
					equal = false;
			}
			else if (Object1.Address1 == null ^ Object1.Address1 == null )
			{
				equal = false;
			}
			if (Object1.Address2 != null && Object2.Address2 != null )
			{
				if (Object1.Address2 != Object2.Address2)
					equal = false;
			}
			else if (Object1.Address2 == null ^ Object1.Address2 == null )
			{
				equal = false;
			}
			if (Object1.City != null && Object2.City != null )
			{
				if (Object1.City != Object2.City)
					equal = false;
			}
			else if (Object1.City == null ^ Object1.City == null )
			{
				equal = false;
			}
			if (Object1.Country != null && Object2.Country != null )
			{
				if (Object1.Country != Object2.Country)
					equal = false;
			}
			else if (Object1.Country == null ^ Object1.Country == null )
			{
				equal = false;
			}
			if (Object1.Region != null && Object2.Region != null )
			{
				if (Object1.Region != Object2.Region)
					equal = false;
			}
			else if (Object1.Region == null ^ Object1.Region == null )
			{
				equal = false;
			}
			if (Object1.PostalCode != null && Object2.PostalCode != null )
			{
				if (Object1.PostalCode != Object2.PostalCode)
					equal = false;
			}
			else if (Object1.PostalCode == null ^ Object1.PostalCode == null )
			{
				equal = false;
			}
			if (Object1.Telephone != null && Object2.Telephone != null )
			{
				if (Object1.Telephone != Object2.Telephone)
					equal = false;
			}
			else if (Object1.Telephone == null ^ Object1.Telephone == null )
			{
				equal = false;
			}
			if (Object1.RoleId != null && Object2.RoleId != null )
			{
				if (Object1.RoleId != Object2.RoleId)
					equal = false;
			}
			else if (Object1.RoleId == null ^ Object1.RoleId == null )
			{
				equal = false;
			}
			if (Object1.CharityId != null && Object2.CharityId != null )
			{
				if (Object1.CharityId != Object2.CharityId)
					equal = false;
			}
			else if (Object1.CharityId == null ^ Object1.CharityId == null )
			{
				equal = false;
			}
			if (Object1.CharityName != null && Object2.CharityName != null )
			{
				if (Object1.CharityName != Object2.CharityName)
					equal = false;
			}
			else if (Object1.CharityName == null ^ Object1.CharityName == null )
			{
				equal = false;
			}
			if (Object1.SalesPerson != Object2.SalesPerson)
				equal = false;
			if (Object1.SalesPersonId != Object2.SalesPersonId)
				equal = false;
			if (Object1.WholesalerId != Object2.WholesalerId)
				equal = false;
			if (Object1.CustomerId != Object2.CustomerId)
				equal = false;
			if (Object1.AccountManagerId != Object2.AccountManagerId)
				equal = false;
			if (Object1.AccountManager != Object2.AccountManager)
				equal = false;
			if (Object1.DateProvisioned != Object2.DateProvisioned)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_ModeratorList_AdminSite entity, string propertyName)
		{
			switch (propertyName)
			{
				case "UserId":
					return entity.UserId;
				case "CompanyName":
					return entity.CompanyName;
				case "AdminName":
					return entity.AdminName;
				case "WebLoginName":
					return entity.WebLoginName;
				case "WebLoginPassword":
					return entity.WebLoginPassword;
				case "ModeratorName":
					return entity.ModeratorName;
				case "Email":
					return entity.Email;
				case "Address1":
					return entity.Address1;
				case "Address2":
					return entity.Address2;
				case "City":
					return entity.City;
				case "Country":
					return entity.Country;
				case "Region":
					return entity.Region;
				case "PostalCode":
					return entity.PostalCode;
				case "Telephone":
					return entity.Telephone;
				case "RoleId":
					return entity.RoleId;
				case "CharityId":
					return entity.CharityId;
				case "CharityName":
					return entity.CharityName;
				case "SalesPerson":
					return entity.SalesPerson;
				case "SalesPersonId":
					return entity.SalesPersonId;
				case "WholesalerId":
					return entity.WholesalerId;
				case "CustomerId":
					return entity.CustomerId;
				case "AccountManagerId":
					return entity.AccountManagerId;
				case "AccountManager":
					return entity.AccountManager;
				case "DateProvisioned":
					return entity.DateProvisioned;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_ModeratorList_AdminSite, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{25}{24}- UserId: {0}{24}- CompanyName: {1}{24}- AdminName: {2}{24}- WebLoginName: {3}{24}- WebLoginPassword: {4}{24}- ModeratorName: {5}{24}- Email: {6}{24}- Address1: {7}{24}- Address2: {8}{24}- City: {9}{24}- Country: {10}{24}- Region: {11}{24}- PostalCode: {12}{24}- Telephone: {13}{24}- RoleId: {14}{24}- CharityId: {15}{24}- CharityName: {16}{24}- SalesPerson: {17}{24}- SalesPersonId: {18}{24}- WholesalerId: {19}{24}- CustomerId: {20}{24}- AccountManagerId: {21}{24}- AccountManager: {22}{24}- DateProvisioned: {23}{24}", 
				this.UserId,
				(this.CompanyName == null) ? string.Empty : this.CompanyName.ToString(),
			     
				this.AdminName,
				this.WebLoginName,
				this.WebLoginPassword,
				this.ModeratorName,
				(this.Email == null) ? string.Empty : this.Email.ToString(),
			     
				(this.Address1 == null) ? string.Empty : this.Address1.ToString(),
			     
				(this.Address2 == null) ? string.Empty : this.Address2.ToString(),
			     
				(this.City == null) ? string.Empty : this.City.ToString(),
			     
				(this.Country == null) ? string.Empty : this.Country.ToString(),
			     
				(this.Region == null) ? string.Empty : this.Region.ToString(),
			     
				(this.PostalCode == null) ? string.Empty : this.PostalCode.ToString(),
			     
				(this.Telephone == null) ? string.Empty : this.Telephone.ToString(),
			     
				(this.RoleId == null) ? string.Empty : this.RoleId.ToString(),
			     
				(this.CharityId == null) ? string.Empty : this.CharityId.ToString(),
			     
				(this.CharityName == null) ? string.Empty : this.CharityName.ToString(),
			     
				this.SalesPerson,
				this.SalesPersonId,
				this.WholesalerId,
				this.CustomerId,
				this.AccountManagerId,
				this.AccountManager,
				this.DateProvisioned,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_ModeratorList_AdminSite columns.
	/// </summary>
	[Serializable]
	public enum Vw_ModeratorList_AdminSiteColumn
	{
		/// <summary>
		/// UserID : 
		/// </summary>
		[EnumTextValue("UserID")]
		[ColumnEnum("UserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		UserId,
		/// <summary>
		/// CompanyName : 
		/// </summary>
		[EnumTextValue("CompanyName")]
		[ColumnEnum("CompanyName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CompanyName,
		/// <summary>
		/// AdminName : 
		/// </summary>
		[EnumTextValue("AdminName")]
		[ColumnEnum("AdminName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		AdminName,
		/// <summary>
		/// WebLoginName : 
		/// </summary>
		[EnumTextValue("WebLoginName")]
		[ColumnEnum("WebLoginName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		WebLoginName,
		/// <summary>
		/// WebLoginPassword : 
		/// </summary>
		[EnumTextValue("WebLoginPassword")]
		[ColumnEnum("WebLoginPassword", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		WebLoginPassword,
		/// <summary>
		/// ModeratorName : 
		/// </summary>
		[EnumTextValue("ModeratorName")]
		[ColumnEnum("ModeratorName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		ModeratorName,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Email,
		/// <summary>
		/// Address1 : 
		/// </summary>
		[EnumTextValue("Address1")]
		[ColumnEnum("Address1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Address1,
		/// <summary>
		/// Address2 : 
		/// </summary>
		[EnumTextValue("Address2")]
		[ColumnEnum("Address2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Address2,
		/// <summary>
		/// City : 
		/// </summary>
		[EnumTextValue("City")]
		[ColumnEnum("City", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		City,
		/// <summary>
		/// Country : 
		/// </summary>
		[EnumTextValue("Country")]
		[ColumnEnum("Country", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		Country,
		/// <summary>
		/// Region : 
		/// </summary>
		[EnumTextValue("Region")]
		[ColumnEnum("Region", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		Region,
		/// <summary>
		/// PostalCode : 
		/// </summary>
		[EnumTextValue("PostalCode")]
		[ColumnEnum("PostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		PostalCode,
		/// <summary>
		/// Telephone : 
		/// </summary>
		[EnumTextValue("Telephone")]
		[ColumnEnum("Telephone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Telephone,
		/// <summary>
		/// RoleID : 
		/// </summary>
		[EnumTextValue("RoleID")]
		[ColumnEnum("RoleID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		RoleId,
		/// <summary>
		/// CharityID : 
		/// </summary>
		[EnumTextValue("CharityID")]
		[ColumnEnum("CharityID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CharityId,
		/// <summary>
		/// CharityName : 
		/// </summary>
		[EnumTextValue("CharityName")]
		[ColumnEnum("CharityName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CharityName,
		/// <summary>
		/// SalesPerson : 
		/// </summary>
		[EnumTextValue("SalesPerson")]
		[ColumnEnum("SalesPerson", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		SalesPerson,
		/// <summary>
		/// SalesPersonID : 
		/// </summary>
		[EnumTextValue("SalesPersonID")]
		[ColumnEnum("SalesPersonID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SalesPersonId,
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		[EnumTextValue("WholesalerID")]
		[ColumnEnum("WholesalerID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		WholesalerId,
		/// <summary>
		/// CustomerID : 
		/// </summary>
		[EnumTextValue("CustomerID")]
		[ColumnEnum("CustomerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CustomerId,
		/// <summary>
		/// AccountManagerID : 
		/// </summary>
		[EnumTextValue("AccountManagerID")]
		[ColumnEnum("AccountManagerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AccountManagerId,
		/// <summary>
		/// AccountManager : 
		/// </summary>
		[EnumTextValue("AccountManager")]
		[ColumnEnum("AccountManager", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		AccountManager,
		/// <summary>
		/// DateProvisioned : 
		/// </summary>
		[EnumTextValue("DateProvisioned")]
		[ColumnEnum("DateProvisioned", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		DateProvisioned
	}//End enum

} // end namespace
