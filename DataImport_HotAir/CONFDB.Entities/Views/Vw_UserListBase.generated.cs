/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_UserList.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_UserList' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_UserListBase")]
	public abstract partial class Vw_UserListBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// UserID : 
		/// </summary>
		private System.Int32		  _userId = (int)0;
		
		/// <summary>
		/// Username : 
		/// </summary>
		private System.String		  _username = string.Empty;
		
		/// <summary>
		/// Password : 
		/// </summary>
		private System.String		  _password = string.Empty;
		
		/// <summary>
		/// DisplayName : 
		/// </summary>
		private System.String		  _displayName = string.Empty;
		
		/// <summary>
		/// Email : 
		/// </summary>
		private System.String		  _email = null;
		
		/// <summary>
		/// Telephone : 
		/// </summary>
		private System.String		  _telephone = null;
		
		/// <summary>
		/// Enabled : 
		/// </summary>
		private System.Boolean		  _enabled = false;
		
		/// <summary>
		/// CompanyID : 
		/// </summary>
		private System.Int32?		  _companyId = (int)0;
		
		/// <summary>
		/// SalesPersonID : 
		/// </summary>
		private System.Int32?		  _salesPersonId = (int)0;
		
		/// <summary>
		/// RoleID : 
		/// </summary>
		private System.Int32?		  _roleId = (int)0;
		
		/// <summary>
		/// MustChangePassword : 
		/// </summary>
		private System.Boolean?		  _mustChangePassword = false;
		
		/// <summary>
		/// Address1 : 
		/// </summary>
		private System.String		  _address1 = null;
		
		/// <summary>
		/// Address2 : 
		/// </summary>
		private System.String		  _address2 = null;
		
		/// <summary>
		/// City : 
		/// </summary>
		private System.String		  _city = null;
		
		/// <summary>
		/// Country : 
		/// </summary>
		private System.String		  _country = null;
		
		/// <summary>
		/// Region : 
		/// </summary>
		private System.String		  _region = null;
		
		/// <summary>
		/// PostalCode : 
		/// </summary>
		private System.String		  _postalCode = null;
		
		/// <summary>
		/// CharityID : 
		/// </summary>
		private System.Int32?		  _charityId = (int)0;
		
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		private System.String		  _webMemberId = null;
		
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		private System.String		  _wholesalerId = null;
		
		/// <summary>
		/// CustomerID : 
		/// </summary>
		private System.Int32?		  _customerId = (int)0;
		
		/// <summary>
		/// ModeratorID : 
		/// </summary>
		private System.Int32?		  _moderatorId = (int)0;
		
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		private System.String		  _ddlDescription = string.Empty;
		
		/// <summary>
		/// RoleName : 
		/// </summary>
		private System.String		  _roleName = string.Empty;
		
		/// <summary>
		/// CustomerSalesPersonID : 
		/// </summary>
		private System.Int32?		  _customerSalesPersonId = (int)0;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_UserListBase"/> instance.
		///</summary>
		public Vw_UserListBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_UserListBase"/> instance.
		///</summary>
		///<param name="_userId"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_displayName"></param>
		///<param name="_email"></param>
		///<param name="_telephone"></param>
		///<param name="_enabled"></param>
		///<param name="_companyId"></param>
		///<param name="_salesPersonId"></param>
		///<param name="_roleId"></param>
		///<param name="_mustChangePassword"></param>
		///<param name="_address1"></param>
		///<param name="_address2"></param>
		///<param name="_city"></param>
		///<param name="_country"></param>
		///<param name="_region"></param>
		///<param name="_postalCode"></param>
		///<param name="_charityId"></param>
		///<param name="_webMemberId"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_moderatorId"></param>
		///<param name="_ddlDescription"></param>
		///<param name="_roleName"></param>
		///<param name="_customerSalesPersonId"></param>
		public Vw_UserListBase(System.Int32 _userId, System.String _username, System.String _password, System.String _displayName, System.String _email, System.String _telephone, System.Boolean _enabled, System.Int32? _companyId, System.Int32? _salesPersonId, System.Int32? _roleId, System.Boolean? _mustChangePassword, System.String _address1, System.String _address2, System.String _city, System.String _country, System.String _region, System.String _postalCode, System.Int32? _charityId, System.String _webMemberId, System.String _wholesalerId, System.Int32? _customerId, System.Int32? _moderatorId, System.String _ddlDescription, System.String _roleName, System.Int32? _customerSalesPersonId)
		{
			this._userId = _userId;
			this._username = _username;
			this._password = _password;
			this._displayName = _displayName;
			this._email = _email;
			this._telephone = _telephone;
			this._enabled = _enabled;
			this._companyId = _companyId;
			this._salesPersonId = _salesPersonId;
			this._roleId = _roleId;
			this._mustChangePassword = _mustChangePassword;
			this._address1 = _address1;
			this._address2 = _address2;
			this._city = _city;
			this._country = _country;
			this._region = _region;
			this._postalCode = _postalCode;
			this._charityId = _charityId;
			this._webMemberId = _webMemberId;
			this._wholesalerId = _wholesalerId;
			this._customerId = _customerId;
			this._moderatorId = _moderatorId;
			this._ddlDescription = _ddlDescription;
			this._roleName = _roleName;
			this._customerSalesPersonId = _customerSalesPersonId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_UserList"/> instance.
		///</summary>
		///<param name="_userId"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_displayName"></param>
		///<param name="_email"></param>
		///<param name="_telephone"></param>
		///<param name="_enabled"></param>
		///<param name="_companyId"></param>
		///<param name="_salesPersonId"></param>
		///<param name="_roleId"></param>
		///<param name="_mustChangePassword"></param>
		///<param name="_address1"></param>
		///<param name="_address2"></param>
		///<param name="_city"></param>
		///<param name="_country"></param>
		///<param name="_region"></param>
		///<param name="_postalCode"></param>
		///<param name="_charityId"></param>
		///<param name="_webMemberId"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_moderatorId"></param>
		///<param name="_ddlDescription"></param>
		///<param name="_roleName"></param>
		///<param name="_customerSalesPersonId"></param>
		public static Vw_UserList CreateVw_UserList(System.Int32 _userId, System.String _username, System.String _password, System.String _displayName, System.String _email, System.String _telephone, System.Boolean _enabled, System.Int32? _companyId, System.Int32? _salesPersonId, System.Int32? _roleId, System.Boolean? _mustChangePassword, System.String _address1, System.String _address2, System.String _city, System.String _country, System.String _region, System.String _postalCode, System.Int32? _charityId, System.String _webMemberId, System.String _wholesalerId, System.Int32? _customerId, System.Int32? _moderatorId, System.String _ddlDescription, System.String _roleName, System.Int32? _customerSalesPersonId)
		{
			Vw_UserList newVw_UserList = new Vw_UserList();
			newVw_UserList.UserId = _userId;
			newVw_UserList.Username = _username;
			newVw_UserList.Password = _password;
			newVw_UserList.DisplayName = _displayName;
			newVw_UserList.Email = _email;
			newVw_UserList.Telephone = _telephone;
			newVw_UserList.Enabled = _enabled;
			newVw_UserList.CompanyId = _companyId;
			newVw_UserList.SalesPersonId = _salesPersonId;
			newVw_UserList.RoleId = _roleId;
			newVw_UserList.MustChangePassword = _mustChangePassword;
			newVw_UserList.Address1 = _address1;
			newVw_UserList.Address2 = _address2;
			newVw_UserList.City = _city;
			newVw_UserList.Country = _country;
			newVw_UserList.Region = _region;
			newVw_UserList.PostalCode = _postalCode;
			newVw_UserList.CharityId = _charityId;
			newVw_UserList.WebMemberId = _webMemberId;
			newVw_UserList.WholesalerId = _wholesalerId;
			newVw_UserList.CustomerId = _customerId;
			newVw_UserList.ModeratorId = _moderatorId;
			newVw_UserList.DdlDescription = _ddlDescription;
			newVw_UserList.RoleName = _roleName;
			newVw_UserList.CustomerSalesPersonId = _customerSalesPersonId;
			return newVw_UserList;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the UserID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 UserId
		{
			get
			{
				return this._userId; 
			}
			set
			{
				if (_userId == value)
					return;
					
				this._userId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Username property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Username
		{
			get
			{
				return this._username; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Username does not allow null values.");
				if (_username == value)
					return;
					
				this._username = value;
				this._isDirty = true;
				
				OnPropertyChanged("Username");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Password property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Password
		{
			get
			{
				return this._password; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Password does not allow null values.");
				if (_password == value)
					return;
					
				this._password = value;
				this._isDirty = true;
				
				OnPropertyChanged("Password");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DisplayName
		{
			get
			{
				return this._displayName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "DisplayName does not allow null values.");
				if (_displayName == value)
					return;
					
				this._displayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("DisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Email
		{
			get
			{
				return this._email; 
			}
			set
			{
				if (_email == value)
					return;
					
				this._email = value;
				this._isDirty = true;
				
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Telephone property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Telephone
		{
			get
			{
				return this._telephone; 
			}
			set
			{
				if (_telephone == value)
					return;
					
				this._telephone = value;
				this._isDirty = true;
				
				OnPropertyChanged("Telephone");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Enabled property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean Enabled
		{
			get
			{
				return this._enabled; 
			}
			set
			{
				if (_enabled == value)
					return;
					
				this._enabled = value;
				this._isDirty = true;
				
				OnPropertyChanged("Enabled");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CompanyID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCompanyIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CompanyId
		{
			get
			{
				return this._companyId; 
			}
			set
			{
				if (_companyId == value && CompanyId != null )
					return;
					
				this._companyId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CompanyId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SalesPersonID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSalesPersonIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SalesPersonId
		{
			get
			{
				return this._salesPersonId; 
			}
			set
			{
				if (_salesPersonId == value && SalesPersonId != null )
					return;
					
				this._salesPersonId = value;
				this._isDirty = true;
				
				OnPropertyChanged("SalesPersonId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RoleID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsRoleIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? RoleId
		{
			get
			{
				return this._roleId; 
			}
			set
			{
				if (_roleId == value && RoleId != null )
					return;
					
				this._roleId = value;
				this._isDirty = true;
				
				OnPropertyChanged("RoleId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MustChangePassword property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsMustChangePasswordNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? MustChangePassword
		{
			get
			{
				return this._mustChangePassword; 
			}
			set
			{
				if (_mustChangePassword == value && MustChangePassword != null )
					return;
					
				this._mustChangePassword = value;
				this._isDirty = true;
				
				OnPropertyChanged("MustChangePassword");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Address1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Address1
		{
			get
			{
				return this._address1; 
			}
			set
			{
				if (_address1 == value)
					return;
					
				this._address1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("Address1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Address2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Address2
		{
			get
			{
				return this._address2; 
			}
			set
			{
				if (_address2 == value)
					return;
					
				this._address2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("Address2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the City property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String City
		{
			get
			{
				return this._city; 
			}
			set
			{
				if (_city == value)
					return;
					
				this._city = value;
				this._isDirty = true;
				
				OnPropertyChanged("City");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Country property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Country
		{
			get
			{
				return this._country; 
			}
			set
			{
				if (_country == value)
					return;
					
				this._country = value;
				this._isDirty = true;
				
				OnPropertyChanged("Country");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Region property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Region
		{
			get
			{
				return this._region; 
			}
			set
			{
				if (_region == value)
					return;
					
				this._region = value;
				this._isDirty = true;
				
				OnPropertyChanged("Region");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PostalCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PostalCode
		{
			get
			{
				return this._postalCode; 
			}
			set
			{
				if (_postalCode == value)
					return;
					
				this._postalCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("PostalCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CharityID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCharityIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CharityId
		{
			get
			{
				return this._charityId; 
			}
			set
			{
				if (_charityId == value && CharityId != null )
					return;
					
				this._charityId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CharityId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebMemberID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebMemberId
		{
			get
			{
				return this._webMemberId; 
			}
			set
			{
				if (_webMemberId == value)
					return;
					
				this._webMemberId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WholesalerID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WholesalerId
		{
			get
			{
				return this._wholesalerId; 
			}
			set
			{
				if (_wholesalerId == value)
					return;
					
				this._wholesalerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WholesalerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCustomerIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CustomerId
		{
			get
			{
				return this._customerId; 
			}
			set
			{
				if (_customerId == value && CustomerId != null )
					return;
					
				this._customerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsModeratorIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ModeratorId
		{
			get
			{
				return this._moderatorId; 
			}
			set
			{
				if (_moderatorId == value && ModeratorId != null )
					return;
					
				this._moderatorId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DDLDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DdlDescription
		{
			get
			{
				return this._ddlDescription; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "DdlDescription does not allow null values.");
				if (_ddlDescription == value)
					return;
					
				this._ddlDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("DdlDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RoleName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String RoleName
		{
			get
			{
				return this._roleName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "RoleName does not allow null values.");
				if (_roleName == value)
					return;
					
				this._roleName = value;
				this._isDirty = true;
				
				OnPropertyChanged("RoleName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerSalesPersonID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCustomerSalesPersonIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CustomerSalesPersonId
		{
			get
			{
				return this._customerSalesPersonId; 
			}
			set
			{
				if (_customerSalesPersonId == value && CustomerSalesPersonId != null )
					return;
					
				this._customerSalesPersonId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerSalesPersonId");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_UserList"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_UserListBase Entity 
		///</summary>
		public virtual Vw_UserListBase Copy()
		{
			//shallow copy entity
			Vw_UserList copy = new Vw_UserList();
				copy.UserId = this.UserId;
				copy.Username = this.Username;
				copy.Password = this.Password;
				copy.DisplayName = this.DisplayName;
				copy.Email = this.Email;
				copy.Telephone = this.Telephone;
				copy.Enabled = this.Enabled;
				copy.CompanyId = this.CompanyId;
				copy.SalesPersonId = this.SalesPersonId;
				copy.RoleId = this.RoleId;
				copy.MustChangePassword = this.MustChangePassword;
				copy.Address1 = this.Address1;
				copy.Address2 = this.Address2;
				copy.City = this.City;
				copy.Country = this.Country;
				copy.Region = this.Region;
				copy.PostalCode = this.PostalCode;
				copy.CharityId = this.CharityId;
				copy.WebMemberId = this.WebMemberId;
				copy.WholesalerId = this.WholesalerId;
				copy.CustomerId = this.CustomerId;
				copy.ModeratorId = this.ModeratorId;
				copy.DdlDescription = this.DdlDescription;
				copy.RoleName = this.RoleName;
				copy.CustomerSalesPersonId = this.CustomerSalesPersonId;
			copy.AcceptChanges();
			return (Vw_UserList)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_UserListBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_UserListBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_UserListBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_UserListBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_UserListBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_UserListBase Object1, Vw_UserListBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.UserId != Object2.UserId)
				equal = false;
			if (Object1.Username != Object2.Username)
				equal = false;
			if (Object1.Password != Object2.Password)
				equal = false;
			if (Object1.DisplayName != Object2.DisplayName)
				equal = false;
			if (Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object1.Email == null )
			{
				equal = false;
			}
			if (Object1.Telephone != null && Object2.Telephone != null )
			{
				if (Object1.Telephone != Object2.Telephone)
					equal = false;
			}
			else if (Object1.Telephone == null ^ Object1.Telephone == null )
			{
				equal = false;
			}
			if (Object1.Enabled != Object2.Enabled)
				equal = false;
			if (Object1.CompanyId != null && Object2.CompanyId != null )
			{
				if (Object1.CompanyId != Object2.CompanyId)
					equal = false;
			}
			else if (Object1.CompanyId == null ^ Object1.CompanyId == null )
			{
				equal = false;
			}
			if (Object1.SalesPersonId != null && Object2.SalesPersonId != null )
			{
				if (Object1.SalesPersonId != Object2.SalesPersonId)
					equal = false;
			}
			else if (Object1.SalesPersonId == null ^ Object1.SalesPersonId == null )
			{
				equal = false;
			}
			if (Object1.RoleId != null && Object2.RoleId != null )
			{
				if (Object1.RoleId != Object2.RoleId)
					equal = false;
			}
			else if (Object1.RoleId == null ^ Object1.RoleId == null )
			{
				equal = false;
			}
			if (Object1.MustChangePassword != null && Object2.MustChangePassword != null )
			{
				if (Object1.MustChangePassword != Object2.MustChangePassword)
					equal = false;
			}
			else if (Object1.MustChangePassword == null ^ Object1.MustChangePassword == null )
			{
				equal = false;
			}
			if (Object1.Address1 != null && Object2.Address1 != null )
			{
				if (Object1.Address1 != Object2.Address1)
					equal = false;
			}
			else if (Object1.Address1 == null ^ Object1.Address1 == null )
			{
				equal = false;
			}
			if (Object1.Address2 != null && Object2.Address2 != null )
			{
				if (Object1.Address2 != Object2.Address2)
					equal = false;
			}
			else if (Object1.Address2 == null ^ Object1.Address2 == null )
			{
				equal = false;
			}
			if (Object1.City != null && Object2.City != null )
			{
				if (Object1.City != Object2.City)
					equal = false;
			}
			else if (Object1.City == null ^ Object1.City == null )
			{
				equal = false;
			}
			if (Object1.Country != null && Object2.Country != null )
			{
				if (Object1.Country != Object2.Country)
					equal = false;
			}
			else if (Object1.Country == null ^ Object1.Country == null )
			{
				equal = false;
			}
			if (Object1.Region != null && Object2.Region != null )
			{
				if (Object1.Region != Object2.Region)
					equal = false;
			}
			else if (Object1.Region == null ^ Object1.Region == null )
			{
				equal = false;
			}
			if (Object1.PostalCode != null && Object2.PostalCode != null )
			{
				if (Object1.PostalCode != Object2.PostalCode)
					equal = false;
			}
			else if (Object1.PostalCode == null ^ Object1.PostalCode == null )
			{
				equal = false;
			}
			if (Object1.CharityId != null && Object2.CharityId != null )
			{
				if (Object1.CharityId != Object2.CharityId)
					equal = false;
			}
			else if (Object1.CharityId == null ^ Object1.CharityId == null )
			{
				equal = false;
			}
			if (Object1.WebMemberId != null && Object2.WebMemberId != null )
			{
				if (Object1.WebMemberId != Object2.WebMemberId)
					equal = false;
			}
			else if (Object1.WebMemberId == null ^ Object1.WebMemberId == null )
			{
				equal = false;
			}
			if (Object1.WholesalerId != null && Object2.WholesalerId != null )
			{
				if (Object1.WholesalerId != Object2.WholesalerId)
					equal = false;
			}
			else if (Object1.WholesalerId == null ^ Object1.WholesalerId == null )
			{
				equal = false;
			}
			if (Object1.CustomerId != null && Object2.CustomerId != null )
			{
				if (Object1.CustomerId != Object2.CustomerId)
					equal = false;
			}
			else if (Object1.CustomerId == null ^ Object1.CustomerId == null )
			{
				equal = false;
			}
			if (Object1.ModeratorId != null && Object2.ModeratorId != null )
			{
				if (Object1.ModeratorId != Object2.ModeratorId)
					equal = false;
			}
			else if (Object1.ModeratorId == null ^ Object1.ModeratorId == null )
			{
				equal = false;
			}
			if (Object1.DdlDescription != Object2.DdlDescription)
				equal = false;
			if (Object1.RoleName != Object2.RoleName)
				equal = false;
			if (Object1.CustomerSalesPersonId != null && Object2.CustomerSalesPersonId != null )
			{
				if (Object1.CustomerSalesPersonId != Object2.CustomerSalesPersonId)
					equal = false;
			}
			else if (Object1.CustomerSalesPersonId == null ^ Object1.CustomerSalesPersonId == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_UserList entity, string propertyName)
		{
			switch (propertyName)
			{
				case "UserId":
					return entity.UserId;
				case "Username":
					return entity.Username;
				case "Password":
					return entity.Password;
				case "DisplayName":
					return entity.DisplayName;
				case "Email":
					return entity.Email;
				case "Telephone":
					return entity.Telephone;
				case "Enabled":
					return entity.Enabled;
				case "CompanyId":
					return entity.CompanyId;
				case "SalesPersonId":
					return entity.SalesPersonId;
				case "RoleId":
					return entity.RoleId;
				case "MustChangePassword":
					return entity.MustChangePassword;
				case "Address1":
					return entity.Address1;
				case "Address2":
					return entity.Address2;
				case "City":
					return entity.City;
				case "Country":
					return entity.Country;
				case "Region":
					return entity.Region;
				case "PostalCode":
					return entity.PostalCode;
				case "CharityId":
					return entity.CharityId;
				case "WebMemberId":
					return entity.WebMemberId;
				case "WholesalerId":
					return entity.WholesalerId;
				case "CustomerId":
					return entity.CustomerId;
				case "ModeratorId":
					return entity.ModeratorId;
				case "DdlDescription":
					return entity.DdlDescription;
				case "RoleName":
					return entity.RoleName;
				case "CustomerSalesPersonId":
					return entity.CustomerSalesPersonId;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_UserList, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{26}{25}- UserId: {0}{25}- Username: {1}{25}- Password: {2}{25}- DisplayName: {3}{25}- Email: {4}{25}- Telephone: {5}{25}- Enabled: {6}{25}- CompanyId: {7}{25}- SalesPersonId: {8}{25}- RoleId: {9}{25}- MustChangePassword: {10}{25}- Address1: {11}{25}- Address2: {12}{25}- City: {13}{25}- Country: {14}{25}- Region: {15}{25}- PostalCode: {16}{25}- CharityId: {17}{25}- WebMemberId: {18}{25}- WholesalerId: {19}{25}- CustomerId: {20}{25}- ModeratorId: {21}{25}- DdlDescription: {22}{25}- RoleName: {23}{25}- CustomerSalesPersonId: {24}{25}", 
				this.UserId,
				this.Username,
				this.Password,
				this.DisplayName,
				(this.Email == null) ? string.Empty : this.Email.ToString(),
			     
				(this.Telephone == null) ? string.Empty : this.Telephone.ToString(),
			     
				this.Enabled,
				(this.CompanyId == null) ? string.Empty : this.CompanyId.ToString(),
			     
				(this.SalesPersonId == null) ? string.Empty : this.SalesPersonId.ToString(),
			     
				(this.RoleId == null) ? string.Empty : this.RoleId.ToString(),
			     
				(this.MustChangePassword == null) ? string.Empty : this.MustChangePassword.ToString(),
			     
				(this.Address1 == null) ? string.Empty : this.Address1.ToString(),
			     
				(this.Address2 == null) ? string.Empty : this.Address2.ToString(),
			     
				(this.City == null) ? string.Empty : this.City.ToString(),
			     
				(this.Country == null) ? string.Empty : this.Country.ToString(),
			     
				(this.Region == null) ? string.Empty : this.Region.ToString(),
			     
				(this.PostalCode == null) ? string.Empty : this.PostalCode.ToString(),
			     
				(this.CharityId == null) ? string.Empty : this.CharityId.ToString(),
			     
				(this.WebMemberId == null) ? string.Empty : this.WebMemberId.ToString(),
			     
				(this.WholesalerId == null) ? string.Empty : this.WholesalerId.ToString(),
			     
				(this.CustomerId == null) ? string.Empty : this.CustomerId.ToString(),
			     
				(this.ModeratorId == null) ? string.Empty : this.ModeratorId.ToString(),
			     
				this.DdlDescription,
				this.RoleName,
				(this.CustomerSalesPersonId == null) ? string.Empty : this.CustomerSalesPersonId.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_UserList columns.
	/// </summary>
	[Serializable]
	public enum Vw_UserListColumn
	{
		/// <summary>
		/// UserID : 
		/// </summary>
		[EnumTextValue("UserID")]
		[ColumnEnum("UserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		UserId,
		/// <summary>
		/// Username : 
		/// </summary>
		[EnumTextValue("Username")]
		[ColumnEnum("Username", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		Username,
		/// <summary>
		/// Password : 
		/// </summary>
		[EnumTextValue("Password")]
		[ColumnEnum("Password", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		Password,
		/// <summary>
		/// DisplayName : 
		/// </summary>
		[EnumTextValue("DisplayName")]
		[ColumnEnum("DisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		DisplayName,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Email,
		/// <summary>
		/// Telephone : 
		/// </summary>
		[EnumTextValue("Telephone")]
		[ColumnEnum("Telephone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Telephone,
		/// <summary>
		/// Enabled : 
		/// </summary>
		[EnumTextValue("Enabled")]
		[ColumnEnum("Enabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		Enabled,
		/// <summary>
		/// CompanyID : 
		/// </summary>
		[EnumTextValue("CompanyID")]
		[ColumnEnum("CompanyID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CompanyId,
		/// <summary>
		/// SalesPersonID : 
		/// </summary>
		[EnumTextValue("SalesPersonID")]
		[ColumnEnum("SalesPersonID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SalesPersonId,
		/// <summary>
		/// RoleID : 
		/// </summary>
		[EnumTextValue("RoleID")]
		[ColumnEnum("RoleID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		RoleId,
		/// <summary>
		/// MustChangePassword : 
		/// </summary>
		[EnumTextValue("MustChangePassword")]
		[ColumnEnum("MustChangePassword", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		MustChangePassword,
		/// <summary>
		/// Address1 : 
		/// </summary>
		[EnumTextValue("Address1")]
		[ColumnEnum("Address1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Address1,
		/// <summary>
		/// Address2 : 
		/// </summary>
		[EnumTextValue("Address2")]
		[ColumnEnum("Address2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Address2,
		/// <summary>
		/// City : 
		/// </summary>
		[EnumTextValue("City")]
		[ColumnEnum("City", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		City,
		/// <summary>
		/// Country : 
		/// </summary>
		[EnumTextValue("Country")]
		[ColumnEnum("Country", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		Country,
		/// <summary>
		/// Region : 
		/// </summary>
		[EnumTextValue("Region")]
		[ColumnEnum("Region", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		Region,
		/// <summary>
		/// PostalCode : 
		/// </summary>
		[EnumTextValue("PostalCode")]
		[ColumnEnum("PostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		PostalCode,
		/// <summary>
		/// CharityID : 
		/// </summary>
		[EnumTextValue("CharityID")]
		[ColumnEnum("CharityID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CharityId,
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		[EnumTextValue("WebMemberID")]
		[ColumnEnum("WebMemberID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebMemberId,
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		[EnumTextValue("WholesalerID")]
		[ColumnEnum("WholesalerID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		WholesalerId,
		/// <summary>
		/// CustomerID : 
		/// </summary>
		[EnumTextValue("CustomerID")]
		[ColumnEnum("CustomerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CustomerId,
		/// <summary>
		/// ModeratorID : 
		/// </summary>
		[EnumTextValue("ModeratorID")]
		[ColumnEnum("ModeratorID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ModeratorId,
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		[EnumTextValue("DDLDescription")]
		[ColumnEnum("DDLDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 203)]
		DdlDescription,
		/// <summary>
		/// RoleName : 
		/// </summary>
		[EnumTextValue("RoleName")]
		[ColumnEnum("RoleName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		RoleName,
		/// <summary>
		/// CustomerSalesPersonID : 
		/// </summary>
		[EnumTextValue("CustomerSalesPersonID")]
		[ColumnEnum("CustomerSalesPersonID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CustomerSalesPersonId
	}//End enum

} // end namespace
