/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_AccessType_ProductRates.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_AccessType_ProductRates' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_AccessType_ProductRatesBase")]
	public abstract partial class Vw_AccessType_ProductRatesBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ProductRateName : 
		/// </summary>
		private System.String		  _productRateName = null;
		
		/// <summary>
		/// ProductID : 
		/// </summary>
		private System.Int32		  _productId = (int)0;
		
		/// <summary>
		/// ProductName : 
		/// </summary>
		private System.String		  _productName = null;
		
		/// <summary>
		/// ProductDefaultOption : 
		/// </summary>
		private System.Boolean?		  _productDefaultOption = false;
		
		/// <summary>
		/// ProductTypeID : 
		/// </summary>
		private System.Int32		  _productTypeId = (int)0;
		
		/// <summary>
		/// ProductRateTypeID : 
		/// </summary>
		private System.Int32		  _productRateTypeId = (int)0;
		
		/// <summary>
		/// ProductTypeName : 
		/// </summary>
		private System.String		  _productTypeName = null;
		
		/// <summary>
		/// ProductRateTypeName : 
		/// </summary>
		private System.String		  _productRateTypeName = null;
		
		/// <summary>
		/// ProductDisplayOrder : 
		/// </summary>
		private System.Int32?		  _productDisplayOrder = (int)0;
		
		/// <summary>
		/// ProductRateDisplayName : 
		/// </summary>
		private System.String		  _productRateDisplayName = null;
		
		/// <summary>
		/// ProductRateDisplayOrder : 
		/// </summary>
		private System.Int32?		  _productRateDisplayOrder = (int)0;
		
		/// <summary>
		/// ProductTypeDisplayName : 
		/// </summary>
		private System.String		  _productTypeDisplayName = null;
		
		/// <summary>
		/// ProductTypeDisplayOrder : 
		/// </summary>
		private System.Int32?		  _productTypeDisplayOrder = (int)0;
		
		/// <summary>
		/// ProductRateTypeDisplayName : 
		/// </summary>
		private System.String		  _productRateTypeDisplayName = null;
		
		/// <summary>
		/// ProductRateTypeDisplayOrder : 
		/// </summary>
		private System.Int32?		  _productRateTypeDisplayOrder = (int)0;
		
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		private System.String		  _ddlDescription = null;
		
		/// <summary>
		/// ProductRateDescription : 
		/// </summary>
		private System.String		  _productRateDescription = null;
		
		/// <summary>
		/// RatingTypeID : 
		/// </summary>
		private System.Int32		  _ratingTypeId = (int)0;
		
		/// <summary>
		/// RatingTypeDisplayName : 
		/// </summary>
		private System.String		  _ratingTypeDisplayName = null;
		
		/// <summary>
		/// AccessTypeID : 
		/// </summary>
		private System.Int32		  _accessTypeId = (int)0;
		
		/// <summary>
		/// ProductRateID : 
		/// </summary>
		private System.Int32		  _productRateId = (int)0;
		
		/// <summary>
		/// AccessTypeName : 
		/// </summary>
		private System.String		  _accessTypeName = string.Empty;
		
		/// <summary>
		/// AccessTypeDisplayName : 
		/// </summary>
		private System.String		  _accessTypeDisplayName = string.Empty;
		
		/// <summary>
		/// AccessTypeValue : 
		/// </summary>
		private System.Int32		  _accessTypeValue = (int)0;
		
		/// <summary>
		/// AccessTypeBillable : 
		/// </summary>
		private System.Boolean		  _accessTypeBillable = false;
		
		/// <summary>
		/// AccessTypeEnabled : 
		/// </summary>
		private System.Boolean		  _accessTypeEnabled = false;
		
		/// <summary>
		/// AccessType_ProductRateID : 
		/// </summary>
		private System.Int32		  _accessType_ProductRateId = (int)0;
		
		/// <summary>
		/// ProductRateIntervalID : 
		/// </summary>
		private System.Int32		  _productRateIntervalId = (int)0;
		
		/// <summary>
		/// ProductRateTaxableID : 
		/// </summary>
		private System.Int32		  _productRateTaxableId = (int)0;
		
		/// <summary>
		/// ProductRateCountryID : 
		/// </summary>
		private System.String		  _productRateCountryId = null;
		
		/// <summary>
		/// MinimumTimeBeforeChargedSec : 
		/// </summary>
		private System.Int32?		  _minimumTimeBeforeChargedSec = (int)0;
		
		/// <summary>
		/// DDLDescription2 : 
		/// </summary>
		private System.String		  _ddlDescription2 = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_AccessType_ProductRatesBase"/> instance.
		///</summary>
		public Vw_AccessType_ProductRatesBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_AccessType_ProductRatesBase"/> instance.
		///</summary>
		///<param name="_productRateName"></param>
		///<param name="_productId"></param>
		///<param name="_productName"></param>
		///<param name="_productDefaultOption"></param>
		///<param name="_productTypeId"></param>
		///<param name="_productRateTypeId"></param>
		///<param name="_productTypeName"></param>
		///<param name="_productRateTypeName"></param>
		///<param name="_productDisplayOrder"></param>
		///<param name="_productRateDisplayName"></param>
		///<param name="_productRateDisplayOrder"></param>
		///<param name="_productTypeDisplayName"></param>
		///<param name="_productTypeDisplayOrder"></param>
		///<param name="_productRateTypeDisplayName"></param>
		///<param name="_productRateTypeDisplayOrder"></param>
		///<param name="_ddlDescription"></param>
		///<param name="_productRateDescription"></param>
		///<param name="_ratingTypeId"></param>
		///<param name="_ratingTypeDisplayName"></param>
		///<param name="_accessTypeId"></param>
		///<param name="_productRateId"></param>
		///<param name="_accessTypeName"></param>
		///<param name="_accessTypeDisplayName"></param>
		///<param name="_accessTypeValue"></param>
		///<param name="_accessTypeBillable"></param>
		///<param name="_accessTypeEnabled"></param>
		///<param name="_accessType_ProductRateId"></param>
		///<param name="_productRateIntervalId"></param>
		///<param name="_productRateTaxableId"></param>
		///<param name="_productRateCountryId"></param>
		///<param name="_minimumTimeBeforeChargedSec"></param>
		///<param name="_ddlDescription2"></param>
		public Vw_AccessType_ProductRatesBase(System.String _productRateName, System.Int32 _productId, System.String _productName, System.Boolean? _productDefaultOption, System.Int32 _productTypeId, System.Int32 _productRateTypeId, System.String _productTypeName, System.String _productRateTypeName, System.Int32? _productDisplayOrder, System.String _productRateDisplayName, System.Int32? _productRateDisplayOrder, System.String _productTypeDisplayName, System.Int32? _productTypeDisplayOrder, System.String _productRateTypeDisplayName, System.Int32? _productRateTypeDisplayOrder, System.String _ddlDescription, System.String _productRateDescription, System.Int32 _ratingTypeId, System.String _ratingTypeDisplayName, System.Int32 _accessTypeId, System.Int32 _productRateId, System.String _accessTypeName, System.String _accessTypeDisplayName, System.Int32 _accessTypeValue, System.Boolean _accessTypeBillable, System.Boolean _accessTypeEnabled, System.Int32 _accessType_ProductRateId, System.Int32 _productRateIntervalId, System.Int32 _productRateTaxableId, System.String _productRateCountryId, System.Int32? _minimumTimeBeforeChargedSec, System.String _ddlDescription2)
		{
			this._productRateName = _productRateName;
			this._productId = _productId;
			this._productName = _productName;
			this._productDefaultOption = _productDefaultOption;
			this._productTypeId = _productTypeId;
			this._productRateTypeId = _productRateTypeId;
			this._productTypeName = _productTypeName;
			this._productRateTypeName = _productRateTypeName;
			this._productDisplayOrder = _productDisplayOrder;
			this._productRateDisplayName = _productRateDisplayName;
			this._productRateDisplayOrder = _productRateDisplayOrder;
			this._productTypeDisplayName = _productTypeDisplayName;
			this._productTypeDisplayOrder = _productTypeDisplayOrder;
			this._productRateTypeDisplayName = _productRateTypeDisplayName;
			this._productRateTypeDisplayOrder = _productRateTypeDisplayOrder;
			this._ddlDescription = _ddlDescription;
			this._productRateDescription = _productRateDescription;
			this._ratingTypeId = _ratingTypeId;
			this._ratingTypeDisplayName = _ratingTypeDisplayName;
			this._accessTypeId = _accessTypeId;
			this._productRateId = _productRateId;
			this._accessTypeName = _accessTypeName;
			this._accessTypeDisplayName = _accessTypeDisplayName;
			this._accessTypeValue = _accessTypeValue;
			this._accessTypeBillable = _accessTypeBillable;
			this._accessTypeEnabled = _accessTypeEnabled;
			this._accessType_ProductRateId = _accessType_ProductRateId;
			this._productRateIntervalId = _productRateIntervalId;
			this._productRateTaxableId = _productRateTaxableId;
			this._productRateCountryId = _productRateCountryId;
			this._minimumTimeBeforeChargedSec = _minimumTimeBeforeChargedSec;
			this._ddlDescription2 = _ddlDescription2;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_AccessType_ProductRates"/> instance.
		///</summary>
		///<param name="_productRateName"></param>
		///<param name="_productId"></param>
		///<param name="_productName"></param>
		///<param name="_productDefaultOption"></param>
		///<param name="_productTypeId"></param>
		///<param name="_productRateTypeId"></param>
		///<param name="_productTypeName"></param>
		///<param name="_productRateTypeName"></param>
		///<param name="_productDisplayOrder"></param>
		///<param name="_productRateDisplayName"></param>
		///<param name="_productRateDisplayOrder"></param>
		///<param name="_productTypeDisplayName"></param>
		///<param name="_productTypeDisplayOrder"></param>
		///<param name="_productRateTypeDisplayName"></param>
		///<param name="_productRateTypeDisplayOrder"></param>
		///<param name="_ddlDescription"></param>
		///<param name="_productRateDescription"></param>
		///<param name="_ratingTypeId"></param>
		///<param name="_ratingTypeDisplayName"></param>
		///<param name="_accessTypeId"></param>
		///<param name="_productRateId"></param>
		///<param name="_accessTypeName"></param>
		///<param name="_accessTypeDisplayName"></param>
		///<param name="_accessTypeValue"></param>
		///<param name="_accessTypeBillable"></param>
		///<param name="_accessTypeEnabled"></param>
		///<param name="_accessType_ProductRateId"></param>
		///<param name="_productRateIntervalId"></param>
		///<param name="_productRateTaxableId"></param>
		///<param name="_productRateCountryId"></param>
		///<param name="_minimumTimeBeforeChargedSec"></param>
		///<param name="_ddlDescription2"></param>
		public static Vw_AccessType_ProductRates CreateVw_AccessType_ProductRates(System.String _productRateName, System.Int32 _productId, System.String _productName, System.Boolean? _productDefaultOption, System.Int32 _productTypeId, System.Int32 _productRateTypeId, System.String _productTypeName, System.String _productRateTypeName, System.Int32? _productDisplayOrder, System.String _productRateDisplayName, System.Int32? _productRateDisplayOrder, System.String _productTypeDisplayName, System.Int32? _productTypeDisplayOrder, System.String _productRateTypeDisplayName, System.Int32? _productRateTypeDisplayOrder, System.String _ddlDescription, System.String _productRateDescription, System.Int32 _ratingTypeId, System.String _ratingTypeDisplayName, System.Int32 _accessTypeId, System.Int32 _productRateId, System.String _accessTypeName, System.String _accessTypeDisplayName, System.Int32 _accessTypeValue, System.Boolean _accessTypeBillable, System.Boolean _accessTypeEnabled, System.Int32 _accessType_ProductRateId, System.Int32 _productRateIntervalId, System.Int32 _productRateTaxableId, System.String _productRateCountryId, System.Int32? _minimumTimeBeforeChargedSec, System.String _ddlDescription2)
		{
			Vw_AccessType_ProductRates newVw_AccessType_ProductRates = new Vw_AccessType_ProductRates();
			newVw_AccessType_ProductRates.ProductRateName = _productRateName;
			newVw_AccessType_ProductRates.ProductId = _productId;
			newVw_AccessType_ProductRates.ProductName = _productName;
			newVw_AccessType_ProductRates.ProductDefaultOption = _productDefaultOption;
			newVw_AccessType_ProductRates.ProductTypeId = _productTypeId;
			newVw_AccessType_ProductRates.ProductRateTypeId = _productRateTypeId;
			newVw_AccessType_ProductRates.ProductTypeName = _productTypeName;
			newVw_AccessType_ProductRates.ProductRateTypeName = _productRateTypeName;
			newVw_AccessType_ProductRates.ProductDisplayOrder = _productDisplayOrder;
			newVw_AccessType_ProductRates.ProductRateDisplayName = _productRateDisplayName;
			newVw_AccessType_ProductRates.ProductRateDisplayOrder = _productRateDisplayOrder;
			newVw_AccessType_ProductRates.ProductTypeDisplayName = _productTypeDisplayName;
			newVw_AccessType_ProductRates.ProductTypeDisplayOrder = _productTypeDisplayOrder;
			newVw_AccessType_ProductRates.ProductRateTypeDisplayName = _productRateTypeDisplayName;
			newVw_AccessType_ProductRates.ProductRateTypeDisplayOrder = _productRateTypeDisplayOrder;
			newVw_AccessType_ProductRates.DdlDescription = _ddlDescription;
			newVw_AccessType_ProductRates.ProductRateDescription = _productRateDescription;
			newVw_AccessType_ProductRates.RatingTypeId = _ratingTypeId;
			newVw_AccessType_ProductRates.RatingTypeDisplayName = _ratingTypeDisplayName;
			newVw_AccessType_ProductRates.AccessTypeId = _accessTypeId;
			newVw_AccessType_ProductRates.ProductRateId = _productRateId;
			newVw_AccessType_ProductRates.AccessTypeName = _accessTypeName;
			newVw_AccessType_ProductRates.AccessTypeDisplayName = _accessTypeDisplayName;
			newVw_AccessType_ProductRates.AccessTypeValue = _accessTypeValue;
			newVw_AccessType_ProductRates.AccessTypeBillable = _accessTypeBillable;
			newVw_AccessType_ProductRates.AccessTypeEnabled = _accessTypeEnabled;
			newVw_AccessType_ProductRates.AccessType_ProductRateId = _accessType_ProductRateId;
			newVw_AccessType_ProductRates.ProductRateIntervalId = _productRateIntervalId;
			newVw_AccessType_ProductRates.ProductRateTaxableId = _productRateTaxableId;
			newVw_AccessType_ProductRates.ProductRateCountryId = _productRateCountryId;
			newVw_AccessType_ProductRates.MinimumTimeBeforeChargedSec = _minimumTimeBeforeChargedSec;
			newVw_AccessType_ProductRates.DdlDescription2 = _ddlDescription2;
			return newVw_AccessType_ProductRates;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ProductRateName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateName
		{
			get
			{
				return this._productRateName; 
			}
			set
			{
				if (_productRateName == value)
					return;
					
				this._productRateName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ProductId
		{
			get
			{
				return this._productId; 
			}
			set
			{
				if (_productId == value)
					return;
					
				this._productId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductName
		{
			get
			{
				return this._productName; 
			}
			set
			{
				if (_productName == value)
					return;
					
				this._productName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductDefaultOption property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsProductDefaultOptionNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? ProductDefaultOption
		{
			get
			{
				return this._productDefaultOption; 
			}
			set
			{
				if (_productDefaultOption == value && ProductDefaultOption != null )
					return;
					
				this._productDefaultOption = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductDefaultOption");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductTypeID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ProductTypeId
		{
			get
			{
				return this._productTypeId; 
			}
			set
			{
				if (_productTypeId == value)
					return;
					
				this._productTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateTypeID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ProductRateTypeId
		{
			get
			{
				return this._productRateTypeId; 
			}
			set
			{
				if (_productRateTypeId == value)
					return;
					
				this._productRateTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductTypeName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductTypeName
		{
			get
			{
				return this._productTypeName; 
			}
			set
			{
				if (_productTypeName == value)
					return;
					
				this._productTypeName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductTypeName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateTypeName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateTypeName
		{
			get
			{
				return this._productRateTypeName; 
			}
			set
			{
				if (_productRateTypeName == value)
					return;
					
				this._productRateTypeName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateTypeName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductDisplayOrder property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsProductDisplayOrderNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ProductDisplayOrder
		{
			get
			{
				return this._productDisplayOrder; 
			}
			set
			{
				if (_productDisplayOrder == value && ProductDisplayOrder != null )
					return;
					
				this._productDisplayOrder = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductDisplayOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateDisplayName
		{
			get
			{
				return this._productRateDisplayName; 
			}
			set
			{
				if (_productRateDisplayName == value)
					return;
					
				this._productRateDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateDisplayOrder property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsProductRateDisplayOrderNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ProductRateDisplayOrder
		{
			get
			{
				return this._productRateDisplayOrder; 
			}
			set
			{
				if (_productRateDisplayOrder == value && ProductRateDisplayOrder != null )
					return;
					
				this._productRateDisplayOrder = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateDisplayOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductTypeDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductTypeDisplayName
		{
			get
			{
				return this._productTypeDisplayName; 
			}
			set
			{
				if (_productTypeDisplayName == value)
					return;
					
				this._productTypeDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductTypeDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductTypeDisplayOrder property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsProductTypeDisplayOrderNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ProductTypeDisplayOrder
		{
			get
			{
				return this._productTypeDisplayOrder; 
			}
			set
			{
				if (_productTypeDisplayOrder == value && ProductTypeDisplayOrder != null )
					return;
					
				this._productTypeDisplayOrder = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductTypeDisplayOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateTypeDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateTypeDisplayName
		{
			get
			{
				return this._productRateTypeDisplayName; 
			}
			set
			{
				if (_productRateTypeDisplayName == value)
					return;
					
				this._productRateTypeDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateTypeDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateTypeDisplayOrder property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsProductRateTypeDisplayOrderNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ProductRateTypeDisplayOrder
		{
			get
			{
				return this._productRateTypeDisplayOrder; 
			}
			set
			{
				if (_productRateTypeDisplayOrder == value && ProductRateTypeDisplayOrder != null )
					return;
					
				this._productRateTypeDisplayOrder = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateTypeDisplayOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DDLDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DdlDescription
		{
			get
			{
				return this._ddlDescription; 
			}
			set
			{
				if (_ddlDescription == value)
					return;
					
				this._ddlDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("DdlDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateDescription
		{
			get
			{
				return this._productRateDescription; 
			}
			set
			{
				if (_productRateDescription == value)
					return;
					
				this._productRateDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RatingTypeID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 RatingTypeId
		{
			get
			{
				return this._ratingTypeId; 
			}
			set
			{
				if (_ratingTypeId == value)
					return;
					
				this._ratingTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("RatingTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RatingTypeDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String RatingTypeDisplayName
		{
			get
			{
				return this._ratingTypeDisplayName; 
			}
			set
			{
				if (_ratingTypeDisplayName == value)
					return;
					
				this._ratingTypeDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("RatingTypeDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessTypeID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 AccessTypeId
		{
			get
			{
				return this._accessTypeId; 
			}
			set
			{
				if (_accessTypeId == value)
					return;
					
				this._accessTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ProductRateId
		{
			get
			{
				return this._productRateId; 
			}
			set
			{
				if (_productRateId == value)
					return;
					
				this._productRateId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessTypeName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String AccessTypeName
		{
			get
			{
				return this._accessTypeName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "AccessTypeName does not allow null values.");
				if (_accessTypeName == value)
					return;
					
				this._accessTypeName = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessTypeName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessTypeDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String AccessTypeDisplayName
		{
			get
			{
				return this._accessTypeDisplayName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "AccessTypeDisplayName does not allow null values.");
				if (_accessTypeDisplayName == value)
					return;
					
				this._accessTypeDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessTypeDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessTypeValue property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 AccessTypeValue
		{
			get
			{
				return this._accessTypeValue; 
			}
			set
			{
				if (_accessTypeValue == value)
					return;
					
				this._accessTypeValue = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessTypeValue");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessTypeBillable property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean AccessTypeBillable
		{
			get
			{
				return this._accessTypeBillable; 
			}
			set
			{
				if (_accessTypeBillable == value)
					return;
					
				this._accessTypeBillable = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessTypeBillable");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessTypeEnabled property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean AccessTypeEnabled
		{
			get
			{
				return this._accessTypeEnabled; 
			}
			set
			{
				if (_accessTypeEnabled == value)
					return;
					
				this._accessTypeEnabled = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessTypeEnabled");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AccessType_ProductRateID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 AccessType_ProductRateId
		{
			get
			{
				return this._accessType_ProductRateId; 
			}
			set
			{
				if (_accessType_ProductRateId == value)
					return;
					
				this._accessType_ProductRateId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AccessType_ProductRateId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateIntervalID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ProductRateIntervalId
		{
			get
			{
				return this._productRateIntervalId; 
			}
			set
			{
				if (_productRateIntervalId == value)
					return;
					
				this._productRateIntervalId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateIntervalId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateTaxableID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ProductRateTaxableId
		{
			get
			{
				return this._productRateTaxableId; 
			}
			set
			{
				if (_productRateTaxableId == value)
					return;
					
				this._productRateTaxableId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateTaxableId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateCountryID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateCountryId
		{
			get
			{
				return this._productRateCountryId; 
			}
			set
			{
				if (_productRateCountryId == value)
					return;
					
				this._productRateCountryId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateCountryId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MinimumTimeBeforeChargedSec property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMinimumTimeBeforeChargedSecNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? MinimumTimeBeforeChargedSec
		{
			get
			{
				return this._minimumTimeBeforeChargedSec; 
			}
			set
			{
				if (_minimumTimeBeforeChargedSec == value && MinimumTimeBeforeChargedSec != null )
					return;
					
				this._minimumTimeBeforeChargedSec = value;
				this._isDirty = true;
				
				OnPropertyChanged("MinimumTimeBeforeChargedSec");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DDLDescription2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DdlDescription2
		{
			get
			{
				return this._ddlDescription2; 
			}
			set
			{
				if (_ddlDescription2 == value)
					return;
					
				this._ddlDescription2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("DdlDescription2");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_AccessType_ProductRates"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_AccessType_ProductRatesBase Entity 
		///</summary>
		public virtual Vw_AccessType_ProductRatesBase Copy()
		{
			//shallow copy entity
			Vw_AccessType_ProductRates copy = new Vw_AccessType_ProductRates();
				copy.ProductRateName = this.ProductRateName;
				copy.ProductId = this.ProductId;
				copy.ProductName = this.ProductName;
				copy.ProductDefaultOption = this.ProductDefaultOption;
				copy.ProductTypeId = this.ProductTypeId;
				copy.ProductRateTypeId = this.ProductRateTypeId;
				copy.ProductTypeName = this.ProductTypeName;
				copy.ProductRateTypeName = this.ProductRateTypeName;
				copy.ProductDisplayOrder = this.ProductDisplayOrder;
				copy.ProductRateDisplayName = this.ProductRateDisplayName;
				copy.ProductRateDisplayOrder = this.ProductRateDisplayOrder;
				copy.ProductTypeDisplayName = this.ProductTypeDisplayName;
				copy.ProductTypeDisplayOrder = this.ProductTypeDisplayOrder;
				copy.ProductRateTypeDisplayName = this.ProductRateTypeDisplayName;
				copy.ProductRateTypeDisplayOrder = this.ProductRateTypeDisplayOrder;
				copy.DdlDescription = this.DdlDescription;
				copy.ProductRateDescription = this.ProductRateDescription;
				copy.RatingTypeId = this.RatingTypeId;
				copy.RatingTypeDisplayName = this.RatingTypeDisplayName;
				copy.AccessTypeId = this.AccessTypeId;
				copy.ProductRateId = this.ProductRateId;
				copy.AccessTypeName = this.AccessTypeName;
				copy.AccessTypeDisplayName = this.AccessTypeDisplayName;
				copy.AccessTypeValue = this.AccessTypeValue;
				copy.AccessTypeBillable = this.AccessTypeBillable;
				copy.AccessTypeEnabled = this.AccessTypeEnabled;
				copy.AccessType_ProductRateId = this.AccessType_ProductRateId;
				copy.ProductRateIntervalId = this.ProductRateIntervalId;
				copy.ProductRateTaxableId = this.ProductRateTaxableId;
				copy.ProductRateCountryId = this.ProductRateCountryId;
				copy.MinimumTimeBeforeChargedSec = this.MinimumTimeBeforeChargedSec;
				copy.DdlDescription2 = this.DdlDescription2;
			copy.AcceptChanges();
			return (Vw_AccessType_ProductRates)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_AccessType_ProductRatesBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_AccessType_ProductRatesBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_AccessType_ProductRatesBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_AccessType_ProductRatesBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_AccessType_ProductRatesBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_AccessType_ProductRatesBase Object1, Vw_AccessType_ProductRatesBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.ProductRateName != null && Object2.ProductRateName != null )
			{
				if (Object1.ProductRateName != Object2.ProductRateName)
					equal = false;
			}
			else if (Object1.ProductRateName == null ^ Object1.ProductRateName == null )
			{
				equal = false;
			}
			if (Object1.ProductId != Object2.ProductId)
				equal = false;
			if (Object1.ProductName != null && Object2.ProductName != null )
			{
				if (Object1.ProductName != Object2.ProductName)
					equal = false;
			}
			else if (Object1.ProductName == null ^ Object1.ProductName == null )
			{
				equal = false;
			}
			if (Object1.ProductDefaultOption != null && Object2.ProductDefaultOption != null )
			{
				if (Object1.ProductDefaultOption != Object2.ProductDefaultOption)
					equal = false;
			}
			else if (Object1.ProductDefaultOption == null ^ Object1.ProductDefaultOption == null )
			{
				equal = false;
			}
			if (Object1.ProductTypeId != Object2.ProductTypeId)
				equal = false;
			if (Object1.ProductRateTypeId != Object2.ProductRateTypeId)
				equal = false;
			if (Object1.ProductTypeName != null && Object2.ProductTypeName != null )
			{
				if (Object1.ProductTypeName != Object2.ProductTypeName)
					equal = false;
			}
			else if (Object1.ProductTypeName == null ^ Object1.ProductTypeName == null )
			{
				equal = false;
			}
			if (Object1.ProductRateTypeName != null && Object2.ProductRateTypeName != null )
			{
				if (Object1.ProductRateTypeName != Object2.ProductRateTypeName)
					equal = false;
			}
			else if (Object1.ProductRateTypeName == null ^ Object1.ProductRateTypeName == null )
			{
				equal = false;
			}
			if (Object1.ProductDisplayOrder != null && Object2.ProductDisplayOrder != null )
			{
				if (Object1.ProductDisplayOrder != Object2.ProductDisplayOrder)
					equal = false;
			}
			else if (Object1.ProductDisplayOrder == null ^ Object1.ProductDisplayOrder == null )
			{
				equal = false;
			}
			if (Object1.ProductRateDisplayName != null && Object2.ProductRateDisplayName != null )
			{
				if (Object1.ProductRateDisplayName != Object2.ProductRateDisplayName)
					equal = false;
			}
			else if (Object1.ProductRateDisplayName == null ^ Object1.ProductRateDisplayName == null )
			{
				equal = false;
			}
			if (Object1.ProductRateDisplayOrder != null && Object2.ProductRateDisplayOrder != null )
			{
				if (Object1.ProductRateDisplayOrder != Object2.ProductRateDisplayOrder)
					equal = false;
			}
			else if (Object1.ProductRateDisplayOrder == null ^ Object1.ProductRateDisplayOrder == null )
			{
				equal = false;
			}
			if (Object1.ProductTypeDisplayName != null && Object2.ProductTypeDisplayName != null )
			{
				if (Object1.ProductTypeDisplayName != Object2.ProductTypeDisplayName)
					equal = false;
			}
			else if (Object1.ProductTypeDisplayName == null ^ Object1.ProductTypeDisplayName == null )
			{
				equal = false;
			}
			if (Object1.ProductTypeDisplayOrder != null && Object2.ProductTypeDisplayOrder != null )
			{
				if (Object1.ProductTypeDisplayOrder != Object2.ProductTypeDisplayOrder)
					equal = false;
			}
			else if (Object1.ProductTypeDisplayOrder == null ^ Object1.ProductTypeDisplayOrder == null )
			{
				equal = false;
			}
			if (Object1.ProductRateTypeDisplayName != null && Object2.ProductRateTypeDisplayName != null )
			{
				if (Object1.ProductRateTypeDisplayName != Object2.ProductRateTypeDisplayName)
					equal = false;
			}
			else if (Object1.ProductRateTypeDisplayName == null ^ Object1.ProductRateTypeDisplayName == null )
			{
				equal = false;
			}
			if (Object1.ProductRateTypeDisplayOrder != null && Object2.ProductRateTypeDisplayOrder != null )
			{
				if (Object1.ProductRateTypeDisplayOrder != Object2.ProductRateTypeDisplayOrder)
					equal = false;
			}
			else if (Object1.ProductRateTypeDisplayOrder == null ^ Object1.ProductRateTypeDisplayOrder == null )
			{
				equal = false;
			}
			if (Object1.DdlDescription != null && Object2.DdlDescription != null )
			{
				if (Object1.DdlDescription != Object2.DdlDescription)
					equal = false;
			}
			else if (Object1.DdlDescription == null ^ Object1.DdlDescription == null )
			{
				equal = false;
			}
			if (Object1.ProductRateDescription != null && Object2.ProductRateDescription != null )
			{
				if (Object1.ProductRateDescription != Object2.ProductRateDescription)
					equal = false;
			}
			else if (Object1.ProductRateDescription == null ^ Object1.ProductRateDescription == null )
			{
				equal = false;
			}
			if (Object1.RatingTypeId != Object2.RatingTypeId)
				equal = false;
			if (Object1.RatingTypeDisplayName != null && Object2.RatingTypeDisplayName != null )
			{
				if (Object1.RatingTypeDisplayName != Object2.RatingTypeDisplayName)
					equal = false;
			}
			else if (Object1.RatingTypeDisplayName == null ^ Object1.RatingTypeDisplayName == null )
			{
				equal = false;
			}
			if (Object1.AccessTypeId != Object2.AccessTypeId)
				equal = false;
			if (Object1.ProductRateId != Object2.ProductRateId)
				equal = false;
			if (Object1.AccessTypeName != Object2.AccessTypeName)
				equal = false;
			if (Object1.AccessTypeDisplayName != Object2.AccessTypeDisplayName)
				equal = false;
			if (Object1.AccessTypeValue != Object2.AccessTypeValue)
				equal = false;
			if (Object1.AccessTypeBillable != Object2.AccessTypeBillable)
				equal = false;
			if (Object1.AccessTypeEnabled != Object2.AccessTypeEnabled)
				equal = false;
			if (Object1.AccessType_ProductRateId != Object2.AccessType_ProductRateId)
				equal = false;
			if (Object1.ProductRateIntervalId != Object2.ProductRateIntervalId)
				equal = false;
			if (Object1.ProductRateTaxableId != Object2.ProductRateTaxableId)
				equal = false;
			if (Object1.ProductRateCountryId != null && Object2.ProductRateCountryId != null )
			{
				if (Object1.ProductRateCountryId != Object2.ProductRateCountryId)
					equal = false;
			}
			else if (Object1.ProductRateCountryId == null ^ Object1.ProductRateCountryId == null )
			{
				equal = false;
			}
			if (Object1.MinimumTimeBeforeChargedSec != null && Object2.MinimumTimeBeforeChargedSec != null )
			{
				if (Object1.MinimumTimeBeforeChargedSec != Object2.MinimumTimeBeforeChargedSec)
					equal = false;
			}
			else if (Object1.MinimumTimeBeforeChargedSec == null ^ Object1.MinimumTimeBeforeChargedSec == null )
			{
				equal = false;
			}
			if (Object1.DdlDescription2 != null && Object2.DdlDescription2 != null )
			{
				if (Object1.DdlDescription2 != Object2.DdlDescription2)
					equal = false;
			}
			else if (Object1.DdlDescription2 == null ^ Object1.DdlDescription2 == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_AccessType_ProductRates entity, string propertyName)
		{
			switch (propertyName)
			{
				case "ProductRateName":
					return entity.ProductRateName;
				case "ProductId":
					return entity.ProductId;
				case "ProductName":
					return entity.ProductName;
				case "ProductDefaultOption":
					return entity.ProductDefaultOption;
				case "ProductTypeId":
					return entity.ProductTypeId;
				case "ProductRateTypeId":
					return entity.ProductRateTypeId;
				case "ProductTypeName":
					return entity.ProductTypeName;
				case "ProductRateTypeName":
					return entity.ProductRateTypeName;
				case "ProductDisplayOrder":
					return entity.ProductDisplayOrder;
				case "ProductRateDisplayName":
					return entity.ProductRateDisplayName;
				case "ProductRateDisplayOrder":
					return entity.ProductRateDisplayOrder;
				case "ProductTypeDisplayName":
					return entity.ProductTypeDisplayName;
				case "ProductTypeDisplayOrder":
					return entity.ProductTypeDisplayOrder;
				case "ProductRateTypeDisplayName":
					return entity.ProductRateTypeDisplayName;
				case "ProductRateTypeDisplayOrder":
					return entity.ProductRateTypeDisplayOrder;
				case "DdlDescription":
					return entity.DdlDescription;
				case "ProductRateDescription":
					return entity.ProductRateDescription;
				case "RatingTypeId":
					return entity.RatingTypeId;
				case "RatingTypeDisplayName":
					return entity.RatingTypeDisplayName;
				case "AccessTypeId":
					return entity.AccessTypeId;
				case "ProductRateId":
					return entity.ProductRateId;
				case "AccessTypeName":
					return entity.AccessTypeName;
				case "AccessTypeDisplayName":
					return entity.AccessTypeDisplayName;
				case "AccessTypeValue":
					return entity.AccessTypeValue;
				case "AccessTypeBillable":
					return entity.AccessTypeBillable;
				case "AccessTypeEnabled":
					return entity.AccessTypeEnabled;
				case "AccessType_ProductRateId":
					return entity.AccessType_ProductRateId;
				case "ProductRateIntervalId":
					return entity.ProductRateIntervalId;
				case "ProductRateTaxableId":
					return entity.ProductRateTaxableId;
				case "ProductRateCountryId":
					return entity.ProductRateCountryId;
				case "MinimumTimeBeforeChargedSec":
					return entity.MinimumTimeBeforeChargedSec;
				case "DdlDescription2":
					return entity.DdlDescription2;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_AccessType_ProductRates, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{33}{32}- ProductRateName: {0}{32}- ProductId: {1}{32}- ProductName: {2}{32}- ProductDefaultOption: {3}{32}- ProductTypeId: {4}{32}- ProductRateTypeId: {5}{32}- ProductTypeName: {6}{32}- ProductRateTypeName: {7}{32}- ProductDisplayOrder: {8}{32}- ProductRateDisplayName: {9}{32}- ProductRateDisplayOrder: {10}{32}- ProductTypeDisplayName: {11}{32}- ProductTypeDisplayOrder: {12}{32}- ProductRateTypeDisplayName: {13}{32}- ProductRateTypeDisplayOrder: {14}{32}- DdlDescription: {15}{32}- ProductRateDescription: {16}{32}- RatingTypeId: {17}{32}- RatingTypeDisplayName: {18}{32}- AccessTypeId: {19}{32}- ProductRateId: {20}{32}- AccessTypeName: {21}{32}- AccessTypeDisplayName: {22}{32}- AccessTypeValue: {23}{32}- AccessTypeBillable: {24}{32}- AccessTypeEnabled: {25}{32}- AccessType_ProductRateId: {26}{32}- ProductRateIntervalId: {27}{32}- ProductRateTaxableId: {28}{32}- ProductRateCountryId: {29}{32}- MinimumTimeBeforeChargedSec: {30}{32}- DdlDescription2: {31}{32}", 
				(this.ProductRateName == null) ? string.Empty : this.ProductRateName.ToString(),
			     
				this.ProductId,
				(this.ProductName == null) ? string.Empty : this.ProductName.ToString(),
			     
				(this.ProductDefaultOption == null) ? string.Empty : this.ProductDefaultOption.ToString(),
			     
				this.ProductTypeId,
				this.ProductRateTypeId,
				(this.ProductTypeName == null) ? string.Empty : this.ProductTypeName.ToString(),
			     
				(this.ProductRateTypeName == null) ? string.Empty : this.ProductRateTypeName.ToString(),
			     
				(this.ProductDisplayOrder == null) ? string.Empty : this.ProductDisplayOrder.ToString(),
			     
				(this.ProductRateDisplayName == null) ? string.Empty : this.ProductRateDisplayName.ToString(),
			     
				(this.ProductRateDisplayOrder == null) ? string.Empty : this.ProductRateDisplayOrder.ToString(),
			     
				(this.ProductTypeDisplayName == null) ? string.Empty : this.ProductTypeDisplayName.ToString(),
			     
				(this.ProductTypeDisplayOrder == null) ? string.Empty : this.ProductTypeDisplayOrder.ToString(),
			     
				(this.ProductRateTypeDisplayName == null) ? string.Empty : this.ProductRateTypeDisplayName.ToString(),
			     
				(this.ProductRateTypeDisplayOrder == null) ? string.Empty : this.ProductRateTypeDisplayOrder.ToString(),
			     
				(this.DdlDescription == null) ? string.Empty : this.DdlDescription.ToString(),
			     
				(this.ProductRateDescription == null) ? string.Empty : this.ProductRateDescription.ToString(),
			     
				this.RatingTypeId,
				(this.RatingTypeDisplayName == null) ? string.Empty : this.RatingTypeDisplayName.ToString(),
			     
				this.AccessTypeId,
				this.ProductRateId,
				this.AccessTypeName,
				this.AccessTypeDisplayName,
				this.AccessTypeValue,
				this.AccessTypeBillable,
				this.AccessTypeEnabled,
				this.AccessType_ProductRateId,
				this.ProductRateIntervalId,
				this.ProductRateTaxableId,
				(this.ProductRateCountryId == null) ? string.Empty : this.ProductRateCountryId.ToString(),
			     
				(this.MinimumTimeBeforeChargedSec == null) ? string.Empty : this.MinimumTimeBeforeChargedSec.ToString(),
			     
				(this.DdlDescription2 == null) ? string.Empty : this.DdlDescription2.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_AccessType_ProductRates columns.
	/// </summary>
	[Serializable]
	public enum Vw_AccessType_ProductRatesColumn
	{
		/// <summary>
		/// ProductRateName : 
		/// </summary>
		[EnumTextValue("ProductRateName")]
		[ColumnEnum("ProductRateName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductRateName,
		/// <summary>
		/// ProductID : 
		/// </summary>
		[EnumTextValue("ProductID")]
		[ColumnEnum("ProductID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ProductId,
		/// <summary>
		/// ProductName : 
		/// </summary>
		[EnumTextValue("ProductName")]
		[ColumnEnum("ProductName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductName,
		/// <summary>
		/// ProductDefaultOption : 
		/// </summary>
		[EnumTextValue("ProductDefaultOption")]
		[ColumnEnum("ProductDefaultOption", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ProductDefaultOption,
		/// <summary>
		/// ProductTypeID : 
		/// </summary>
		[EnumTextValue("ProductTypeID")]
		[ColumnEnum("ProductTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ProductTypeId,
		/// <summary>
		/// ProductRateTypeID : 
		/// </summary>
		[EnumTextValue("ProductRateTypeID")]
		[ColumnEnum("ProductRateTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ProductRateTypeId,
		/// <summary>
		/// ProductTypeName : 
		/// </summary>
		[EnumTextValue("ProductTypeName")]
		[ColumnEnum("ProductTypeName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductTypeName,
		/// <summary>
		/// ProductRateTypeName : 
		/// </summary>
		[EnumTextValue("ProductRateTypeName")]
		[ColumnEnum("ProductRateTypeName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductRateTypeName,
		/// <summary>
		/// ProductDisplayOrder : 
		/// </summary>
		[EnumTextValue("ProductDisplayOrder")]
		[ColumnEnum("ProductDisplayOrder", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ProductDisplayOrder,
		/// <summary>
		/// ProductRateDisplayName : 
		/// </summary>
		[EnumTextValue("ProductRateDisplayName")]
		[ColumnEnum("ProductRateDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductRateDisplayName,
		/// <summary>
		/// ProductRateDisplayOrder : 
		/// </summary>
		[EnumTextValue("ProductRateDisplayOrder")]
		[ColumnEnum("ProductRateDisplayOrder", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ProductRateDisplayOrder,
		/// <summary>
		/// ProductTypeDisplayName : 
		/// </summary>
		[EnumTextValue("ProductTypeDisplayName")]
		[ColumnEnum("ProductTypeDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductTypeDisplayName,
		/// <summary>
		/// ProductTypeDisplayOrder : 
		/// </summary>
		[EnumTextValue("ProductTypeDisplayOrder")]
		[ColumnEnum("ProductTypeDisplayOrder", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ProductTypeDisplayOrder,
		/// <summary>
		/// ProductRateTypeDisplayName : 
		/// </summary>
		[EnumTextValue("ProductRateTypeDisplayName")]
		[ColumnEnum("ProductRateTypeDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductRateTypeDisplayName,
		/// <summary>
		/// ProductRateTypeDisplayOrder : 
		/// </summary>
		[EnumTextValue("ProductRateTypeDisplayOrder")]
		[ColumnEnum("ProductRateTypeDisplayOrder", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ProductRateTypeDisplayOrder,
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		[EnumTextValue("DDLDescription")]
		[ColumnEnum("DDLDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 247)]
		DdlDescription,
		/// <summary>
		/// ProductRateDescription : 
		/// </summary>
		[EnumTextValue("ProductRateDescription")]
		[ColumnEnum("ProductRateDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ProductRateDescription,
		/// <summary>
		/// RatingTypeID : 
		/// </summary>
		[EnumTextValue("RatingTypeID")]
		[ColumnEnum("RatingTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		RatingTypeId,
		/// <summary>
		/// RatingTypeDisplayName : 
		/// </summary>
		[EnumTextValue("RatingTypeDisplayName")]
		[ColumnEnum("RatingTypeDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		RatingTypeDisplayName,
		/// <summary>
		/// AccessTypeID : 
		/// </summary>
		[EnumTextValue("AccessTypeID")]
		[ColumnEnum("AccessTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AccessTypeId,
		/// <summary>
		/// ProductRateID : 
		/// </summary>
		[EnumTextValue("ProductRateID")]
		[ColumnEnum("ProductRateID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ProductRateId,
		/// <summary>
		/// AccessTypeName : 
		/// </summary>
		[EnumTextValue("AccessTypeName")]
		[ColumnEnum("AccessTypeName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		AccessTypeName,
		/// <summary>
		/// AccessTypeDisplayName : 
		/// </summary>
		[EnumTextValue("AccessTypeDisplayName")]
		[ColumnEnum("AccessTypeDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		AccessTypeDisplayName,
		/// <summary>
		/// AccessTypeValue : 
		/// </summary>
		[EnumTextValue("AccessTypeValue")]
		[ColumnEnum("AccessTypeValue", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AccessTypeValue,
		/// <summary>
		/// AccessTypeBillable : 
		/// </summary>
		[EnumTextValue("AccessTypeBillable")]
		[ColumnEnum("AccessTypeBillable", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		AccessTypeBillable,
		/// <summary>
		/// AccessTypeEnabled : 
		/// </summary>
		[EnumTextValue("AccessTypeEnabled")]
		[ColumnEnum("AccessTypeEnabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		AccessTypeEnabled,
		/// <summary>
		/// AccessType_ProductRateID : 
		/// </summary>
		[EnumTextValue("AccessType_ProductRateID")]
		[ColumnEnum("AccessType_ProductRateID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		AccessType_ProductRateId,
		/// <summary>
		/// ProductRateIntervalID : 
		/// </summary>
		[EnumTextValue("ProductRateIntervalID")]
		[ColumnEnum("ProductRateIntervalID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ProductRateIntervalId,
		/// <summary>
		/// ProductRateTaxableID : 
		/// </summary>
		[EnumTextValue("ProductRateTaxableID")]
		[ColumnEnum("ProductRateTaxableID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ProductRateTaxableId,
		/// <summary>
		/// ProductRateCountryID : 
		/// </summary>
		[EnumTextValue("ProductRateCountryID")]
		[ColumnEnum("ProductRateCountryID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		ProductRateCountryId,
		/// <summary>
		/// MinimumTimeBeforeChargedSec : 
		/// </summary>
		[EnumTextValue("MinimumTimeBeforeChargedSec")]
		[ColumnEnum("MinimumTimeBeforeChargedSec", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MinimumTimeBeforeChargedSec,
		/// <summary>
		/// DDLDescription2 : 
		/// </summary>
		[EnumTextValue("DDLDescription2")]
		[ColumnEnum("DDLDescription2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 156)]
		DdlDescription2
	}//End enum

} // end namespace
