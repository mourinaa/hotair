/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_CustomerList.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_CustomerList' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_CustomerListBase")]
	public abstract partial class Vw_CustomerListBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ID : 
		/// </summary>
		private System.Int32		  _id = (int)0;
		
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		private System.String		  _wholesalerId = string.Empty;
		
		/// <summary>
		/// PriCustomerNumber : 
		/// </summary>
		private System.String		  _priCustomerNumber = string.Empty;
		
		/// <summary>
		/// Description : 
		/// </summary>
		private System.String		  _description = null;
		
		/// <summary>
		/// ExternalCustomerNumber : 
		/// </summary>
		private System.String		  _externalCustomerNumber = null;
		
		/// <summary>
		/// PrimaryContactName : 
		/// </summary>
		private System.String		  _primaryContactName = string.Empty;
		
		/// <summary>
		/// PrimaryContactPhoneNumber : 
		/// </summary>
		private System.String		  _primaryContactPhoneNumber = string.Empty;
		
		/// <summary>
		/// PrimaryContactEmailAddress : 
		/// </summary>
		private System.String		  _primaryContactEmailAddress = string.Empty;
		
		/// <summary>
		/// PrimaryContactAddress1 : 
		/// </summary>
		private System.String		  _primaryContactAddress1 = null;
		
		/// <summary>
		/// PrimaryContactAddress2 : 
		/// </summary>
		private System.String		  _primaryContactAddress2 = null;
		
		/// <summary>
		/// PrimaryContactCity : 
		/// </summary>
		private System.String		  _primaryContactCity = null;
		
		/// <summary>
		/// PrimaryContactCountry : 
		/// </summary>
		private System.String		  _primaryContactCountry = null;
		
		/// <summary>
		/// PrimaryContactRegion : 
		/// </summary>
		private System.String		  _primaryContactRegion = null;
		
		/// <summary>
		/// PrimaryContactPostalCode : 
		/// </summary>
		private System.String		  _primaryContactPostalCode = null;
		
		/// <summary>
		/// PrimaryContactFaxNumber : 
		/// </summary>
		private System.String		  _primaryContactFaxNumber = null;
		
		/// <summary>
		/// BillingContactName : 
		/// </summary>
		private System.String		  _billingContactName = null;
		
		/// <summary>
		/// BillingContactPhoneNumber : 
		/// </summary>
		private System.String		  _billingContactPhoneNumber = null;
		
		/// <summary>
		/// BillingContactEmailAddress : 
		/// </summary>
		private System.String		  _billingContactEmailAddress = null;
		
		/// <summary>
		/// BillingContactAddress1 : 
		/// </summary>
		private System.String		  _billingContactAddress1 = null;
		
		/// <summary>
		/// BillingContactAddress2 : 
		/// </summary>
		private System.String		  _billingContactAddress2 = null;
		
		/// <summary>
		/// BillingContactCity : 
		/// </summary>
		private System.String		  _billingContactCity = null;
		
		/// <summary>
		/// BillingContactCountry : 
		/// </summary>
		private System.String		  _billingContactCountry = null;
		
		/// <summary>
		/// BillingContactRegion : 
		/// </summary>
		private System.String		  _billingContactRegion = null;
		
		/// <summary>
		/// BillingContactPostalCode : 
		/// </summary>
		private System.String		  _billingContactPostalCode = null;
		
		/// <summary>
		/// BillingContactFaxNumber : 
		/// </summary>
		private System.String		  _billingContactFaxNumber = null;
		
		/// <summary>
		/// WebsiteURL : 
		/// </summary>
		private System.String		  _websiteUrl = null;
		
		/// <summary>
		/// SalesPersonID : 
		/// </summary>
		private System.Int32		  _salesPersonId = (int)0;
		
		/// <summary>
		/// VerticalID : 
		/// </summary>
		private System.Int32		  _verticalId = (int)0;
		
		/// <summary>
		/// CompanyID : 
		/// </summary>
		private System.Int32		  _companyId = (int)0;
		
		/// <summary>
		/// CurrencyID : 
		/// </summary>
		private System.String		  _currencyId = string.Empty;
		
		/// <summary>
		/// BillingPeriodCutoff : 
		/// </summary>
		private System.Int32		  _billingPeriodCutoff = (int)0;
		
		/// <summary>
		/// TaxableID : 
		/// </summary>
		private System.Int32		  _taxableId = (int)0;
		
		/// <summary>
		/// CreditCardNameOnCard : 
		/// </summary>
		private System.String		  _creditCardNameOnCard = null;
		
		/// <summary>
		/// CreditCardNumber : 
		/// </summary>
		private System.String		  _creditCardNumber = null;
		
		/// <summary>
		/// CreditCardExp : 
		/// </summary>
		private System.String		  _creditCardExp = null;
		
		/// <summary>
		/// CreditCardVerCode : 
		/// </summary>
		private System.String		  _creditCardVerCode = null;
		
		/// <summary>
		/// CreditCardTypeName : 
		/// </summary>
		private System.String		  _creditCardTypeName = null;
		
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		private System.DateTime		  _createdDate = DateTime.MinValue;
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		private System.DateTime		  _lastModified = DateTime.MinValue;
		
		/// <summary>
		/// UniqueCustomerID : 
		/// </summary>
		private System.Guid		  _uniqueCustomerId = Guid.Empty;
		
		/// <summary>
		/// Enabled : 
		/// </summary>
		private System.Boolean?		  _enabled = false;
		
		/// <summary>
		/// UserID : 
		/// </summary>
		private System.Int32?		  _userId = (int)0;
		
		/// <summary>
		/// WebGroupID : 
		/// </summary>
		private System.String		  _webGroupId = null;
		
		/// <summary>
		/// CompanyName : 
		/// </summary>
		private System.String		  _companyName = null;
		
		/// <summary>
		/// Username : 
		/// </summary>
		private System.String		  _username = string.Empty;
		
		/// <summary>
		/// Password : 
		/// </summary>
		private System.String		  _password = string.Empty;
		
		/// <summary>
		/// DisplayName : 
		/// </summary>
		private System.String		  _displayName = string.Empty;
		
		/// <summary>
		/// Email : 
		/// </summary>
		private System.String		  _email = null;
		
		/// <summary>
		/// Telephone : 
		/// </summary>
		private System.String		  _telephone = null;
		
		/// <summary>
		/// UserEnabled : 
		/// </summary>
		private System.Boolean		  _userEnabled = false;
		
		/// <summary>
		/// RoleID : 
		/// </summary>
		private System.Int32?		  _roleId = (int)0;
		
		/// <summary>
		/// MustChangePassword : 
		/// </summary>
		private System.Boolean?		  _mustChangePassword = false;
		
		/// <summary>
		/// CharityID : 
		/// </summary>
		private System.Int32?		  _charityId = (int)0;
		
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		private System.String		  _webMemberId = null;
		
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		private System.String		  _ddlDescription = null;
		
		/// <summary>
		/// SalesPerson : 
		/// </summary>
		private System.String		  _salesPerson = string.Empty;
		
		/// <summary>
		/// SalesManagerID : 
		/// </summary>
		private System.Int32?		  _salesManagerId = (int)0;
		
		/// <summary>
		/// VerticalDescription : 
		/// </summary>
		private System.String		  _verticalDescription = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_CustomerListBase"/> instance.
		///</summary>
		public Vw_CustomerListBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_CustomerListBase"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_priCustomerNumber"></param>
		///<param name="_description"></param>
		///<param name="_externalCustomerNumber"></param>
		///<param name="_primaryContactName"></param>
		///<param name="_primaryContactPhoneNumber"></param>
		///<param name="_primaryContactEmailAddress"></param>
		///<param name="_primaryContactAddress1"></param>
		///<param name="_primaryContactAddress2"></param>
		///<param name="_primaryContactCity"></param>
		///<param name="_primaryContactCountry"></param>
		///<param name="_primaryContactRegion"></param>
		///<param name="_primaryContactPostalCode"></param>
		///<param name="_primaryContactFaxNumber"></param>
		///<param name="_billingContactName"></param>
		///<param name="_billingContactPhoneNumber"></param>
		///<param name="_billingContactEmailAddress"></param>
		///<param name="_billingContactAddress1"></param>
		///<param name="_billingContactAddress2"></param>
		///<param name="_billingContactCity"></param>
		///<param name="_billingContactCountry"></param>
		///<param name="_billingContactRegion"></param>
		///<param name="_billingContactPostalCode"></param>
		///<param name="_billingContactFaxNumber"></param>
		///<param name="_websiteUrl"></param>
		///<param name="_salesPersonId"></param>
		///<param name="_verticalId"></param>
		///<param name="_companyId"></param>
		///<param name="_currencyId"></param>
		///<param name="_billingPeriodCutoff"></param>
		///<param name="_taxableId"></param>
		///<param name="_creditCardNameOnCard"></param>
		///<param name="_creditCardNumber"></param>
		///<param name="_creditCardExp"></param>
		///<param name="_creditCardVerCode"></param>
		///<param name="_creditCardTypeName"></param>
		///<param name="_createdDate"></param>
		///<param name="_lastModified"></param>
		///<param name="_uniqueCustomerId"></param>
		///<param name="_enabled"></param>
		///<param name="_userId"></param>
		///<param name="_webGroupId"></param>
		///<param name="_companyName"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_displayName"></param>
		///<param name="_email"></param>
		///<param name="_telephone"></param>
		///<param name="_userEnabled"></param>
		///<param name="_roleId"></param>
		///<param name="_mustChangePassword"></param>
		///<param name="_charityId"></param>
		///<param name="_webMemberId"></param>
		///<param name="_ddlDescription"></param>
		///<param name="_salesPerson"></param>
		///<param name="_salesManagerId"></param>
		///<param name="_verticalDescription"></param>
		public Vw_CustomerListBase(System.Int32 _id, System.String _wholesalerId, System.String _priCustomerNumber, System.String _description, System.String _externalCustomerNumber, System.String _primaryContactName, System.String _primaryContactPhoneNumber, System.String _primaryContactEmailAddress, System.String _primaryContactAddress1, System.String _primaryContactAddress2, System.String _primaryContactCity, System.String _primaryContactCountry, System.String _primaryContactRegion, System.String _primaryContactPostalCode, System.String _primaryContactFaxNumber, System.String _billingContactName, System.String _billingContactPhoneNumber, System.String _billingContactEmailAddress, System.String _billingContactAddress1, System.String _billingContactAddress2, System.String _billingContactCity, System.String _billingContactCountry, System.String _billingContactRegion, System.String _billingContactPostalCode, System.String _billingContactFaxNumber, System.String _websiteUrl, System.Int32 _salesPersonId, System.Int32 _verticalId, System.Int32 _companyId, System.String _currencyId, System.Int32 _billingPeriodCutoff, System.Int32 _taxableId, System.String _creditCardNameOnCard, System.String _creditCardNumber, System.String _creditCardExp, System.String _creditCardVerCode, System.String _creditCardTypeName, System.DateTime _createdDate, System.DateTime _lastModified, System.Guid _uniqueCustomerId, System.Boolean? _enabled, System.Int32? _userId, System.String _webGroupId, System.String _companyName, System.String _username, System.String _password, System.String _displayName, System.String _email, System.String _telephone, System.Boolean _userEnabled, System.Int32? _roleId, System.Boolean? _mustChangePassword, System.Int32? _charityId, System.String _webMemberId, System.String _ddlDescription, System.String _salesPerson, System.Int32? _salesManagerId, System.String _verticalDescription)
		{
			this._id = _id;
			this._wholesalerId = _wholesalerId;
			this._priCustomerNumber = _priCustomerNumber;
			this._description = _description;
			this._externalCustomerNumber = _externalCustomerNumber;
			this._primaryContactName = _primaryContactName;
			this._primaryContactPhoneNumber = _primaryContactPhoneNumber;
			this._primaryContactEmailAddress = _primaryContactEmailAddress;
			this._primaryContactAddress1 = _primaryContactAddress1;
			this._primaryContactAddress2 = _primaryContactAddress2;
			this._primaryContactCity = _primaryContactCity;
			this._primaryContactCountry = _primaryContactCountry;
			this._primaryContactRegion = _primaryContactRegion;
			this._primaryContactPostalCode = _primaryContactPostalCode;
			this._primaryContactFaxNumber = _primaryContactFaxNumber;
			this._billingContactName = _billingContactName;
			this._billingContactPhoneNumber = _billingContactPhoneNumber;
			this._billingContactEmailAddress = _billingContactEmailAddress;
			this._billingContactAddress1 = _billingContactAddress1;
			this._billingContactAddress2 = _billingContactAddress2;
			this._billingContactCity = _billingContactCity;
			this._billingContactCountry = _billingContactCountry;
			this._billingContactRegion = _billingContactRegion;
			this._billingContactPostalCode = _billingContactPostalCode;
			this._billingContactFaxNumber = _billingContactFaxNumber;
			this._websiteUrl = _websiteUrl;
			this._salesPersonId = _salesPersonId;
			this._verticalId = _verticalId;
			this._companyId = _companyId;
			this._currencyId = _currencyId;
			this._billingPeriodCutoff = _billingPeriodCutoff;
			this._taxableId = _taxableId;
			this._creditCardNameOnCard = _creditCardNameOnCard;
			this._creditCardNumber = _creditCardNumber;
			this._creditCardExp = _creditCardExp;
			this._creditCardVerCode = _creditCardVerCode;
			this._creditCardTypeName = _creditCardTypeName;
			this._createdDate = _createdDate;
			this._lastModified = _lastModified;
			this._uniqueCustomerId = _uniqueCustomerId;
			this._enabled = _enabled;
			this._userId = _userId;
			this._webGroupId = _webGroupId;
			this._companyName = _companyName;
			this._username = _username;
			this._password = _password;
			this._displayName = _displayName;
			this._email = _email;
			this._telephone = _telephone;
			this._userEnabled = _userEnabled;
			this._roleId = _roleId;
			this._mustChangePassword = _mustChangePassword;
			this._charityId = _charityId;
			this._webMemberId = _webMemberId;
			this._ddlDescription = _ddlDescription;
			this._salesPerson = _salesPerson;
			this._salesManagerId = _salesManagerId;
			this._verticalDescription = _verticalDescription;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_CustomerList"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_priCustomerNumber"></param>
		///<param name="_description"></param>
		///<param name="_externalCustomerNumber"></param>
		///<param name="_primaryContactName"></param>
		///<param name="_primaryContactPhoneNumber"></param>
		///<param name="_primaryContactEmailAddress"></param>
		///<param name="_primaryContactAddress1"></param>
		///<param name="_primaryContactAddress2"></param>
		///<param name="_primaryContactCity"></param>
		///<param name="_primaryContactCountry"></param>
		///<param name="_primaryContactRegion"></param>
		///<param name="_primaryContactPostalCode"></param>
		///<param name="_primaryContactFaxNumber"></param>
		///<param name="_billingContactName"></param>
		///<param name="_billingContactPhoneNumber"></param>
		///<param name="_billingContactEmailAddress"></param>
		///<param name="_billingContactAddress1"></param>
		///<param name="_billingContactAddress2"></param>
		///<param name="_billingContactCity"></param>
		///<param name="_billingContactCountry"></param>
		///<param name="_billingContactRegion"></param>
		///<param name="_billingContactPostalCode"></param>
		///<param name="_billingContactFaxNumber"></param>
		///<param name="_websiteUrl"></param>
		///<param name="_salesPersonId"></param>
		///<param name="_verticalId"></param>
		///<param name="_companyId"></param>
		///<param name="_currencyId"></param>
		///<param name="_billingPeriodCutoff"></param>
		///<param name="_taxableId"></param>
		///<param name="_creditCardNameOnCard"></param>
		///<param name="_creditCardNumber"></param>
		///<param name="_creditCardExp"></param>
		///<param name="_creditCardVerCode"></param>
		///<param name="_creditCardTypeName"></param>
		///<param name="_createdDate"></param>
		///<param name="_lastModified"></param>
		///<param name="_uniqueCustomerId"></param>
		///<param name="_enabled"></param>
		///<param name="_userId"></param>
		///<param name="_webGroupId"></param>
		///<param name="_companyName"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_displayName"></param>
		///<param name="_email"></param>
		///<param name="_telephone"></param>
		///<param name="_userEnabled"></param>
		///<param name="_roleId"></param>
		///<param name="_mustChangePassword"></param>
		///<param name="_charityId"></param>
		///<param name="_webMemberId"></param>
		///<param name="_ddlDescription"></param>
		///<param name="_salesPerson"></param>
		///<param name="_salesManagerId"></param>
		///<param name="_verticalDescription"></param>
		public static Vw_CustomerList CreateVw_CustomerList(System.Int32 _id, System.String _wholesalerId, System.String _priCustomerNumber, System.String _description, System.String _externalCustomerNumber, System.String _primaryContactName, System.String _primaryContactPhoneNumber, System.String _primaryContactEmailAddress, System.String _primaryContactAddress1, System.String _primaryContactAddress2, System.String _primaryContactCity, System.String _primaryContactCountry, System.String _primaryContactRegion, System.String _primaryContactPostalCode, System.String _primaryContactFaxNumber, System.String _billingContactName, System.String _billingContactPhoneNumber, System.String _billingContactEmailAddress, System.String _billingContactAddress1, System.String _billingContactAddress2, System.String _billingContactCity, System.String _billingContactCountry, System.String _billingContactRegion, System.String _billingContactPostalCode, System.String _billingContactFaxNumber, System.String _websiteUrl, System.Int32 _salesPersonId, System.Int32 _verticalId, System.Int32 _companyId, System.String _currencyId, System.Int32 _billingPeriodCutoff, System.Int32 _taxableId, System.String _creditCardNameOnCard, System.String _creditCardNumber, System.String _creditCardExp, System.String _creditCardVerCode, System.String _creditCardTypeName, System.DateTime _createdDate, System.DateTime _lastModified, System.Guid _uniqueCustomerId, System.Boolean? _enabled, System.Int32? _userId, System.String _webGroupId, System.String _companyName, System.String _username, System.String _password, System.String _displayName, System.String _email, System.String _telephone, System.Boolean _userEnabled, System.Int32? _roleId, System.Boolean? _mustChangePassword, System.Int32? _charityId, System.String _webMemberId, System.String _ddlDescription, System.String _salesPerson, System.Int32? _salesManagerId, System.String _verticalDescription)
		{
			Vw_CustomerList newVw_CustomerList = new Vw_CustomerList();
			newVw_CustomerList.Id = _id;
			newVw_CustomerList.WholesalerId = _wholesalerId;
			newVw_CustomerList.PriCustomerNumber = _priCustomerNumber;
			newVw_CustomerList.Description = _description;
			newVw_CustomerList.ExternalCustomerNumber = _externalCustomerNumber;
			newVw_CustomerList.PrimaryContactName = _primaryContactName;
			newVw_CustomerList.PrimaryContactPhoneNumber = _primaryContactPhoneNumber;
			newVw_CustomerList.PrimaryContactEmailAddress = _primaryContactEmailAddress;
			newVw_CustomerList.PrimaryContactAddress1 = _primaryContactAddress1;
			newVw_CustomerList.PrimaryContactAddress2 = _primaryContactAddress2;
			newVw_CustomerList.PrimaryContactCity = _primaryContactCity;
			newVw_CustomerList.PrimaryContactCountry = _primaryContactCountry;
			newVw_CustomerList.PrimaryContactRegion = _primaryContactRegion;
			newVw_CustomerList.PrimaryContactPostalCode = _primaryContactPostalCode;
			newVw_CustomerList.PrimaryContactFaxNumber = _primaryContactFaxNumber;
			newVw_CustomerList.BillingContactName = _billingContactName;
			newVw_CustomerList.BillingContactPhoneNumber = _billingContactPhoneNumber;
			newVw_CustomerList.BillingContactEmailAddress = _billingContactEmailAddress;
			newVw_CustomerList.BillingContactAddress1 = _billingContactAddress1;
			newVw_CustomerList.BillingContactAddress2 = _billingContactAddress2;
			newVw_CustomerList.BillingContactCity = _billingContactCity;
			newVw_CustomerList.BillingContactCountry = _billingContactCountry;
			newVw_CustomerList.BillingContactRegion = _billingContactRegion;
			newVw_CustomerList.BillingContactPostalCode = _billingContactPostalCode;
			newVw_CustomerList.BillingContactFaxNumber = _billingContactFaxNumber;
			newVw_CustomerList.WebsiteUrl = _websiteUrl;
			newVw_CustomerList.SalesPersonId = _salesPersonId;
			newVw_CustomerList.VerticalId = _verticalId;
			newVw_CustomerList.CompanyId = _companyId;
			newVw_CustomerList.CurrencyId = _currencyId;
			newVw_CustomerList.BillingPeriodCutoff = _billingPeriodCutoff;
			newVw_CustomerList.TaxableId = _taxableId;
			newVw_CustomerList.CreditCardNameOnCard = _creditCardNameOnCard;
			newVw_CustomerList.CreditCardNumber = _creditCardNumber;
			newVw_CustomerList.CreditCardExp = _creditCardExp;
			newVw_CustomerList.CreditCardVerCode = _creditCardVerCode;
			newVw_CustomerList.CreditCardTypeName = _creditCardTypeName;
			newVw_CustomerList.CreatedDate = _createdDate;
			newVw_CustomerList.LastModified = _lastModified;
			newVw_CustomerList.UniqueCustomerId = _uniqueCustomerId;
			newVw_CustomerList.Enabled = _enabled;
			newVw_CustomerList.UserId = _userId;
			newVw_CustomerList.WebGroupId = _webGroupId;
			newVw_CustomerList.CompanyName = _companyName;
			newVw_CustomerList.Username = _username;
			newVw_CustomerList.Password = _password;
			newVw_CustomerList.DisplayName = _displayName;
			newVw_CustomerList.Email = _email;
			newVw_CustomerList.Telephone = _telephone;
			newVw_CustomerList.UserEnabled = _userEnabled;
			newVw_CustomerList.RoleId = _roleId;
			newVw_CustomerList.MustChangePassword = _mustChangePassword;
			newVw_CustomerList.CharityId = _charityId;
			newVw_CustomerList.WebMemberId = _webMemberId;
			newVw_CustomerList.DdlDescription = _ddlDescription;
			newVw_CustomerList.SalesPerson = _salesPerson;
			newVw_CustomerList.SalesManagerId = _salesManagerId;
			newVw_CustomerList.VerticalDescription = _verticalDescription;
			return newVw_CustomerList;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 Id
		{
			get
			{
				return this._id; 
			}
			set
			{
				if (_id == value)
					return;
					
				this._id = value;
				this._isDirty = true;
				
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WholesalerID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WholesalerId
		{
			get
			{
				return this._wholesalerId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WholesalerId does not allow null values.");
				if (_wholesalerId == value)
					return;
					
				this._wholesalerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WholesalerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PriCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PriCustomerNumber
		{
			get
			{
				return this._priCustomerNumber; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "PriCustomerNumber does not allow null values.");
				if (_priCustomerNumber == value)
					return;
					
				this._priCustomerNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("PriCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Description property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Description
		{
			get
			{
				return this._description; 
			}
			set
			{
				if (_description == value)
					return;
					
				this._description = value;
				this._isDirty = true;
				
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ExternalCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ExternalCustomerNumber
		{
			get
			{
				return this._externalCustomerNumber; 
			}
			set
			{
				if (_externalCustomerNumber == value)
					return;
					
				this._externalCustomerNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("ExternalCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactName
		{
			get
			{
				return this._primaryContactName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "PrimaryContactName does not allow null values.");
				if (_primaryContactName == value)
					return;
					
				this._primaryContactName = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactPhoneNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactPhoneNumber
		{
			get
			{
				return this._primaryContactPhoneNumber; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "PrimaryContactPhoneNumber does not allow null values.");
				if (_primaryContactPhoneNumber == value)
					return;
					
				this._primaryContactPhoneNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactPhoneNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactEmailAddress property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactEmailAddress
		{
			get
			{
				return this._primaryContactEmailAddress; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "PrimaryContactEmailAddress does not allow null values.");
				if (_primaryContactEmailAddress == value)
					return;
					
				this._primaryContactEmailAddress = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactEmailAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactAddress1
		{
			get
			{
				return this._primaryContactAddress1; 
			}
			set
			{
				if (_primaryContactAddress1 == value)
					return;
					
				this._primaryContactAddress1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactAddress2
		{
			get
			{
				return this._primaryContactAddress2; 
			}
			set
			{
				if (_primaryContactAddress2 == value)
					return;
					
				this._primaryContactAddress2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactCity property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactCity
		{
			get
			{
				return this._primaryContactCity; 
			}
			set
			{
				if (_primaryContactCity == value)
					return;
					
				this._primaryContactCity = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactCity");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactCountry property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactCountry
		{
			get
			{
				return this._primaryContactCountry; 
			}
			set
			{
				if (_primaryContactCountry == value)
					return;
					
				this._primaryContactCountry = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactCountry");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactRegion property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactRegion
		{
			get
			{
				return this._primaryContactRegion; 
			}
			set
			{
				if (_primaryContactRegion == value)
					return;
					
				this._primaryContactRegion = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactRegion");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactPostalCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactPostalCode
		{
			get
			{
				return this._primaryContactPostalCode; 
			}
			set
			{
				if (_primaryContactPostalCode == value)
					return;
					
				this._primaryContactPostalCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactPostalCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrimaryContactFaxNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrimaryContactFaxNumber
		{
			get
			{
				return this._primaryContactFaxNumber; 
			}
			set
			{
				if (_primaryContactFaxNumber == value)
					return;
					
				this._primaryContactFaxNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrimaryContactFaxNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactName
		{
			get
			{
				return this._billingContactName; 
			}
			set
			{
				if (_billingContactName == value)
					return;
					
				this._billingContactName = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactPhoneNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactPhoneNumber
		{
			get
			{
				return this._billingContactPhoneNumber; 
			}
			set
			{
				if (_billingContactPhoneNumber == value)
					return;
					
				this._billingContactPhoneNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactPhoneNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactEmailAddress property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactEmailAddress
		{
			get
			{
				return this._billingContactEmailAddress; 
			}
			set
			{
				if (_billingContactEmailAddress == value)
					return;
					
				this._billingContactEmailAddress = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactEmailAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactAddress1
		{
			get
			{
				return this._billingContactAddress1; 
			}
			set
			{
				if (_billingContactAddress1 == value)
					return;
					
				this._billingContactAddress1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactAddress2
		{
			get
			{
				return this._billingContactAddress2; 
			}
			set
			{
				if (_billingContactAddress2 == value)
					return;
					
				this._billingContactAddress2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactCity property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactCity
		{
			get
			{
				return this._billingContactCity; 
			}
			set
			{
				if (_billingContactCity == value)
					return;
					
				this._billingContactCity = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactCity");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactCountry property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactCountry
		{
			get
			{
				return this._billingContactCountry; 
			}
			set
			{
				if (_billingContactCountry == value)
					return;
					
				this._billingContactCountry = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactCountry");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactRegion property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactRegion
		{
			get
			{
				return this._billingContactRegion; 
			}
			set
			{
				if (_billingContactRegion == value)
					return;
					
				this._billingContactRegion = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactRegion");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactPostalCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactPostalCode
		{
			get
			{
				return this._billingContactPostalCode; 
			}
			set
			{
				if (_billingContactPostalCode == value)
					return;
					
				this._billingContactPostalCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactPostalCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingContactFaxNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String BillingContactFaxNumber
		{
			get
			{
				return this._billingContactFaxNumber; 
			}
			set
			{
				if (_billingContactFaxNumber == value)
					return;
					
				this._billingContactFaxNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingContactFaxNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebsiteURL property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebsiteUrl
		{
			get
			{
				return this._websiteUrl; 
			}
			set
			{
				if (_websiteUrl == value)
					return;
					
				this._websiteUrl = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebsiteUrl");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SalesPersonID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 SalesPersonId
		{
			get
			{
				return this._salesPersonId; 
			}
			set
			{
				if (_salesPersonId == value)
					return;
					
				this._salesPersonId = value;
				this._isDirty = true;
				
				OnPropertyChanged("SalesPersonId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the VerticalID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 VerticalId
		{
			get
			{
				return this._verticalId; 
			}
			set
			{
				if (_verticalId == value)
					return;
					
				this._verticalId = value;
				this._isDirty = true;
				
				OnPropertyChanged("VerticalId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CompanyID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 CompanyId
		{
			get
			{
				return this._companyId; 
			}
			set
			{
				if (_companyId == value)
					return;
					
				this._companyId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CompanyId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CurrencyID property. 
		///		
		/// </summary>
		/// <value>This type is char</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CurrencyId
		{
			get
			{
				return this._currencyId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CurrencyId does not allow null values.");
				if (_currencyId == value)
					return;
					
				this._currencyId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CurrencyId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BillingPeriodCutoff property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 BillingPeriodCutoff
		{
			get
			{
				return this._billingPeriodCutoff; 
			}
			set
			{
				if (_billingPeriodCutoff == value)
					return;
					
				this._billingPeriodCutoff = value;
				this._isDirty = true;
				
				OnPropertyChanged("BillingPeriodCutoff");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TaxableID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TaxableId
		{
			get
			{
				return this._taxableId; 
			}
			set
			{
				if (_taxableId == value)
					return;
					
				this._taxableId = value;
				this._isDirty = true;
				
				OnPropertyChanged("TaxableId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditCardNameOnCard property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditCardNameOnCard
		{
			get
			{
				return this._creditCardNameOnCard; 
			}
			set
			{
				if (_creditCardNameOnCard == value)
					return;
					
				this._creditCardNameOnCard = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditCardNameOnCard");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditCardNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditCardNumber
		{
			get
			{
				return this._creditCardNumber; 
			}
			set
			{
				if (_creditCardNumber == value)
					return;
					
				this._creditCardNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditCardNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditCardExp property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditCardExp
		{
			get
			{
				return this._creditCardExp; 
			}
			set
			{
				if (_creditCardExp == value)
					return;
					
				this._creditCardExp = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditCardExp");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditCardVerCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditCardVerCode
		{
			get
			{
				return this._creditCardVerCode; 
			}
			set
			{
				if (_creditCardVerCode == value)
					return;
					
				this._creditCardVerCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditCardVerCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreditCardTypeName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CreditCardTypeName
		{
			get
			{
				return this._creditCardTypeName; 
			}
			set
			{
				if (_creditCardTypeName == value)
					return;
					
				this._creditCardTypeName = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreditCardTypeName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreatedDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime CreatedDate
		{
			get
			{
				return this._createdDate; 
			}
			set
			{
				if (_createdDate == value)
					return;
					
				this._createdDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreatedDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LastModified property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime LastModified
		{
			get
			{
				return this._lastModified; 
			}
			set
			{
				if (_lastModified == value)
					return;
					
				this._lastModified = value;
				this._isDirty = true;
				
				OnPropertyChanged("LastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UniqueCustomerID property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Guid UniqueCustomerId
		{
			get
			{
				return this._uniqueCustomerId; 
			}
			set
			{
				if (_uniqueCustomerId == value)
					return;
					
				this._uniqueCustomerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UniqueCustomerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Enabled property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsEnabledNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? Enabled
		{
			get
			{
				return this._enabled; 
			}
			set
			{
				if (_enabled == value && Enabled != null )
					return;
					
				this._enabled = value;
				this._isDirty = true;
				
				OnPropertyChanged("Enabled");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsUserIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? UserId
		{
			get
			{
				return this._userId; 
			}
			set
			{
				if (_userId == value && UserId != null )
					return;
					
				this._userId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebGroupID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebGroupId
		{
			get
			{
				return this._webGroupId; 
			}
			set
			{
				if (_webGroupId == value)
					return;
					
				this._webGroupId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebGroupId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CompanyName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CompanyName
		{
			get
			{
				return this._companyName; 
			}
			set
			{
				if (_companyName == value)
					return;
					
				this._companyName = value;
				this._isDirty = true;
				
				OnPropertyChanged("CompanyName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Username property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Username
		{
			get
			{
				return this._username; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Username does not allow null values.");
				if (_username == value)
					return;
					
				this._username = value;
				this._isDirty = true;
				
				OnPropertyChanged("Username");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Password property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Password
		{
			get
			{
				return this._password; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Password does not allow null values.");
				if (_password == value)
					return;
					
				this._password = value;
				this._isDirty = true;
				
				OnPropertyChanged("Password");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DisplayName
		{
			get
			{
				return this._displayName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "DisplayName does not allow null values.");
				if (_displayName == value)
					return;
					
				this._displayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("DisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Email
		{
			get
			{
				return this._email; 
			}
			set
			{
				if (_email == value)
					return;
					
				this._email = value;
				this._isDirty = true;
				
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Telephone property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Telephone
		{
			get
			{
				return this._telephone; 
			}
			set
			{
				if (_telephone == value)
					return;
					
				this._telephone = value;
				this._isDirty = true;
				
				OnPropertyChanged("Telephone");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserEnabled property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean UserEnabled
		{
			get
			{
				return this._userEnabled; 
			}
			set
			{
				if (_userEnabled == value)
					return;
					
				this._userEnabled = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserEnabled");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RoleID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsRoleIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? RoleId
		{
			get
			{
				return this._roleId; 
			}
			set
			{
				if (_roleId == value && RoleId != null )
					return;
					
				this._roleId = value;
				this._isDirty = true;
				
				OnPropertyChanged("RoleId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MustChangePassword property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsMustChangePasswordNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? MustChangePassword
		{
			get
			{
				return this._mustChangePassword; 
			}
			set
			{
				if (_mustChangePassword == value && MustChangePassword != null )
					return;
					
				this._mustChangePassword = value;
				this._isDirty = true;
				
				OnPropertyChanged("MustChangePassword");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CharityID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCharityIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CharityId
		{
			get
			{
				return this._charityId; 
			}
			set
			{
				if (_charityId == value && CharityId != null )
					return;
					
				this._charityId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CharityId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebMemberID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebMemberId
		{
			get
			{
				return this._webMemberId; 
			}
			set
			{
				if (_webMemberId == value)
					return;
					
				this._webMemberId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DDLDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DdlDescription
		{
			get
			{
				return this._ddlDescription; 
			}
			set
			{
				if (_ddlDescription == value)
					return;
					
				this._ddlDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("DdlDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SalesPerson property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SalesPerson
		{
			get
			{
				return this._salesPerson; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "SalesPerson does not allow null values.");
				if (_salesPerson == value)
					return;
					
				this._salesPerson = value;
				this._isDirty = true;
				
				OnPropertyChanged("SalesPerson");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SalesManagerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSalesManagerIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? SalesManagerId
		{
			get
			{
				return this._salesManagerId; 
			}
			set
			{
				if (_salesManagerId == value && SalesManagerId != null )
					return;
					
				this._salesManagerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("SalesManagerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the VerticalDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String VerticalDescription
		{
			get
			{
				return this._verticalDescription; 
			}
			set
			{
				if (_verticalDescription == value)
					return;
					
				this._verticalDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("VerticalDescription");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_CustomerList"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_CustomerListBase Entity 
		///</summary>
		public virtual Vw_CustomerListBase Copy()
		{
			//shallow copy entity
			Vw_CustomerList copy = new Vw_CustomerList();
				copy.Id = this.Id;
				copy.WholesalerId = this.WholesalerId;
				copy.PriCustomerNumber = this.PriCustomerNumber;
				copy.Description = this.Description;
				copy.ExternalCustomerNumber = this.ExternalCustomerNumber;
				copy.PrimaryContactName = this.PrimaryContactName;
				copy.PrimaryContactPhoneNumber = this.PrimaryContactPhoneNumber;
				copy.PrimaryContactEmailAddress = this.PrimaryContactEmailAddress;
				copy.PrimaryContactAddress1 = this.PrimaryContactAddress1;
				copy.PrimaryContactAddress2 = this.PrimaryContactAddress2;
				copy.PrimaryContactCity = this.PrimaryContactCity;
				copy.PrimaryContactCountry = this.PrimaryContactCountry;
				copy.PrimaryContactRegion = this.PrimaryContactRegion;
				copy.PrimaryContactPostalCode = this.PrimaryContactPostalCode;
				copy.PrimaryContactFaxNumber = this.PrimaryContactFaxNumber;
				copy.BillingContactName = this.BillingContactName;
				copy.BillingContactPhoneNumber = this.BillingContactPhoneNumber;
				copy.BillingContactEmailAddress = this.BillingContactEmailAddress;
				copy.BillingContactAddress1 = this.BillingContactAddress1;
				copy.BillingContactAddress2 = this.BillingContactAddress2;
				copy.BillingContactCity = this.BillingContactCity;
				copy.BillingContactCountry = this.BillingContactCountry;
				copy.BillingContactRegion = this.BillingContactRegion;
				copy.BillingContactPostalCode = this.BillingContactPostalCode;
				copy.BillingContactFaxNumber = this.BillingContactFaxNumber;
				copy.WebsiteUrl = this.WebsiteUrl;
				copy.SalesPersonId = this.SalesPersonId;
				copy.VerticalId = this.VerticalId;
				copy.CompanyId = this.CompanyId;
				copy.CurrencyId = this.CurrencyId;
				copy.BillingPeriodCutoff = this.BillingPeriodCutoff;
				copy.TaxableId = this.TaxableId;
				copy.CreditCardNameOnCard = this.CreditCardNameOnCard;
				copy.CreditCardNumber = this.CreditCardNumber;
				copy.CreditCardExp = this.CreditCardExp;
				copy.CreditCardVerCode = this.CreditCardVerCode;
				copy.CreditCardTypeName = this.CreditCardTypeName;
				copy.CreatedDate = this.CreatedDate;
				copy.LastModified = this.LastModified;
				copy.UniqueCustomerId = this.UniqueCustomerId;
				copy.Enabled = this.Enabled;
				copy.UserId = this.UserId;
				copy.WebGroupId = this.WebGroupId;
				copy.CompanyName = this.CompanyName;
				copy.Username = this.Username;
				copy.Password = this.Password;
				copy.DisplayName = this.DisplayName;
				copy.Email = this.Email;
				copy.Telephone = this.Telephone;
				copy.UserEnabled = this.UserEnabled;
				copy.RoleId = this.RoleId;
				copy.MustChangePassword = this.MustChangePassword;
				copy.CharityId = this.CharityId;
				copy.WebMemberId = this.WebMemberId;
				copy.DdlDescription = this.DdlDescription;
				copy.SalesPerson = this.SalesPerson;
				copy.SalesManagerId = this.SalesManagerId;
				copy.VerticalDescription = this.VerticalDescription;
			copy.AcceptChanges();
			return (Vw_CustomerList)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_CustomerListBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_CustomerListBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_CustomerListBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_CustomerListBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_CustomerListBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_CustomerListBase Object1, Vw_CustomerListBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if (Object1.WholesalerId != Object2.WholesalerId)
				equal = false;
			if (Object1.PriCustomerNumber != Object2.PriCustomerNumber)
				equal = false;
			if (Object1.Description != null && Object2.Description != null )
			{
				if (Object1.Description != Object2.Description)
					equal = false;
			}
			else if (Object1.Description == null ^ Object1.Description == null )
			{
				equal = false;
			}
			if (Object1.ExternalCustomerNumber != null && Object2.ExternalCustomerNumber != null )
			{
				if (Object1.ExternalCustomerNumber != Object2.ExternalCustomerNumber)
					equal = false;
			}
			else if (Object1.ExternalCustomerNumber == null ^ Object1.ExternalCustomerNumber == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactName != Object2.PrimaryContactName)
				equal = false;
			if (Object1.PrimaryContactPhoneNumber != Object2.PrimaryContactPhoneNumber)
				equal = false;
			if (Object1.PrimaryContactEmailAddress != Object2.PrimaryContactEmailAddress)
				equal = false;
			if (Object1.PrimaryContactAddress1 != null && Object2.PrimaryContactAddress1 != null )
			{
				if (Object1.PrimaryContactAddress1 != Object2.PrimaryContactAddress1)
					equal = false;
			}
			else if (Object1.PrimaryContactAddress1 == null ^ Object1.PrimaryContactAddress1 == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactAddress2 != null && Object2.PrimaryContactAddress2 != null )
			{
				if (Object1.PrimaryContactAddress2 != Object2.PrimaryContactAddress2)
					equal = false;
			}
			else if (Object1.PrimaryContactAddress2 == null ^ Object1.PrimaryContactAddress2 == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactCity != null && Object2.PrimaryContactCity != null )
			{
				if (Object1.PrimaryContactCity != Object2.PrimaryContactCity)
					equal = false;
			}
			else if (Object1.PrimaryContactCity == null ^ Object1.PrimaryContactCity == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactCountry != null && Object2.PrimaryContactCountry != null )
			{
				if (Object1.PrimaryContactCountry != Object2.PrimaryContactCountry)
					equal = false;
			}
			else if (Object1.PrimaryContactCountry == null ^ Object1.PrimaryContactCountry == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactRegion != null && Object2.PrimaryContactRegion != null )
			{
				if (Object1.PrimaryContactRegion != Object2.PrimaryContactRegion)
					equal = false;
			}
			else if (Object1.PrimaryContactRegion == null ^ Object1.PrimaryContactRegion == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactPostalCode != null && Object2.PrimaryContactPostalCode != null )
			{
				if (Object1.PrimaryContactPostalCode != Object2.PrimaryContactPostalCode)
					equal = false;
			}
			else if (Object1.PrimaryContactPostalCode == null ^ Object1.PrimaryContactPostalCode == null )
			{
				equal = false;
			}
			if (Object1.PrimaryContactFaxNumber != null && Object2.PrimaryContactFaxNumber != null )
			{
				if (Object1.PrimaryContactFaxNumber != Object2.PrimaryContactFaxNumber)
					equal = false;
			}
			else if (Object1.PrimaryContactFaxNumber == null ^ Object1.PrimaryContactFaxNumber == null )
			{
				equal = false;
			}
			if (Object1.BillingContactName != null && Object2.BillingContactName != null )
			{
				if (Object1.BillingContactName != Object2.BillingContactName)
					equal = false;
			}
			else if (Object1.BillingContactName == null ^ Object1.BillingContactName == null )
			{
				equal = false;
			}
			if (Object1.BillingContactPhoneNumber != null && Object2.BillingContactPhoneNumber != null )
			{
				if (Object1.BillingContactPhoneNumber != Object2.BillingContactPhoneNumber)
					equal = false;
			}
			else if (Object1.BillingContactPhoneNumber == null ^ Object1.BillingContactPhoneNumber == null )
			{
				equal = false;
			}
			if (Object1.BillingContactEmailAddress != null && Object2.BillingContactEmailAddress != null )
			{
				if (Object1.BillingContactEmailAddress != Object2.BillingContactEmailAddress)
					equal = false;
			}
			else if (Object1.BillingContactEmailAddress == null ^ Object1.BillingContactEmailAddress == null )
			{
				equal = false;
			}
			if (Object1.BillingContactAddress1 != null && Object2.BillingContactAddress1 != null )
			{
				if (Object1.BillingContactAddress1 != Object2.BillingContactAddress1)
					equal = false;
			}
			else if (Object1.BillingContactAddress1 == null ^ Object1.BillingContactAddress1 == null )
			{
				equal = false;
			}
			if (Object1.BillingContactAddress2 != null && Object2.BillingContactAddress2 != null )
			{
				if (Object1.BillingContactAddress2 != Object2.BillingContactAddress2)
					equal = false;
			}
			else if (Object1.BillingContactAddress2 == null ^ Object1.BillingContactAddress2 == null )
			{
				equal = false;
			}
			if (Object1.BillingContactCity != null && Object2.BillingContactCity != null )
			{
				if (Object1.BillingContactCity != Object2.BillingContactCity)
					equal = false;
			}
			else if (Object1.BillingContactCity == null ^ Object1.BillingContactCity == null )
			{
				equal = false;
			}
			if (Object1.BillingContactCountry != null && Object2.BillingContactCountry != null )
			{
				if (Object1.BillingContactCountry != Object2.BillingContactCountry)
					equal = false;
			}
			else if (Object1.BillingContactCountry == null ^ Object1.BillingContactCountry == null )
			{
				equal = false;
			}
			if (Object1.BillingContactRegion != null && Object2.BillingContactRegion != null )
			{
				if (Object1.BillingContactRegion != Object2.BillingContactRegion)
					equal = false;
			}
			else if (Object1.BillingContactRegion == null ^ Object1.BillingContactRegion == null )
			{
				equal = false;
			}
			if (Object1.BillingContactPostalCode != null && Object2.BillingContactPostalCode != null )
			{
				if (Object1.BillingContactPostalCode != Object2.BillingContactPostalCode)
					equal = false;
			}
			else if (Object1.BillingContactPostalCode == null ^ Object1.BillingContactPostalCode == null )
			{
				equal = false;
			}
			if (Object1.BillingContactFaxNumber != null && Object2.BillingContactFaxNumber != null )
			{
				if (Object1.BillingContactFaxNumber != Object2.BillingContactFaxNumber)
					equal = false;
			}
			else if (Object1.BillingContactFaxNumber == null ^ Object1.BillingContactFaxNumber == null )
			{
				equal = false;
			}
			if (Object1.WebsiteUrl != null && Object2.WebsiteUrl != null )
			{
				if (Object1.WebsiteUrl != Object2.WebsiteUrl)
					equal = false;
			}
			else if (Object1.WebsiteUrl == null ^ Object1.WebsiteUrl == null )
			{
				equal = false;
			}
			if (Object1.SalesPersonId != Object2.SalesPersonId)
				equal = false;
			if (Object1.VerticalId != Object2.VerticalId)
				equal = false;
			if (Object1.CompanyId != Object2.CompanyId)
				equal = false;
			if (Object1.CurrencyId != Object2.CurrencyId)
				equal = false;
			if (Object1.BillingPeriodCutoff != Object2.BillingPeriodCutoff)
				equal = false;
			if (Object1.TaxableId != Object2.TaxableId)
				equal = false;
			if (Object1.CreditCardNameOnCard != null && Object2.CreditCardNameOnCard != null )
			{
				if (Object1.CreditCardNameOnCard != Object2.CreditCardNameOnCard)
					equal = false;
			}
			else if (Object1.CreditCardNameOnCard == null ^ Object1.CreditCardNameOnCard == null )
			{
				equal = false;
			}
			if (Object1.CreditCardNumber != null && Object2.CreditCardNumber != null )
			{
				if (Object1.CreditCardNumber != Object2.CreditCardNumber)
					equal = false;
			}
			else if (Object1.CreditCardNumber == null ^ Object1.CreditCardNumber == null )
			{
				equal = false;
			}
			if (Object1.CreditCardExp != null && Object2.CreditCardExp != null )
			{
				if (Object1.CreditCardExp != Object2.CreditCardExp)
					equal = false;
			}
			else if (Object1.CreditCardExp == null ^ Object1.CreditCardExp == null )
			{
				equal = false;
			}
			if (Object1.CreditCardVerCode != null && Object2.CreditCardVerCode != null )
			{
				if (Object1.CreditCardVerCode != Object2.CreditCardVerCode)
					equal = false;
			}
			else if (Object1.CreditCardVerCode == null ^ Object1.CreditCardVerCode == null )
			{
				equal = false;
			}
			if (Object1.CreditCardTypeName != null && Object2.CreditCardTypeName != null )
			{
				if (Object1.CreditCardTypeName != Object2.CreditCardTypeName)
					equal = false;
			}
			else if (Object1.CreditCardTypeName == null ^ Object1.CreditCardTypeName == null )
			{
				equal = false;
			}
			if (Object1.CreatedDate != Object2.CreatedDate)
				equal = false;
			if (Object1.LastModified != Object2.LastModified)
				equal = false;
			if (Object1.UniqueCustomerId != Object2.UniqueCustomerId)
				equal = false;
			if (Object1.Enabled != null && Object2.Enabled != null )
			{
				if (Object1.Enabled != Object2.Enabled)
					equal = false;
			}
			else if (Object1.Enabled == null ^ Object1.Enabled == null )
			{
				equal = false;
			}
			if (Object1.UserId != null && Object2.UserId != null )
			{
				if (Object1.UserId != Object2.UserId)
					equal = false;
			}
			else if (Object1.UserId == null ^ Object1.UserId == null )
			{
				equal = false;
			}
			if (Object1.WebGroupId != null && Object2.WebGroupId != null )
			{
				if (Object1.WebGroupId != Object2.WebGroupId)
					equal = false;
			}
			else if (Object1.WebGroupId == null ^ Object1.WebGroupId == null )
			{
				equal = false;
			}
			if (Object1.CompanyName != null && Object2.CompanyName != null )
			{
				if (Object1.CompanyName != Object2.CompanyName)
					equal = false;
			}
			else if (Object1.CompanyName == null ^ Object1.CompanyName == null )
			{
				equal = false;
			}
			if (Object1.Username != Object2.Username)
				equal = false;
			if (Object1.Password != Object2.Password)
				equal = false;
			if (Object1.DisplayName != Object2.DisplayName)
				equal = false;
			if (Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object1.Email == null )
			{
				equal = false;
			}
			if (Object1.Telephone != null && Object2.Telephone != null )
			{
				if (Object1.Telephone != Object2.Telephone)
					equal = false;
			}
			else if (Object1.Telephone == null ^ Object1.Telephone == null )
			{
				equal = false;
			}
			if (Object1.UserEnabled != Object2.UserEnabled)
				equal = false;
			if (Object1.RoleId != null && Object2.RoleId != null )
			{
				if (Object1.RoleId != Object2.RoleId)
					equal = false;
			}
			else if (Object1.RoleId == null ^ Object1.RoleId == null )
			{
				equal = false;
			}
			if (Object1.MustChangePassword != null && Object2.MustChangePassword != null )
			{
				if (Object1.MustChangePassword != Object2.MustChangePassword)
					equal = false;
			}
			else if (Object1.MustChangePassword == null ^ Object1.MustChangePassword == null )
			{
				equal = false;
			}
			if (Object1.CharityId != null && Object2.CharityId != null )
			{
				if (Object1.CharityId != Object2.CharityId)
					equal = false;
			}
			else if (Object1.CharityId == null ^ Object1.CharityId == null )
			{
				equal = false;
			}
			if (Object1.WebMemberId != null && Object2.WebMemberId != null )
			{
				if (Object1.WebMemberId != Object2.WebMemberId)
					equal = false;
			}
			else if (Object1.WebMemberId == null ^ Object1.WebMemberId == null )
			{
				equal = false;
			}
			if (Object1.DdlDescription != null && Object2.DdlDescription != null )
			{
				if (Object1.DdlDescription != Object2.DdlDescription)
					equal = false;
			}
			else if (Object1.DdlDescription == null ^ Object1.DdlDescription == null )
			{
				equal = false;
			}
			if (Object1.SalesPerson != Object2.SalesPerson)
				equal = false;
			if (Object1.SalesManagerId != null && Object2.SalesManagerId != null )
			{
				if (Object1.SalesManagerId != Object2.SalesManagerId)
					equal = false;
			}
			else if (Object1.SalesManagerId == null ^ Object1.SalesManagerId == null )
			{
				equal = false;
			}
			if (Object1.VerticalDescription != null && Object2.VerticalDescription != null )
			{
				if (Object1.VerticalDescription != Object2.VerticalDescription)
					equal = false;
			}
			else if (Object1.VerticalDescription == null ^ Object1.VerticalDescription == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_CustomerList entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Id":
					return entity.Id;
				case "WholesalerId":
					return entity.WholesalerId;
				case "PriCustomerNumber":
					return entity.PriCustomerNumber;
				case "Description":
					return entity.Description;
				case "ExternalCustomerNumber":
					return entity.ExternalCustomerNumber;
				case "PrimaryContactName":
					return entity.PrimaryContactName;
				case "PrimaryContactPhoneNumber":
					return entity.PrimaryContactPhoneNumber;
				case "PrimaryContactEmailAddress":
					return entity.PrimaryContactEmailAddress;
				case "PrimaryContactAddress1":
					return entity.PrimaryContactAddress1;
				case "PrimaryContactAddress2":
					return entity.PrimaryContactAddress2;
				case "PrimaryContactCity":
					return entity.PrimaryContactCity;
				case "PrimaryContactCountry":
					return entity.PrimaryContactCountry;
				case "PrimaryContactRegion":
					return entity.PrimaryContactRegion;
				case "PrimaryContactPostalCode":
					return entity.PrimaryContactPostalCode;
				case "PrimaryContactFaxNumber":
					return entity.PrimaryContactFaxNumber;
				case "BillingContactName":
					return entity.BillingContactName;
				case "BillingContactPhoneNumber":
					return entity.BillingContactPhoneNumber;
				case "BillingContactEmailAddress":
					return entity.BillingContactEmailAddress;
				case "BillingContactAddress1":
					return entity.BillingContactAddress1;
				case "BillingContactAddress2":
					return entity.BillingContactAddress2;
				case "BillingContactCity":
					return entity.BillingContactCity;
				case "BillingContactCountry":
					return entity.BillingContactCountry;
				case "BillingContactRegion":
					return entity.BillingContactRegion;
				case "BillingContactPostalCode":
					return entity.BillingContactPostalCode;
				case "BillingContactFaxNumber":
					return entity.BillingContactFaxNumber;
				case "WebsiteUrl":
					return entity.WebsiteUrl;
				case "SalesPersonId":
					return entity.SalesPersonId;
				case "VerticalId":
					return entity.VerticalId;
				case "CompanyId":
					return entity.CompanyId;
				case "CurrencyId":
					return entity.CurrencyId;
				case "BillingPeriodCutoff":
					return entity.BillingPeriodCutoff;
				case "TaxableId":
					return entity.TaxableId;
				case "CreditCardNameOnCard":
					return entity.CreditCardNameOnCard;
				case "CreditCardNumber":
					return entity.CreditCardNumber;
				case "CreditCardExp":
					return entity.CreditCardExp;
				case "CreditCardVerCode":
					return entity.CreditCardVerCode;
				case "CreditCardTypeName":
					return entity.CreditCardTypeName;
				case "CreatedDate":
					return entity.CreatedDate;
				case "LastModified":
					return entity.LastModified;
				case "UniqueCustomerId":
					return entity.UniqueCustomerId;
				case "Enabled":
					return entity.Enabled;
				case "UserId":
					return entity.UserId;
				case "WebGroupId":
					return entity.WebGroupId;
				case "CompanyName":
					return entity.CompanyName;
				case "Username":
					return entity.Username;
				case "Password":
					return entity.Password;
				case "DisplayName":
					return entity.DisplayName;
				case "Email":
					return entity.Email;
				case "Telephone":
					return entity.Telephone;
				case "UserEnabled":
					return entity.UserEnabled;
				case "RoleId":
					return entity.RoleId;
				case "MustChangePassword":
					return entity.MustChangePassword;
				case "CharityId":
					return entity.CharityId;
				case "WebMemberId":
					return entity.WebMemberId;
				case "DdlDescription":
					return entity.DdlDescription;
				case "SalesPerson":
					return entity.SalesPerson;
				case "SalesManagerId":
					return entity.SalesManagerId;
				case "VerticalDescription":
					return entity.VerticalDescription;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_CustomerList, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{59}{58}- Id: {0}{58}- WholesalerId: {1}{58}- PriCustomerNumber: {2}{58}- Description: {3}{58}- ExternalCustomerNumber: {4}{58}- PrimaryContactName: {5}{58}- PrimaryContactPhoneNumber: {6}{58}- PrimaryContactEmailAddress: {7}{58}- PrimaryContactAddress1: {8}{58}- PrimaryContactAddress2: {9}{58}- PrimaryContactCity: {10}{58}- PrimaryContactCountry: {11}{58}- PrimaryContactRegion: {12}{58}- PrimaryContactPostalCode: {13}{58}- PrimaryContactFaxNumber: {14}{58}- BillingContactName: {15}{58}- BillingContactPhoneNumber: {16}{58}- BillingContactEmailAddress: {17}{58}- BillingContactAddress1: {18}{58}- BillingContactAddress2: {19}{58}- BillingContactCity: {20}{58}- BillingContactCountry: {21}{58}- BillingContactRegion: {22}{58}- BillingContactPostalCode: {23}{58}- BillingContactFaxNumber: {24}{58}- WebsiteUrl: {25}{58}- SalesPersonId: {26}{58}- VerticalId: {27}{58}- CompanyId: {28}{58}- CurrencyId: {29}{58}- BillingPeriodCutoff: {30}{58}- TaxableId: {31}{58}- CreditCardNameOnCard: {32}{58}- CreditCardNumber: {33}{58}- CreditCardExp: {34}{58}- CreditCardVerCode: {35}{58}- CreditCardTypeName: {36}{58}- CreatedDate: {37}{58}- LastModified: {38}{58}- UniqueCustomerId: {39}{58}- Enabled: {40}{58}- UserId: {41}{58}- WebGroupId: {42}{58}- CompanyName: {43}{58}- Username: {44}{58}- Password: {45}{58}- DisplayName: {46}{58}- Email: {47}{58}- Telephone: {48}{58}- UserEnabled: {49}{58}- RoleId: {50}{58}- MustChangePassword: {51}{58}- CharityId: {52}{58}- WebMemberId: {53}{58}- DdlDescription: {54}{58}- SalesPerson: {55}{58}- SalesManagerId: {56}{58}- VerticalDescription: {57}{58}", 
				this.Id,
				this.WholesalerId,
				this.PriCustomerNumber,
				(this.Description == null) ? string.Empty : this.Description.ToString(),
			     
				(this.ExternalCustomerNumber == null) ? string.Empty : this.ExternalCustomerNumber.ToString(),
			     
				this.PrimaryContactName,
				this.PrimaryContactPhoneNumber,
				this.PrimaryContactEmailAddress,
				(this.PrimaryContactAddress1 == null) ? string.Empty : this.PrimaryContactAddress1.ToString(),
			     
				(this.PrimaryContactAddress2 == null) ? string.Empty : this.PrimaryContactAddress2.ToString(),
			     
				(this.PrimaryContactCity == null) ? string.Empty : this.PrimaryContactCity.ToString(),
			     
				(this.PrimaryContactCountry == null) ? string.Empty : this.PrimaryContactCountry.ToString(),
			     
				(this.PrimaryContactRegion == null) ? string.Empty : this.PrimaryContactRegion.ToString(),
			     
				(this.PrimaryContactPostalCode == null) ? string.Empty : this.PrimaryContactPostalCode.ToString(),
			     
				(this.PrimaryContactFaxNumber == null) ? string.Empty : this.PrimaryContactFaxNumber.ToString(),
			     
				(this.BillingContactName == null) ? string.Empty : this.BillingContactName.ToString(),
			     
				(this.BillingContactPhoneNumber == null) ? string.Empty : this.BillingContactPhoneNumber.ToString(),
			     
				(this.BillingContactEmailAddress == null) ? string.Empty : this.BillingContactEmailAddress.ToString(),
			     
				(this.BillingContactAddress1 == null) ? string.Empty : this.BillingContactAddress1.ToString(),
			     
				(this.BillingContactAddress2 == null) ? string.Empty : this.BillingContactAddress2.ToString(),
			     
				(this.BillingContactCity == null) ? string.Empty : this.BillingContactCity.ToString(),
			     
				(this.BillingContactCountry == null) ? string.Empty : this.BillingContactCountry.ToString(),
			     
				(this.BillingContactRegion == null) ? string.Empty : this.BillingContactRegion.ToString(),
			     
				(this.BillingContactPostalCode == null) ? string.Empty : this.BillingContactPostalCode.ToString(),
			     
				(this.BillingContactFaxNumber == null) ? string.Empty : this.BillingContactFaxNumber.ToString(),
			     
				(this.WebsiteUrl == null) ? string.Empty : this.WebsiteUrl.ToString(),
			     
				this.SalesPersonId,
				this.VerticalId,
				this.CompanyId,
				this.CurrencyId,
				this.BillingPeriodCutoff,
				this.TaxableId,
				(this.CreditCardNameOnCard == null) ? string.Empty : this.CreditCardNameOnCard.ToString(),
			     
				(this.CreditCardNumber == null) ? string.Empty : this.CreditCardNumber.ToString(),
			     
				(this.CreditCardExp == null) ? string.Empty : this.CreditCardExp.ToString(),
			     
				(this.CreditCardVerCode == null) ? string.Empty : this.CreditCardVerCode.ToString(),
			     
				(this.CreditCardTypeName == null) ? string.Empty : this.CreditCardTypeName.ToString(),
			     
				this.CreatedDate,
				this.LastModified,
				this.UniqueCustomerId,
				(this.Enabled == null) ? string.Empty : this.Enabled.ToString(),
			     
				(this.UserId == null) ? string.Empty : this.UserId.ToString(),
			     
				(this.WebGroupId == null) ? string.Empty : this.WebGroupId.ToString(),
			     
				(this.CompanyName == null) ? string.Empty : this.CompanyName.ToString(),
			     
				this.Username,
				this.Password,
				this.DisplayName,
				(this.Email == null) ? string.Empty : this.Email.ToString(),
			     
				(this.Telephone == null) ? string.Empty : this.Telephone.ToString(),
			     
				this.UserEnabled,
				(this.RoleId == null) ? string.Empty : this.RoleId.ToString(),
			     
				(this.MustChangePassword == null) ? string.Empty : this.MustChangePassword.ToString(),
			     
				(this.CharityId == null) ? string.Empty : this.CharityId.ToString(),
			     
				(this.WebMemberId == null) ? string.Empty : this.WebMemberId.ToString(),
			     
				(this.DdlDescription == null) ? string.Empty : this.DdlDescription.ToString(),
			     
				this.SalesPerson,
				(this.SalesManagerId == null) ? string.Empty : this.SalesManagerId.ToString(),
			     
				(this.VerticalDescription == null) ? string.Empty : this.VerticalDescription.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_CustomerList columns.
	/// </summary>
	[Serializable]
	public enum Vw_CustomerListColumn
	{
		/// <summary>
		/// ID : 
		/// </summary>
		[EnumTextValue("ID")]
		[ColumnEnum("ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Id,
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		[EnumTextValue("WholesalerID")]
		[ColumnEnum("WholesalerID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		WholesalerId,
		/// <summary>
		/// PriCustomerNumber : 
		/// </summary>
		[EnumTextValue("PriCustomerNumber")]
		[ColumnEnum("PriCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		PriCustomerNumber,
		/// <summary>
		/// Description : 
		/// </summary>
		[EnumTextValue("Description")]
		[ColumnEnum("Description", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Description,
		/// <summary>
		/// ExternalCustomerNumber : 
		/// </summary>
		[EnumTextValue("ExternalCustomerNumber")]
		[ColumnEnum("ExternalCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ExternalCustomerNumber,
		/// <summary>
		/// PrimaryContactName : 
		/// </summary>
		[EnumTextValue("PrimaryContactName")]
		[ColumnEnum("PrimaryContactName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		PrimaryContactName,
		/// <summary>
		/// PrimaryContactPhoneNumber : 
		/// </summary>
		[EnumTextValue("PrimaryContactPhoneNumber")]
		[ColumnEnum("PrimaryContactPhoneNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 30)]
		PrimaryContactPhoneNumber,
		/// <summary>
		/// PrimaryContactEmailAddress : 
		/// </summary>
		[EnumTextValue("PrimaryContactEmailAddress")]
		[ColumnEnum("PrimaryContactEmailAddress", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		PrimaryContactEmailAddress,
		/// <summary>
		/// PrimaryContactAddress1 : 
		/// </summary>
		[EnumTextValue("PrimaryContactAddress1")]
		[ColumnEnum("PrimaryContactAddress1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		PrimaryContactAddress1,
		/// <summary>
		/// PrimaryContactAddress2 : 
		/// </summary>
		[EnumTextValue("PrimaryContactAddress2")]
		[ColumnEnum("PrimaryContactAddress2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		PrimaryContactAddress2,
		/// <summary>
		/// PrimaryContactCity : 
		/// </summary>
		[EnumTextValue("PrimaryContactCity")]
		[ColumnEnum("PrimaryContactCity", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		PrimaryContactCity,
		/// <summary>
		/// PrimaryContactCountry : 
		/// </summary>
		[EnumTextValue("PrimaryContactCountry")]
		[ColumnEnum("PrimaryContactCountry", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		PrimaryContactCountry,
		/// <summary>
		/// PrimaryContactRegion : 
		/// </summary>
		[EnumTextValue("PrimaryContactRegion")]
		[ColumnEnum("PrimaryContactRegion", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		PrimaryContactRegion,
		/// <summary>
		/// PrimaryContactPostalCode : 
		/// </summary>
		[EnumTextValue("PrimaryContactPostalCode")]
		[ColumnEnum("PrimaryContactPostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		PrimaryContactPostalCode,
		/// <summary>
		/// PrimaryContactFaxNumber : 
		/// </summary>
		[EnumTextValue("PrimaryContactFaxNumber")]
		[ColumnEnum("PrimaryContactFaxNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		PrimaryContactFaxNumber,
		/// <summary>
		/// BillingContactName : 
		/// </summary>
		[EnumTextValue("BillingContactName")]
		[ColumnEnum("BillingContactName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingContactName,
		/// <summary>
		/// BillingContactPhoneNumber : 
		/// </summary>
		[EnumTextValue("BillingContactPhoneNumber")]
		[ColumnEnum("BillingContactPhoneNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		BillingContactPhoneNumber,
		/// <summary>
		/// BillingContactEmailAddress : 
		/// </summary>
		[EnumTextValue("BillingContactEmailAddress")]
		[ColumnEnum("BillingContactEmailAddress", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingContactEmailAddress,
		/// <summary>
		/// BillingContactAddress1 : 
		/// </summary>
		[EnumTextValue("BillingContactAddress1")]
		[ColumnEnum("BillingContactAddress1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingContactAddress1,
		/// <summary>
		/// BillingContactAddress2 : 
		/// </summary>
		[EnumTextValue("BillingContactAddress2")]
		[ColumnEnum("BillingContactAddress2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingContactAddress2,
		/// <summary>
		/// BillingContactCity : 
		/// </summary>
		[EnumTextValue("BillingContactCity")]
		[ColumnEnum("BillingContactCity", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		BillingContactCity,
		/// <summary>
		/// BillingContactCountry : 
		/// </summary>
		[EnumTextValue("BillingContactCountry")]
		[ColumnEnum("BillingContactCountry", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		BillingContactCountry,
		/// <summary>
		/// BillingContactRegion : 
		/// </summary>
		[EnumTextValue("BillingContactRegion")]
		[ColumnEnum("BillingContactRegion", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
		BillingContactRegion,
		/// <summary>
		/// BillingContactPostalCode : 
		/// </summary>
		[EnumTextValue("BillingContactPostalCode")]
		[ColumnEnum("BillingContactPostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		BillingContactPostalCode,
		/// <summary>
		/// BillingContactFaxNumber : 
		/// </summary>
		[EnumTextValue("BillingContactFaxNumber")]
		[ColumnEnum("BillingContactFaxNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
		BillingContactFaxNumber,
		/// <summary>
		/// WebsiteURL : 
		/// </summary>
		[EnumTextValue("WebsiteURL")]
		[ColumnEnum("WebsiteURL", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		WebsiteUrl,
		/// <summary>
		/// SalesPersonID : 
		/// </summary>
		[EnumTextValue("SalesPersonID")]
		[ColumnEnum("SalesPersonID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SalesPersonId,
		/// <summary>
		/// VerticalID : 
		/// </summary>
		[EnumTextValue("VerticalID")]
		[ColumnEnum("VerticalID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		VerticalId,
		/// <summary>
		/// CompanyID : 
		/// </summary>
		[EnumTextValue("CompanyID")]
		[ColumnEnum("CompanyID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CompanyId,
		/// <summary>
		/// CurrencyID : 
		/// </summary>
		[EnumTextValue("CurrencyID")]
		[ColumnEnum("CurrencyID", typeof(System.String), System.Data.DbType.AnsiStringFixedLength, false, false, false, 3)]
		CurrencyId,
		/// <summary>
		/// BillingPeriodCutoff : 
		/// </summary>
		[EnumTextValue("BillingPeriodCutoff")]
		[ColumnEnum("BillingPeriodCutoff", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		BillingPeriodCutoff,
		/// <summary>
		/// TaxableID : 
		/// </summary>
		[EnumTextValue("TaxableID")]
		[ColumnEnum("TaxableID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TaxableId,
		/// <summary>
		/// CreditCardNameOnCard : 
		/// </summary>
		[EnumTextValue("CreditCardNameOnCard")]
		[ColumnEnum("CreditCardNameOnCard", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CreditCardNameOnCard,
		/// <summary>
		/// CreditCardNumber : 
		/// </summary>
		[EnumTextValue("CreditCardNumber")]
		[ColumnEnum("CreditCardNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		CreditCardNumber,
		/// <summary>
		/// CreditCardExp : 
		/// </summary>
		[EnumTextValue("CreditCardExp")]
		[ColumnEnum("CreditCardExp", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 4)]
		CreditCardExp,
		/// <summary>
		/// CreditCardVerCode : 
		/// </summary>
		[EnumTextValue("CreditCardVerCode")]
		[ColumnEnum("CreditCardVerCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 6)]
		CreditCardVerCode,
		/// <summary>
		/// CreditCardTypeName : 
		/// </summary>
		[EnumTextValue("CreditCardTypeName")]
		[ColumnEnum("CreditCardTypeName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CreditCardTypeName,
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		[EnumTextValue("CreatedDate")]
		[ColumnEnum("CreatedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		CreatedDate,
		/// <summary>
		/// LastModified : 
		/// </summary>
		[EnumTextValue("LastModified")]
		[ColumnEnum("LastModified", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		LastModified,
		/// <summary>
		/// UniqueCustomerID : 
		/// </summary>
		[EnumTextValue("UniqueCustomerID")]
		[ColumnEnum("UniqueCustomerID", typeof(System.Guid), System.Data.DbType.Guid, false, false, false)]
		UniqueCustomerId,
		/// <summary>
		/// Enabled : 
		/// </summary>
		[EnumTextValue("Enabled")]
		[ColumnEnum("Enabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Enabled,
		/// <summary>
		/// UserID : 
		/// </summary>
		[EnumTextValue("UserID")]
		[ColumnEnum("UserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		UserId,
		/// <summary>
		/// WebGroupID : 
		/// </summary>
		[EnumTextValue("WebGroupID")]
		[ColumnEnum("WebGroupID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebGroupId,
		/// <summary>
		/// CompanyName : 
		/// </summary>
		[EnumTextValue("CompanyName")]
		[ColumnEnum("CompanyName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CompanyName,
		/// <summary>
		/// Username : 
		/// </summary>
		[EnumTextValue("Username")]
		[ColumnEnum("Username", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		Username,
		/// <summary>
		/// Password : 
		/// </summary>
		[EnumTextValue("Password")]
		[ColumnEnum("Password", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		Password,
		/// <summary>
		/// DisplayName : 
		/// </summary>
		[EnumTextValue("DisplayName")]
		[ColumnEnum("DisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		DisplayName,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Email,
		/// <summary>
		/// Telephone : 
		/// </summary>
		[EnumTextValue("Telephone")]
		[ColumnEnum("Telephone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Telephone,
		/// <summary>
		/// UserEnabled : 
		/// </summary>
		[EnumTextValue("UserEnabled")]
		[ColumnEnum("UserEnabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		UserEnabled,
		/// <summary>
		/// RoleID : 
		/// </summary>
		[EnumTextValue("RoleID")]
		[ColumnEnum("RoleID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		RoleId,
		/// <summary>
		/// MustChangePassword : 
		/// </summary>
		[EnumTextValue("MustChangePassword")]
		[ColumnEnum("MustChangePassword", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		MustChangePassword,
		/// <summary>
		/// CharityID : 
		/// </summary>
		[EnumTextValue("CharityID")]
		[ColumnEnum("CharityID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CharityId,
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		[EnumTextValue("WebMemberID")]
		[ColumnEnum("WebMemberID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebMemberId,
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		[EnumTextValue("DDLDescription")]
		[ColumnEnum("DDLDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 116)]
		DdlDescription,
		/// <summary>
		/// SalesPerson : 
		/// </summary>
		[EnumTextValue("SalesPerson")]
		[ColumnEnum("SalesPerson", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		SalesPerson,
		/// <summary>
		/// SalesManagerID : 
		/// </summary>
		[EnumTextValue("SalesManagerID")]
		[ColumnEnum("SalesManagerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SalesManagerId,
		/// <summary>
		/// VerticalDescription : 
		/// </summary>
		[EnumTextValue("VerticalDescription")]
		[ColumnEnum("VerticalDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		VerticalDescription
	}//End enum

} // end namespace
