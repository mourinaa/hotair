/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_SystemExtension_Value.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_SystemExtension_Value' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_SystemExtension_ValueBase")]
	public abstract partial class Vw_SystemExtension_ValueBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// CustomerID : 
		/// </summary>
		private System.Int32		  _customerId = (int)0;
		
		/// <summary>
		/// ModeratorID : 
		/// </summary>
		private System.Int32		  _moderatorId = (int)0;
		
		/// <summary>
		/// EmployeeID : 
		/// </summary>
		private System.String		  _employeeId = null;
		
		/// <summary>
		/// CostCenter : 
		/// </summary>
		private System.String		  _costCenter = null;
		
		/// <summary>
		/// eZuceH323PIN : 
		/// </summary>
		private System.String		  _eZuceh323Pin = null;
		
		/// <summary>
		/// eZuceMeetingID : 
		/// </summary>
		private System.String		  _eZuceMeetingId = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_SystemExtension_ValueBase"/> instance.
		///</summary>
		public Vw_SystemExtension_ValueBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_SystemExtension_ValueBase"/> instance.
		///</summary>
		///<param name="_customerId"></param>
		///<param name="_moderatorId"></param>
		///<param name="_employeeId"></param>
		///<param name="_costCenter"></param>
		///<param name="_eZuceh323Pin"></param>
		///<param name="_eZuceMeetingId"></param>
		public Vw_SystemExtension_ValueBase(System.Int32 _customerId, System.Int32 _moderatorId, System.String _employeeId, System.String _costCenter, System.String _eZuceh323Pin, System.String _eZuceMeetingId)
		{
			this._customerId = _customerId;
			this._moderatorId = _moderatorId;
			this._employeeId = _employeeId;
			this._costCenter = _costCenter;
			this._eZuceh323Pin = _eZuceh323Pin;
			this._eZuceMeetingId = _eZuceMeetingId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_SystemExtension_Value"/> instance.
		///</summary>
		///<param name="_customerId"></param>
		///<param name="_moderatorId"></param>
		///<param name="_employeeId"></param>
		///<param name="_costCenter"></param>
		///<param name="_eZuceh323Pin"></param>
		///<param name="_eZuceMeetingId"></param>
		public static Vw_SystemExtension_Value CreateVw_SystemExtension_Value(System.Int32 _customerId, System.Int32 _moderatorId, System.String _employeeId, System.String _costCenter, System.String _eZuceh323Pin, System.String _eZuceMeetingId)
		{
			Vw_SystemExtension_Value newVw_SystemExtension_Value = new Vw_SystemExtension_Value();
			newVw_SystemExtension_Value.CustomerId = _customerId;
			newVw_SystemExtension_Value.ModeratorId = _moderatorId;
			newVw_SystemExtension_Value.EmployeeId = _employeeId;
			newVw_SystemExtension_Value.CostCenter = _costCenter;
			newVw_SystemExtension_Value.EZuceh323Pin = _eZuceh323Pin;
			newVw_SystemExtension_Value.EZuceMeetingId = _eZuceMeetingId;
			return newVw_SystemExtension_Value;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the CustomerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 CustomerId
		{
			get
			{
				return this._customerId; 
			}
			set
			{
				if (_customerId == value)
					return;
					
				this._customerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 ModeratorId
		{
			get
			{
				return this._moderatorId; 
			}
			set
			{
				if (_moderatorId == value)
					return;
					
				this._moderatorId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the EmployeeID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String EmployeeId
		{
			get
			{
				return this._employeeId; 
			}
			set
			{
				if (_employeeId == value)
					return;
					
				this._employeeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EmployeeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CostCenter property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CostCenter
		{
			get
			{
				return this._costCenter; 
			}
			set
			{
				if (_costCenter == value)
					return;
					
				this._costCenter = value;
				this._isDirty = true;
				
				OnPropertyChanged("CostCenter");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the eZuceH323PIN property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String EZuceh323Pin
		{
			get
			{
				return this._eZuceh323Pin; 
			}
			set
			{
				if (_eZuceh323Pin == value)
					return;
					
				this._eZuceh323Pin = value;
				this._isDirty = true;
				
				OnPropertyChanged("EZuceh323Pin");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the eZuceMeetingID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String EZuceMeetingId
		{
			get
			{
				return this._eZuceMeetingId; 
			}
			set
			{
				if (_eZuceMeetingId == value)
					return;
					
				this._eZuceMeetingId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EZuceMeetingId");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_SystemExtension_Value"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_SystemExtension_ValueBase Entity 
		///</summary>
		public virtual Vw_SystemExtension_ValueBase Copy()
		{
			//shallow copy entity
			Vw_SystemExtension_Value copy = new Vw_SystemExtension_Value();
				copy.CustomerId = this.CustomerId;
				copy.ModeratorId = this.ModeratorId;
				copy.EmployeeId = this.EmployeeId;
				copy.CostCenter = this.CostCenter;
				copy.EZuceh323Pin = this.EZuceh323Pin;
				copy.EZuceMeetingId = this.EZuceMeetingId;
			copy.AcceptChanges();
			return (Vw_SystemExtension_Value)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_SystemExtension_ValueBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_SystemExtension_ValueBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_SystemExtension_ValueBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_SystemExtension_ValueBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_SystemExtension_ValueBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_SystemExtension_ValueBase Object1, Vw_SystemExtension_ValueBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.CustomerId != Object2.CustomerId)
				equal = false;
			if (Object1.ModeratorId != Object2.ModeratorId)
				equal = false;
			if (Object1.EmployeeId != null && Object2.EmployeeId != null )
			{
				if (Object1.EmployeeId != Object2.EmployeeId)
					equal = false;
			}
			else if (Object1.EmployeeId == null ^ Object1.EmployeeId == null )
			{
				equal = false;
			}
			if (Object1.CostCenter != null && Object2.CostCenter != null )
			{
				if (Object1.CostCenter != Object2.CostCenter)
					equal = false;
			}
			else if (Object1.CostCenter == null ^ Object1.CostCenter == null )
			{
				equal = false;
			}
			if (Object1.EZuceh323Pin != null && Object2.EZuceh323Pin != null )
			{
				if (Object1.EZuceh323Pin != Object2.EZuceh323Pin)
					equal = false;
			}
			else if (Object1.EZuceh323Pin == null ^ Object1.EZuceh323Pin == null )
			{
				equal = false;
			}
			if (Object1.EZuceMeetingId != null && Object2.EZuceMeetingId != null )
			{
				if (Object1.EZuceMeetingId != Object2.EZuceMeetingId)
					equal = false;
			}
			else if (Object1.EZuceMeetingId == null ^ Object1.EZuceMeetingId == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_SystemExtension_Value entity, string propertyName)
		{
			switch (propertyName)
			{
				case "CustomerId":
					return entity.CustomerId;
				case "ModeratorId":
					return entity.ModeratorId;
				case "EmployeeId":
					return entity.EmployeeId;
				case "CostCenter":
					return entity.CostCenter;
				case "EZuceh323Pin":
					return entity.EZuceh323Pin;
				case "EZuceMeetingId":
					return entity.EZuceMeetingId;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_SystemExtension_Value, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{7}{6}- CustomerId: {0}{6}- ModeratorId: {1}{6}- EmployeeId: {2}{6}- CostCenter: {3}{6}- EZuceh323Pin: {4}{6}- EZuceMeetingId: {5}{6}", 
				this.CustomerId,
				this.ModeratorId,
				(this.EmployeeId == null) ? string.Empty : this.EmployeeId.ToString(),
			     
				(this.CostCenter == null) ? string.Empty : this.CostCenter.ToString(),
			     
				(this.EZuceh323Pin == null) ? string.Empty : this.EZuceh323Pin.ToString(),
			     
				(this.EZuceMeetingId == null) ? string.Empty : this.EZuceMeetingId.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_SystemExtension_Value columns.
	/// </summary>
	[Serializable]
	public enum Vw_SystemExtension_ValueColumn
	{
		/// <summary>
		/// CustomerID : 
		/// </summary>
		[EnumTextValue("CustomerID")]
		[ColumnEnum("CustomerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CustomerId,
		/// <summary>
		/// ModeratorID : 
		/// </summary>
		[EnumTextValue("ModeratorID")]
		[ColumnEnum("ModeratorID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		ModeratorId,
		/// <summary>
		/// EmployeeID : 
		/// </summary>
		[EnumTextValue("EmployeeID")]
		[ColumnEnum("EmployeeID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		EmployeeId,
		/// <summary>
		/// CostCenter : 
		/// </summary>
		[EnumTextValue("CostCenter")]
		[ColumnEnum("CostCenter", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CostCenter,
		/// <summary>
		/// eZuceH323PIN : 
		/// </summary>
		[EnumTextValue("eZuceH323PIN")]
		[ColumnEnum("eZuceH323PIN", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		EZuceh323Pin,
		/// <summary>
		/// eZuceMeetingID : 
		/// </summary>
		[EnumTextValue("eZuceMeetingID")]
		[ColumnEnum("eZuceMeetingID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		EZuceMeetingId
	}//End enum

} // end namespace
