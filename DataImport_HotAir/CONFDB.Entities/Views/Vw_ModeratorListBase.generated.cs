/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_ModeratorList.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_ModeratorList' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_ModeratorListBase")]
	public abstract partial class Vw_ModeratorListBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ID : 
		/// </summary>
		private System.Int32		  _id = (int)0;
		
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		private System.String		  _wholesalerId = string.Empty;
		
		/// <summary>
		/// CustomerID : 
		/// </summary>
		private System.Int32		  _customerId = (int)0;
		
		/// <summary>
		/// PriCustomerNumber : 
		/// </summary>
		private System.String		  _priCustomerNumber = string.Empty;
		
		/// <summary>
		/// SecCustomerNumber : 
		/// </summary>
		private System.String		  _secCustomerNumber = string.Empty;
		
		/// <summary>
		/// ExternalModeratorNumber : 
		/// </summary>
		private System.String		  _externalModeratorNumber = null;
		
		/// <summary>
		/// ModeratorCode : 
		/// </summary>
		private System.String		  _moderatorCode = string.Empty;
		
		/// <summary>
		/// PassCode : 
		/// </summary>
		private System.String		  _passCode = string.Empty;
		
		/// <summary>
		/// SeeVoghMeetingId : 
		/// </summary>
		private System.String		  _seeVoghMeetingId = null;
		
		/// <summary>
		/// Description : 
		/// </summary>
		private System.String		  _description = null;
		
		/// <summary>
		/// DepartmentID : 
		/// </summary>
		private System.Int32		  _departmentId = (int)0;
		
		/// <summary>
		/// ModifiedBy : 
		/// </summary>
		private System.String		  _modifiedBy = null;
		
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		private System.DateTime		  _createdDate = DateTime.MinValue;
		
		/// <summary>
		/// LastModified : 
		/// </summary>
		private System.DateTime		  _lastModified = DateTime.MinValue;
		
		/// <summary>
		/// Enabled : 
		/// </summary>
		private System.Boolean?		  _enabled = false;
		
		/// <summary>
		/// UniqueModeratorID : 
		/// </summary>
		private System.Guid		  _uniqueModeratorId = Guid.Empty;
		
		/// <summary>
		/// UserID : 
		/// </summary>
		private System.Int32?		  _userId = (int)0;
		
		/// <summary>
		/// WebMeetingID : 
		/// </summary>
		private System.String		  _webMeetingId = null;
		
		/// <summary>
		/// DepartmentName : 
		/// </summary>
		private System.String		  _departmentName = null;
		
		/// <summary>
		/// Username : 
		/// </summary>
		private System.String		  _username = string.Empty;
		
		/// <summary>
		/// Password : 
		/// </summary>
		private System.String		  _password = string.Empty;
		
		/// <summary>
		/// DisplayName : 
		/// </summary>
		private System.String		  _displayName = string.Empty;
		
		/// <summary>
		/// Email : 
		/// </summary>
		private System.String		  _email = null;
		
		/// <summary>
		/// Telephone : 
		/// </summary>
		private System.String		  _telephone = null;
		
		/// <summary>
		/// UserEnabled : 
		/// </summary>
		private System.Boolean		  _userEnabled = false;
		
		/// <summary>
		/// RoleID : 
		/// </summary>
		private System.Int32?		  _roleId = (int)0;
		
		/// <summary>
		/// MustChangePassword : 
		/// </summary>
		private System.Boolean?		  _mustChangePassword = false;
		
		/// <summary>
		/// CharityID : 
		/// </summary>
		private System.Int32?		  _charityId = (int)0;
		
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		private System.String		  _webMemberId = null;
		
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		private System.String		  _ddlDescription = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_ModeratorListBase"/> instance.
		///</summary>
		public Vw_ModeratorListBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_ModeratorListBase"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_priCustomerNumber"></param>
		///<param name="_secCustomerNumber"></param>
		///<param name="_externalModeratorNumber"></param>
		///<param name="_moderatorCode"></param>
		///<param name="_passCode"></param>
		///<param name="_seeVoghMeetingId"></param>
		///<param name="_description"></param>
		///<param name="_departmentId"></param>
		///<param name="_modifiedBy"></param>
		///<param name="_createdDate"></param>
		///<param name="_lastModified"></param>
		///<param name="_enabled"></param>
		///<param name="_uniqueModeratorId"></param>
		///<param name="_userId"></param>
		///<param name="_webMeetingId"></param>
		///<param name="_departmentName"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_displayName"></param>
		///<param name="_email"></param>
		///<param name="_telephone"></param>
		///<param name="_userEnabled"></param>
		///<param name="_roleId"></param>
		///<param name="_mustChangePassword"></param>
		///<param name="_charityId"></param>
		///<param name="_webMemberId"></param>
		///<param name="_ddlDescription"></param>
		public Vw_ModeratorListBase(System.Int32 _id, System.String _wholesalerId, System.Int32 _customerId, System.String _priCustomerNumber, System.String _secCustomerNumber, System.String _externalModeratorNumber, System.String _moderatorCode, System.String _passCode, System.String _seeVoghMeetingId, System.String _description, System.Int32 _departmentId, System.String _modifiedBy, System.DateTime _createdDate, System.DateTime _lastModified, System.Boolean? _enabled, System.Guid _uniqueModeratorId, System.Int32? _userId, System.String _webMeetingId, System.String _departmentName, System.String _username, System.String _password, System.String _displayName, System.String _email, System.String _telephone, System.Boolean _userEnabled, System.Int32? _roleId, System.Boolean? _mustChangePassword, System.Int32? _charityId, System.String _webMemberId, System.String _ddlDescription)
		{
			this._id = _id;
			this._wholesalerId = _wholesalerId;
			this._customerId = _customerId;
			this._priCustomerNumber = _priCustomerNumber;
			this._secCustomerNumber = _secCustomerNumber;
			this._externalModeratorNumber = _externalModeratorNumber;
			this._moderatorCode = _moderatorCode;
			this._passCode = _passCode;
			this._seeVoghMeetingId = _seeVoghMeetingId;
			this._description = _description;
			this._departmentId = _departmentId;
			this._modifiedBy = _modifiedBy;
			this._createdDate = _createdDate;
			this._lastModified = _lastModified;
			this._enabled = _enabled;
			this._uniqueModeratorId = _uniqueModeratorId;
			this._userId = _userId;
			this._webMeetingId = _webMeetingId;
			this._departmentName = _departmentName;
			this._username = _username;
			this._password = _password;
			this._displayName = _displayName;
			this._email = _email;
			this._telephone = _telephone;
			this._userEnabled = _userEnabled;
			this._roleId = _roleId;
			this._mustChangePassword = _mustChangePassword;
			this._charityId = _charityId;
			this._webMemberId = _webMemberId;
			this._ddlDescription = _ddlDescription;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_ModeratorList"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_priCustomerNumber"></param>
		///<param name="_secCustomerNumber"></param>
		///<param name="_externalModeratorNumber"></param>
		///<param name="_moderatorCode"></param>
		///<param name="_passCode"></param>
		///<param name="_seeVoghMeetingId"></param>
		///<param name="_description"></param>
		///<param name="_departmentId"></param>
		///<param name="_modifiedBy"></param>
		///<param name="_createdDate"></param>
		///<param name="_lastModified"></param>
		///<param name="_enabled"></param>
		///<param name="_uniqueModeratorId"></param>
		///<param name="_userId"></param>
		///<param name="_webMeetingId"></param>
		///<param name="_departmentName"></param>
		///<param name="_username"></param>
		///<param name="_password"></param>
		///<param name="_displayName"></param>
		///<param name="_email"></param>
		///<param name="_telephone"></param>
		///<param name="_userEnabled"></param>
		///<param name="_roleId"></param>
		///<param name="_mustChangePassword"></param>
		///<param name="_charityId"></param>
		///<param name="_webMemberId"></param>
		///<param name="_ddlDescription"></param>
		public static Vw_ModeratorList CreateVw_ModeratorList(System.Int32 _id, System.String _wholesalerId, System.Int32 _customerId, System.String _priCustomerNumber, System.String _secCustomerNumber, System.String _externalModeratorNumber, System.String _moderatorCode, System.String _passCode, System.String _seeVoghMeetingId, System.String _description, System.Int32 _departmentId, System.String _modifiedBy, System.DateTime _createdDate, System.DateTime _lastModified, System.Boolean? _enabled, System.Guid _uniqueModeratorId, System.Int32? _userId, System.String _webMeetingId, System.String _departmentName, System.String _username, System.String _password, System.String _displayName, System.String _email, System.String _telephone, System.Boolean _userEnabled, System.Int32? _roleId, System.Boolean? _mustChangePassword, System.Int32? _charityId, System.String _webMemberId, System.String _ddlDescription)
		{
			Vw_ModeratorList newVw_ModeratorList = new Vw_ModeratorList();
			newVw_ModeratorList.Id = _id;
			newVw_ModeratorList.WholesalerId = _wholesalerId;
			newVw_ModeratorList.CustomerId = _customerId;
			newVw_ModeratorList.PriCustomerNumber = _priCustomerNumber;
			newVw_ModeratorList.SecCustomerNumber = _secCustomerNumber;
			newVw_ModeratorList.ExternalModeratorNumber = _externalModeratorNumber;
			newVw_ModeratorList.ModeratorCode = _moderatorCode;
			newVw_ModeratorList.PassCode = _passCode;
			newVw_ModeratorList.SeeVoghMeetingId = _seeVoghMeetingId;
			newVw_ModeratorList.Description = _description;
			newVw_ModeratorList.DepartmentId = _departmentId;
			newVw_ModeratorList.ModifiedBy = _modifiedBy;
			newVw_ModeratorList.CreatedDate = _createdDate;
			newVw_ModeratorList.LastModified = _lastModified;
			newVw_ModeratorList.Enabled = _enabled;
			newVw_ModeratorList.UniqueModeratorId = _uniqueModeratorId;
			newVw_ModeratorList.UserId = _userId;
			newVw_ModeratorList.WebMeetingId = _webMeetingId;
			newVw_ModeratorList.DepartmentName = _departmentName;
			newVw_ModeratorList.Username = _username;
			newVw_ModeratorList.Password = _password;
			newVw_ModeratorList.DisplayName = _displayName;
			newVw_ModeratorList.Email = _email;
			newVw_ModeratorList.Telephone = _telephone;
			newVw_ModeratorList.UserEnabled = _userEnabled;
			newVw_ModeratorList.RoleId = _roleId;
			newVw_ModeratorList.MustChangePassword = _mustChangePassword;
			newVw_ModeratorList.CharityId = _charityId;
			newVw_ModeratorList.WebMemberId = _webMemberId;
			newVw_ModeratorList.DdlDescription = _ddlDescription;
			return newVw_ModeratorList;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 Id
		{
			get
			{
				return this._id; 
			}
			set
			{
				if (_id == value)
					return;
					
				this._id = value;
				this._isDirty = true;
				
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WholesalerID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WholesalerId
		{
			get
			{
				return this._wholesalerId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WholesalerId does not allow null values.");
				if (_wholesalerId == value)
					return;
					
				this._wholesalerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WholesalerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 CustomerId
		{
			get
			{
				return this._customerId; 
			}
			set
			{
				if (_customerId == value)
					return;
					
				this._customerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PriCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PriCustomerNumber
		{
			get
			{
				return this._priCustomerNumber; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "PriCustomerNumber does not allow null values.");
				if (_priCustomerNumber == value)
					return;
					
				this._priCustomerNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("PriCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SecCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SecCustomerNumber
		{
			get
			{
				return this._secCustomerNumber; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "SecCustomerNumber does not allow null values.");
				if (_secCustomerNumber == value)
					return;
					
				this._secCustomerNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("SecCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ExternalModeratorNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ExternalModeratorNumber
		{
			get
			{
				return this._externalModeratorNumber; 
			}
			set
			{
				if (_externalModeratorNumber == value)
					return;
					
				this._externalModeratorNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("ExternalModeratorNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModeratorCode
		{
			get
			{
				return this._moderatorCode; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "ModeratorCode does not allow null values.");
				if (_moderatorCode == value)
					return;
					
				this._moderatorCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PassCode property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PassCode
		{
			get
			{
				return this._passCode; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "PassCode does not allow null values.");
				if (_passCode == value)
					return;
					
				this._passCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("PassCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SeeVoghMeetingId property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SeeVoghMeetingId
		{
			get
			{
				return this._seeVoghMeetingId; 
			}
			set
			{
				if (_seeVoghMeetingId == value)
					return;
					
				this._seeVoghMeetingId = value;
				this._isDirty = true;
				
				OnPropertyChanged("SeeVoghMeetingId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Description property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Description
		{
			get
			{
				return this._description; 
			}
			set
			{
				if (_description == value)
					return;
					
				this._description = value;
				this._isDirty = true;
				
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DepartmentID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 DepartmentId
		{
			get
			{
				return this._departmentId; 
			}
			set
			{
				if (_departmentId == value)
					return;
					
				this._departmentId = value;
				this._isDirty = true;
				
				OnPropertyChanged("DepartmentId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModifiedBy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModifiedBy
		{
			get
			{
				return this._modifiedBy; 
			}
			set
			{
				if (_modifiedBy == value)
					return;
					
				this._modifiedBy = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreatedDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime CreatedDate
		{
			get
			{
				return this._createdDate; 
			}
			set
			{
				if (_createdDate == value)
					return;
					
				this._createdDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreatedDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LastModified property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime LastModified
		{
			get
			{
				return this._lastModified; 
			}
			set
			{
				if (_lastModified == value)
					return;
					
				this._lastModified = value;
				this._isDirty = true;
				
				OnPropertyChanged("LastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Enabled property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsEnabledNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? Enabled
		{
			get
			{
				return this._enabled; 
			}
			set
			{
				if (_enabled == value && Enabled != null )
					return;
					
				this._enabled = value;
				this._isDirty = true;
				
				OnPropertyChanged("Enabled");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UniqueModeratorID property. 
		///		
		/// </summary>
		/// <value>This type is uniqueidentifier</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Guid UniqueModeratorId
		{
			get
			{
				return this._uniqueModeratorId; 
			}
			set
			{
				if (_uniqueModeratorId == value)
					return;
					
				this._uniqueModeratorId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UniqueModeratorId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsUserIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? UserId
		{
			get
			{
				return this._userId; 
			}
			set
			{
				if (_userId == value && UserId != null )
					return;
					
				this._userId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebMeetingID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebMeetingId
		{
			get
			{
				return this._webMeetingId; 
			}
			set
			{
				if (_webMeetingId == value)
					return;
					
				this._webMeetingId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebMeetingId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DepartmentName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DepartmentName
		{
			get
			{
				return this._departmentName; 
			}
			set
			{
				if (_departmentName == value)
					return;
					
				this._departmentName = value;
				this._isDirty = true;
				
				OnPropertyChanged("DepartmentName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Username property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Username
		{
			get
			{
				return this._username; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Username does not allow null values.");
				if (_username == value)
					return;
					
				this._username = value;
				this._isDirty = true;
				
				OnPropertyChanged("Username");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Password property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Password
		{
			get
			{
				return this._password; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Password does not allow null values.");
				if (_password == value)
					return;
					
				this._password = value;
				this._isDirty = true;
				
				OnPropertyChanged("Password");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DisplayName
		{
			get
			{
				return this._displayName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "DisplayName does not allow null values.");
				if (_displayName == value)
					return;
					
				this._displayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("DisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Email
		{
			get
			{
				return this._email; 
			}
			set
			{
				if (_email == value)
					return;
					
				this._email = value;
				this._isDirty = true;
				
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Telephone property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Telephone
		{
			get
			{
				return this._telephone; 
			}
			set
			{
				if (_telephone == value)
					return;
					
				this._telephone = value;
				this._isDirty = true;
				
				OnPropertyChanged("Telephone");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserEnabled property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean UserEnabled
		{
			get
			{
				return this._userEnabled; 
			}
			set
			{
				if (_userEnabled == value)
					return;
					
				this._userEnabled = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserEnabled");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RoleID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsRoleIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? RoleId
		{
			get
			{
				return this._roleId; 
			}
			set
			{
				if (_roleId == value && RoleId != null )
					return;
					
				this._roleId = value;
				this._isDirty = true;
				
				OnPropertyChanged("RoleId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MustChangePassword property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsMustChangePasswordNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? MustChangePassword
		{
			get
			{
				return this._mustChangePassword; 
			}
			set
			{
				if (_mustChangePassword == value && MustChangePassword != null )
					return;
					
				this._mustChangePassword = value;
				this._isDirty = true;
				
				OnPropertyChanged("MustChangePassword");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CharityID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCharityIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? CharityId
		{
			get
			{
				return this._charityId; 
			}
			set
			{
				if (_charityId == value && CharityId != null )
					return;
					
				this._charityId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CharityId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WebMemberID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WebMemberId
		{
			get
			{
				return this._webMemberId; 
			}
			set
			{
				if (_webMemberId == value)
					return;
					
				this._webMemberId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WebMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DDLDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DdlDescription
		{
			get
			{
				return this._ddlDescription; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "DdlDescription does not allow null values.");
				if (_ddlDescription == value)
					return;
					
				this._ddlDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("DdlDescription");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_ModeratorList"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_ModeratorListBase Entity 
		///</summary>
		public virtual Vw_ModeratorListBase Copy()
		{
			//shallow copy entity
			Vw_ModeratorList copy = new Vw_ModeratorList();
				copy.Id = this.Id;
				copy.WholesalerId = this.WholesalerId;
				copy.CustomerId = this.CustomerId;
				copy.PriCustomerNumber = this.PriCustomerNumber;
				copy.SecCustomerNumber = this.SecCustomerNumber;
				copy.ExternalModeratorNumber = this.ExternalModeratorNumber;
				copy.ModeratorCode = this.ModeratorCode;
				copy.PassCode = this.PassCode;
				copy.SeeVoghMeetingId = this.SeeVoghMeetingId;
				copy.Description = this.Description;
				copy.DepartmentId = this.DepartmentId;
				copy.ModifiedBy = this.ModifiedBy;
				copy.CreatedDate = this.CreatedDate;
				copy.LastModified = this.LastModified;
				copy.Enabled = this.Enabled;
				copy.UniqueModeratorId = this.UniqueModeratorId;
				copy.UserId = this.UserId;
				copy.WebMeetingId = this.WebMeetingId;
				copy.DepartmentName = this.DepartmentName;
				copy.Username = this.Username;
				copy.Password = this.Password;
				copy.DisplayName = this.DisplayName;
				copy.Email = this.Email;
				copy.Telephone = this.Telephone;
				copy.UserEnabled = this.UserEnabled;
				copy.RoleId = this.RoleId;
				copy.MustChangePassword = this.MustChangePassword;
				copy.CharityId = this.CharityId;
				copy.WebMemberId = this.WebMemberId;
				copy.DdlDescription = this.DdlDescription;
			copy.AcceptChanges();
			return (Vw_ModeratorList)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_ModeratorListBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_ModeratorListBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_ModeratorListBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_ModeratorListBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_ModeratorListBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_ModeratorListBase Object1, Vw_ModeratorListBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if (Object1.WholesalerId != Object2.WholesalerId)
				equal = false;
			if (Object1.CustomerId != Object2.CustomerId)
				equal = false;
			if (Object1.PriCustomerNumber != Object2.PriCustomerNumber)
				equal = false;
			if (Object1.SecCustomerNumber != Object2.SecCustomerNumber)
				equal = false;
			if (Object1.ExternalModeratorNumber != null && Object2.ExternalModeratorNumber != null )
			{
				if (Object1.ExternalModeratorNumber != Object2.ExternalModeratorNumber)
					equal = false;
			}
			else if (Object1.ExternalModeratorNumber == null ^ Object1.ExternalModeratorNumber == null )
			{
				equal = false;
			}
			if (Object1.ModeratorCode != Object2.ModeratorCode)
				equal = false;
			if (Object1.PassCode != Object2.PassCode)
				equal = false;
			if (Object1.SeeVoghMeetingId != null && Object2.SeeVoghMeetingId != null )
			{
				if (Object1.SeeVoghMeetingId != Object2.SeeVoghMeetingId)
					equal = false;
			}
			else if (Object1.SeeVoghMeetingId == null ^ Object1.SeeVoghMeetingId == null )
			{
				equal = false;
			}
			if (Object1.Description != null && Object2.Description != null )
			{
				if (Object1.Description != Object2.Description)
					equal = false;
			}
			else if (Object1.Description == null ^ Object1.Description == null )
			{
				equal = false;
			}
			if (Object1.DepartmentId != Object2.DepartmentId)
				equal = false;
			if (Object1.ModifiedBy != null && Object2.ModifiedBy != null )
			{
				if (Object1.ModifiedBy != Object2.ModifiedBy)
					equal = false;
			}
			else if (Object1.ModifiedBy == null ^ Object1.ModifiedBy == null )
			{
				equal = false;
			}
			if (Object1.CreatedDate != Object2.CreatedDate)
				equal = false;
			if (Object1.LastModified != Object2.LastModified)
				equal = false;
			if (Object1.Enabled != null && Object2.Enabled != null )
			{
				if (Object1.Enabled != Object2.Enabled)
					equal = false;
			}
			else if (Object1.Enabled == null ^ Object1.Enabled == null )
			{
				equal = false;
			}
			if (Object1.UniqueModeratorId != Object2.UniqueModeratorId)
				equal = false;
			if (Object1.UserId != null && Object2.UserId != null )
			{
				if (Object1.UserId != Object2.UserId)
					equal = false;
			}
			else if (Object1.UserId == null ^ Object1.UserId == null )
			{
				equal = false;
			}
			if (Object1.WebMeetingId != null && Object2.WebMeetingId != null )
			{
				if (Object1.WebMeetingId != Object2.WebMeetingId)
					equal = false;
			}
			else if (Object1.WebMeetingId == null ^ Object1.WebMeetingId == null )
			{
				equal = false;
			}
			if (Object1.DepartmentName != null && Object2.DepartmentName != null )
			{
				if (Object1.DepartmentName != Object2.DepartmentName)
					equal = false;
			}
			else if (Object1.DepartmentName == null ^ Object1.DepartmentName == null )
			{
				equal = false;
			}
			if (Object1.Username != Object2.Username)
				equal = false;
			if (Object1.Password != Object2.Password)
				equal = false;
			if (Object1.DisplayName != Object2.DisplayName)
				equal = false;
			if (Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object1.Email == null )
			{
				equal = false;
			}
			if (Object1.Telephone != null && Object2.Telephone != null )
			{
				if (Object1.Telephone != Object2.Telephone)
					equal = false;
			}
			else if (Object1.Telephone == null ^ Object1.Telephone == null )
			{
				equal = false;
			}
			if (Object1.UserEnabled != Object2.UserEnabled)
				equal = false;
			if (Object1.RoleId != null && Object2.RoleId != null )
			{
				if (Object1.RoleId != Object2.RoleId)
					equal = false;
			}
			else if (Object1.RoleId == null ^ Object1.RoleId == null )
			{
				equal = false;
			}
			if (Object1.MustChangePassword != null && Object2.MustChangePassword != null )
			{
				if (Object1.MustChangePassword != Object2.MustChangePassword)
					equal = false;
			}
			else if (Object1.MustChangePassword == null ^ Object1.MustChangePassword == null )
			{
				equal = false;
			}
			if (Object1.CharityId != null && Object2.CharityId != null )
			{
				if (Object1.CharityId != Object2.CharityId)
					equal = false;
			}
			else if (Object1.CharityId == null ^ Object1.CharityId == null )
			{
				equal = false;
			}
			if (Object1.WebMemberId != null && Object2.WebMemberId != null )
			{
				if (Object1.WebMemberId != Object2.WebMemberId)
					equal = false;
			}
			else if (Object1.WebMemberId == null ^ Object1.WebMemberId == null )
			{
				equal = false;
			}
			if (Object1.DdlDescription != Object2.DdlDescription)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_ModeratorList entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Id":
					return entity.Id;
				case "WholesalerId":
					return entity.WholesalerId;
				case "CustomerId":
					return entity.CustomerId;
				case "PriCustomerNumber":
					return entity.PriCustomerNumber;
				case "SecCustomerNumber":
					return entity.SecCustomerNumber;
				case "ExternalModeratorNumber":
					return entity.ExternalModeratorNumber;
				case "ModeratorCode":
					return entity.ModeratorCode;
				case "PassCode":
					return entity.PassCode;
				case "SeeVoghMeetingId":
					return entity.SeeVoghMeetingId;
				case "Description":
					return entity.Description;
				case "DepartmentId":
					return entity.DepartmentId;
				case "ModifiedBy":
					return entity.ModifiedBy;
				case "CreatedDate":
					return entity.CreatedDate;
				case "LastModified":
					return entity.LastModified;
				case "Enabled":
					return entity.Enabled;
				case "UniqueModeratorId":
					return entity.UniqueModeratorId;
				case "UserId":
					return entity.UserId;
				case "WebMeetingId":
					return entity.WebMeetingId;
				case "DepartmentName":
					return entity.DepartmentName;
				case "Username":
					return entity.Username;
				case "Password":
					return entity.Password;
				case "DisplayName":
					return entity.DisplayName;
				case "Email":
					return entity.Email;
				case "Telephone":
					return entity.Telephone;
				case "UserEnabled":
					return entity.UserEnabled;
				case "RoleId":
					return entity.RoleId;
				case "MustChangePassword":
					return entity.MustChangePassword;
				case "CharityId":
					return entity.CharityId;
				case "WebMemberId":
					return entity.WebMemberId;
				case "DdlDescription":
					return entity.DdlDescription;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_ModeratorList, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{31}{30}- Id: {0}{30}- WholesalerId: {1}{30}- CustomerId: {2}{30}- PriCustomerNumber: {3}{30}- SecCustomerNumber: {4}{30}- ExternalModeratorNumber: {5}{30}- ModeratorCode: {6}{30}- PassCode: {7}{30}- SeeVoghMeetingId: {8}{30}- Description: {9}{30}- DepartmentId: {10}{30}- ModifiedBy: {11}{30}- CreatedDate: {12}{30}- LastModified: {13}{30}- Enabled: {14}{30}- UniqueModeratorId: {15}{30}- UserId: {16}{30}- WebMeetingId: {17}{30}- DepartmentName: {18}{30}- Username: {19}{30}- Password: {20}{30}- DisplayName: {21}{30}- Email: {22}{30}- Telephone: {23}{30}- UserEnabled: {24}{30}- RoleId: {25}{30}- MustChangePassword: {26}{30}- CharityId: {27}{30}- WebMemberId: {28}{30}- DdlDescription: {29}{30}", 
				this.Id,
				this.WholesalerId,
				this.CustomerId,
				this.PriCustomerNumber,
				this.SecCustomerNumber,
				(this.ExternalModeratorNumber == null) ? string.Empty : this.ExternalModeratorNumber.ToString(),
			     
				this.ModeratorCode,
				this.PassCode,
				(this.SeeVoghMeetingId == null) ? string.Empty : this.SeeVoghMeetingId.ToString(),
			     
				(this.Description == null) ? string.Empty : this.Description.ToString(),
			     
				this.DepartmentId,
				(this.ModifiedBy == null) ? string.Empty : this.ModifiedBy.ToString(),
			     
				this.CreatedDate,
				this.LastModified,
				(this.Enabled == null) ? string.Empty : this.Enabled.ToString(),
			     
				this.UniqueModeratorId,
				(this.UserId == null) ? string.Empty : this.UserId.ToString(),
			     
				(this.WebMeetingId == null) ? string.Empty : this.WebMeetingId.ToString(),
			     
				(this.DepartmentName == null) ? string.Empty : this.DepartmentName.ToString(),
			     
				this.Username,
				this.Password,
				this.DisplayName,
				(this.Email == null) ? string.Empty : this.Email.ToString(),
			     
				(this.Telephone == null) ? string.Empty : this.Telephone.ToString(),
			     
				this.UserEnabled,
				(this.RoleId == null) ? string.Empty : this.RoleId.ToString(),
			     
				(this.MustChangePassword == null) ? string.Empty : this.MustChangePassword.ToString(),
			     
				(this.CharityId == null) ? string.Empty : this.CharityId.ToString(),
			     
				(this.WebMemberId == null) ? string.Empty : this.WebMemberId.ToString(),
			     
				this.DdlDescription,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_ModeratorList columns.
	/// </summary>
	[Serializable]
	public enum Vw_ModeratorListColumn
	{
		/// <summary>
		/// ID : 
		/// </summary>
		[EnumTextValue("ID")]
		[ColumnEnum("ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Id,
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		[EnumTextValue("WholesalerID")]
		[ColumnEnum("WholesalerID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		WholesalerId,
		/// <summary>
		/// CustomerID : 
		/// </summary>
		[EnumTextValue("CustomerID")]
		[ColumnEnum("CustomerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CustomerId,
		/// <summary>
		/// PriCustomerNumber : 
		/// </summary>
		[EnumTextValue("PriCustomerNumber")]
		[ColumnEnum("PriCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		PriCustomerNumber,
		/// <summary>
		/// SecCustomerNumber : 
		/// </summary>
		[EnumTextValue("SecCustomerNumber")]
		[ColumnEnum("SecCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 6)]
		SecCustomerNumber,
		/// <summary>
		/// ExternalModeratorNumber : 
		/// </summary>
		[EnumTextValue("ExternalModeratorNumber")]
		[ColumnEnum("ExternalModeratorNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ExternalModeratorNumber,
		/// <summary>
		/// ModeratorCode : 
		/// </summary>
		[EnumTextValue("ModeratorCode")]
		[ColumnEnum("ModeratorCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 16)]
		ModeratorCode,
		/// <summary>
		/// PassCode : 
		/// </summary>
		[EnumTextValue("PassCode")]
		[ColumnEnum("PassCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 16)]
		PassCode,
		/// <summary>
		/// SeeVoghMeetingId : 
		/// </summary>
		[EnumTextValue("SeeVoghMeetingId")]
		[ColumnEnum("SeeVoghMeetingId", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		SeeVoghMeetingId,
		/// <summary>
		/// Description : 
		/// </summary>
		[EnumTextValue("Description")]
		[ColumnEnum("Description", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Description,
		/// <summary>
		/// DepartmentID : 
		/// </summary>
		[EnumTextValue("DepartmentID")]
		[ColumnEnum("DepartmentID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		DepartmentId,
		/// <summary>
		/// ModifiedBy : 
		/// </summary>
		[EnumTextValue("ModifiedBy")]
		[ColumnEnum("ModifiedBy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ModifiedBy,
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		[EnumTextValue("CreatedDate")]
		[ColumnEnum("CreatedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		CreatedDate,
		/// <summary>
		/// LastModified : 
		/// </summary>
		[EnumTextValue("LastModified")]
		[ColumnEnum("LastModified", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		LastModified,
		/// <summary>
		/// Enabled : 
		/// </summary>
		[EnumTextValue("Enabled")]
		[ColumnEnum("Enabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		Enabled,
		/// <summary>
		/// UniqueModeratorID : 
		/// </summary>
		[EnumTextValue("UniqueModeratorID")]
		[ColumnEnum("UniqueModeratorID", typeof(System.Guid), System.Data.DbType.Guid, false, false, false)]
		UniqueModeratorId,
		/// <summary>
		/// UserID : 
		/// </summary>
		[EnumTextValue("UserID")]
		[ColumnEnum("UserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		UserId,
		/// <summary>
		/// WebMeetingID : 
		/// </summary>
		[EnumTextValue("WebMeetingID")]
		[ColumnEnum("WebMeetingID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebMeetingId,
		/// <summary>
		/// DepartmentName : 
		/// </summary>
		[EnumTextValue("DepartmentName")]
		[ColumnEnum("DepartmentName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		DepartmentName,
		/// <summary>
		/// Username : 
		/// </summary>
		[EnumTextValue("Username")]
		[ColumnEnum("Username", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		Username,
		/// <summary>
		/// Password : 
		/// </summary>
		[EnumTextValue("Password")]
		[ColumnEnum("Password", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		Password,
		/// <summary>
		/// DisplayName : 
		/// </summary>
		[EnumTextValue("DisplayName")]
		[ColumnEnum("DisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		DisplayName,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		Email,
		/// <summary>
		/// Telephone : 
		/// </summary>
		[EnumTextValue("Telephone")]
		[ColumnEnum("Telephone", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Telephone,
		/// <summary>
		/// UserEnabled : 
		/// </summary>
		[EnumTextValue("UserEnabled")]
		[ColumnEnum("UserEnabled", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		UserEnabled,
		/// <summary>
		/// RoleID : 
		/// </summary>
		[EnumTextValue("RoleID")]
		[ColumnEnum("RoleID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		RoleId,
		/// <summary>
		/// MustChangePassword : 
		/// </summary>
		[EnumTextValue("MustChangePassword")]
		[ColumnEnum("MustChangePassword", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		MustChangePassword,
		/// <summary>
		/// CharityID : 
		/// </summary>
		[EnumTextValue("CharityID")]
		[ColumnEnum("CharityID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CharityId,
		/// <summary>
		/// WebMemberID : 
		/// </summary>
		[EnumTextValue("WebMemberID")]
		[ColumnEnum("WebMemberID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		WebMemberId,
		/// <summary>
		/// DDLDescription : 
		/// </summary>
		[EnumTextValue("DDLDescription")]
		[ColumnEnum("DDLDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 212)]
		DdlDescription
	}//End enum

} // end namespace
