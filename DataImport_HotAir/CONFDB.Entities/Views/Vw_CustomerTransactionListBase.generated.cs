/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Vw_CustomerTransactionList.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace CONFDB.Entities
{
	///<summary>
	/// An object representation of the 'vw_CustomerTransactionList' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("Vw_CustomerTransactionListBase")]
	public abstract partial class Vw_CustomerTransactionListBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ID : 
		/// </summary>
		private System.Int64		  _id = (long)0;
		
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		private System.String		  _wholesalerId = string.Empty;
		
		/// <summary>
		/// CustomerID : 
		/// </summary>
		private System.Int32		  _customerId = (int)0;
		
		/// <summary>
		/// ModeratorID : 
		/// </summary>
		private System.Int32?		  _moderatorId = (int)0;
		
		/// <summary>
		/// PriCustomerNumber : 
		/// </summary>
		private System.String		  _priCustomerNumber = null;
		
		/// <summary>
		/// SecCustomerNumber : 
		/// </summary>
		private System.String		  _secCustomerNumber = null;
		
		/// <summary>
		/// CustomerTransactionTypeID : 
		/// </summary>
		private System.Int32		  _customerTransactionTypeId = (int)0;
		
		/// <summary>
		/// CustomerTransactionTypeDisplayName : 
		/// </summary>
		private System.String		  _customerTransactionTypeDisplayName = null;
		
		/// <summary>
		/// TransactionDescription : 
		/// </summary>
		private System.String		  _transactionDescription = null;
		
		/// <summary>
		/// TransactionDate : 
		/// </summary>
		private System.DateTime		  _transactionDate = DateTime.MinValue;
		
		/// <summary>
		/// TransactionAmount : 
		/// </summary>
		private System.Decimal?		  _transactionAmount = 0.0m;
		
		/// <summary>
		/// LocalTaxRate : 
		/// </summary>
		private System.Decimal?		  _localTaxRate = 0.0m;
		
		/// <summary>
		/// FederalTaxRate : 
		/// </summary>
		private System.Decimal?		  _federalTaxRate = 0.0m;
		
		/// <summary>
		/// LocalTaxAmount : 
		/// </summary>
		private System.Decimal?		  _localTaxAmount = 0.0m;
		
		/// <summary>
		/// FederalTaxAmount : 
		/// </summary>
		private System.Decimal?		  _federalTaxAmount = 0.0m;
		
		/// <summary>
		/// TransactionTotal : 
		/// </summary>
		private System.Decimal?		  _transactionTotal = 0.0m;
		
		/// <summary>
		/// CustomerBalance : 
		/// </summary>
		private System.Decimal?		  _customerBalance = 0.0m;
		
		/// <summary>
		/// Wholesaler_ProductID : 
		/// </summary>
		private System.Int32?		  _wholesaler_ProductId = (int)0;
		
		/// <summary>
		/// ProductRateID : 
		/// </summary>
		private System.Int32?		  _productRateId = (int)0;
		
		/// <summary>
		/// Quantity : 
		/// </summary>
		private System.Int32?		  _quantity = (int)0;
		
		/// <summary>
		/// SellRate : 
		/// </summary>
		private System.Decimal?		  _sellRate = 0.0m;
		
		/// <summary>
		/// BuyRate : 
		/// </summary>
		private System.Decimal?		  _buyRate = 0.0m;
		
		/// <summary>
		/// WSTransactionAmount : 
		/// </summary>
		private System.Decimal?		  _wsTransactionAmount = 0.0m;
		
		/// <summary>
		/// ReferenceNumber : 
		/// </summary>
		private System.String		  _referenceNumber = null;
		
		/// <summary>
		/// UniqueConferenceID : 
		/// </summary>
		private System.String		  _uniqueConferenceId = null;
		
		/// <summary>
		/// PostedDate : 
		/// </summary>
		private System.DateTime		  _postedDate = DateTime.MinValue;
		
		/// <summary>
		/// ModifiedBy : 
		/// </summary>
		private System.String		  _modifiedBy = null;
		
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		private System.DateTime?		  _createdDate = DateTime.MinValue;
		
		/// <summary>
		/// PostedToInvoice : 
		/// </summary>
		private System.Boolean?		  _postedToInvoice = false;
		
		/// <summary>
		/// PostedToInvoiceDate : 
		/// </summary>
		private System.DateTime?		  _postedToInvoiceDate = DateTime.MinValue;
		
		/// <summary>
		/// ElapsedTimeSeconds : 
		/// </summary>
		private System.Int32?		  _elapsedTimeSeconds = (int)0;
		
		/// <summary>
		/// ProductRateDisplayName : 
		/// </summary>
		private System.String		  _productRateDisplayName = null;
		
		/// <summary>
		/// Wholesaler_ProductName : 
		/// </summary>
		private System.String		  _wholesaler_ProductName = null;
		
		/// <summary>
		/// ModeratorName : 
		/// </summary>
		private System.String		  _moderatorName = null;
		
		/// <summary>
		/// ConferenceName : 
		/// </summary>
		private System.String		  _conferenceName = null;
		
		/// <summary>
		/// ModeratorConferenceName : 
		/// </summary>
		private System.String		  _moderatorConferenceName = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="Vw_CustomerTransactionListBase"/> instance.
		///</summary>
		public Vw_CustomerTransactionListBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="Vw_CustomerTransactionListBase"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_moderatorId"></param>
		///<param name="_priCustomerNumber"></param>
		///<param name="_secCustomerNumber"></param>
		///<param name="_customerTransactionTypeId"></param>
		///<param name="_customerTransactionTypeDisplayName"></param>
		///<param name="_transactionDescription"></param>
		///<param name="_transactionDate"></param>
		///<param name="_transactionAmount"></param>
		///<param name="_localTaxRate"></param>
		///<param name="_federalTaxRate"></param>
		///<param name="_localTaxAmount"></param>
		///<param name="_federalTaxAmount"></param>
		///<param name="_transactionTotal"></param>
		///<param name="_customerBalance"></param>
		///<param name="_wholesaler_ProductId"></param>
		///<param name="_productRateId"></param>
		///<param name="_quantity"></param>
		///<param name="_sellRate"></param>
		///<param name="_buyRate"></param>
		///<param name="_wsTransactionAmount"></param>
		///<param name="_referenceNumber"></param>
		///<param name="_uniqueConferenceId"></param>
		///<param name="_postedDate"></param>
		///<param name="_modifiedBy"></param>
		///<param name="_createdDate"></param>
		///<param name="_postedToInvoice"></param>
		///<param name="_postedToInvoiceDate"></param>
		///<param name="_elapsedTimeSeconds"></param>
		///<param name="_productRateDisplayName"></param>
		///<param name="_wholesaler_ProductName"></param>
		///<param name="_moderatorName"></param>
		///<param name="_conferenceName"></param>
		///<param name="_moderatorConferenceName"></param>
		public Vw_CustomerTransactionListBase(System.Int64 _id, System.String _wholesalerId, System.Int32 _customerId, System.Int32? _moderatorId, System.String _priCustomerNumber, System.String _secCustomerNumber, System.Int32 _customerTransactionTypeId, System.String _customerTransactionTypeDisplayName, System.String _transactionDescription, System.DateTime _transactionDate, System.Decimal? _transactionAmount, System.Decimal? _localTaxRate, System.Decimal? _federalTaxRate, System.Decimal? _localTaxAmount, System.Decimal? _federalTaxAmount, System.Decimal? _transactionTotal, System.Decimal? _customerBalance, System.Int32? _wholesaler_ProductId, System.Int32? _productRateId, System.Int32? _quantity, System.Decimal? _sellRate, System.Decimal? _buyRate, System.Decimal? _wsTransactionAmount, System.String _referenceNumber, System.String _uniqueConferenceId, System.DateTime _postedDate, System.String _modifiedBy, System.DateTime? _createdDate, System.Boolean? _postedToInvoice, System.DateTime? _postedToInvoiceDate, System.Int32? _elapsedTimeSeconds, System.String _productRateDisplayName, System.String _wholesaler_ProductName, System.String _moderatorName, System.String _conferenceName, System.String _moderatorConferenceName)
		{
			this._id = _id;
			this._wholesalerId = _wholesalerId;
			this._customerId = _customerId;
			this._moderatorId = _moderatorId;
			this._priCustomerNumber = _priCustomerNumber;
			this._secCustomerNumber = _secCustomerNumber;
			this._customerTransactionTypeId = _customerTransactionTypeId;
			this._customerTransactionTypeDisplayName = _customerTransactionTypeDisplayName;
			this._transactionDescription = _transactionDescription;
			this._transactionDate = _transactionDate;
			this._transactionAmount = _transactionAmount;
			this._localTaxRate = _localTaxRate;
			this._federalTaxRate = _federalTaxRate;
			this._localTaxAmount = _localTaxAmount;
			this._federalTaxAmount = _federalTaxAmount;
			this._transactionTotal = _transactionTotal;
			this._customerBalance = _customerBalance;
			this._wholesaler_ProductId = _wholesaler_ProductId;
			this._productRateId = _productRateId;
			this._quantity = _quantity;
			this._sellRate = _sellRate;
			this._buyRate = _buyRate;
			this._wsTransactionAmount = _wsTransactionAmount;
			this._referenceNumber = _referenceNumber;
			this._uniqueConferenceId = _uniqueConferenceId;
			this._postedDate = _postedDate;
			this._modifiedBy = _modifiedBy;
			this._createdDate = _createdDate;
			this._postedToInvoice = _postedToInvoice;
			this._postedToInvoiceDate = _postedToInvoiceDate;
			this._elapsedTimeSeconds = _elapsedTimeSeconds;
			this._productRateDisplayName = _productRateDisplayName;
			this._wholesaler_ProductName = _wholesaler_ProductName;
			this._moderatorName = _moderatorName;
			this._conferenceName = _conferenceName;
			this._moderatorConferenceName = _moderatorConferenceName;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Vw_CustomerTransactionList"/> instance.
		///</summary>
		///<param name="_id"></param>
		///<param name="_wholesalerId"></param>
		///<param name="_customerId"></param>
		///<param name="_moderatorId"></param>
		///<param name="_priCustomerNumber"></param>
		///<param name="_secCustomerNumber"></param>
		///<param name="_customerTransactionTypeId"></param>
		///<param name="_customerTransactionTypeDisplayName"></param>
		///<param name="_transactionDescription"></param>
		///<param name="_transactionDate"></param>
		///<param name="_transactionAmount"></param>
		///<param name="_localTaxRate"></param>
		///<param name="_federalTaxRate"></param>
		///<param name="_localTaxAmount"></param>
		///<param name="_federalTaxAmount"></param>
		///<param name="_transactionTotal"></param>
		///<param name="_customerBalance"></param>
		///<param name="_wholesaler_ProductId"></param>
		///<param name="_productRateId"></param>
		///<param name="_quantity"></param>
		///<param name="_sellRate"></param>
		///<param name="_buyRate"></param>
		///<param name="_wsTransactionAmount"></param>
		///<param name="_referenceNumber"></param>
		///<param name="_uniqueConferenceId"></param>
		///<param name="_postedDate"></param>
		///<param name="_modifiedBy"></param>
		///<param name="_createdDate"></param>
		///<param name="_postedToInvoice"></param>
		///<param name="_postedToInvoiceDate"></param>
		///<param name="_elapsedTimeSeconds"></param>
		///<param name="_productRateDisplayName"></param>
		///<param name="_wholesaler_ProductName"></param>
		///<param name="_moderatorName"></param>
		///<param name="_conferenceName"></param>
		///<param name="_moderatorConferenceName"></param>
		public static Vw_CustomerTransactionList CreateVw_CustomerTransactionList(System.Int64 _id, System.String _wholesalerId, System.Int32 _customerId, System.Int32? _moderatorId, System.String _priCustomerNumber, System.String _secCustomerNumber, System.Int32 _customerTransactionTypeId, System.String _customerTransactionTypeDisplayName, System.String _transactionDescription, System.DateTime _transactionDate, System.Decimal? _transactionAmount, System.Decimal? _localTaxRate, System.Decimal? _federalTaxRate, System.Decimal? _localTaxAmount, System.Decimal? _federalTaxAmount, System.Decimal? _transactionTotal, System.Decimal? _customerBalance, System.Int32? _wholesaler_ProductId, System.Int32? _productRateId, System.Int32? _quantity, System.Decimal? _sellRate, System.Decimal? _buyRate, System.Decimal? _wsTransactionAmount, System.String _referenceNumber, System.String _uniqueConferenceId, System.DateTime _postedDate, System.String _modifiedBy, System.DateTime? _createdDate, System.Boolean? _postedToInvoice, System.DateTime? _postedToInvoiceDate, System.Int32? _elapsedTimeSeconds, System.String _productRateDisplayName, System.String _wholesaler_ProductName, System.String _moderatorName, System.String _conferenceName, System.String _moderatorConferenceName)
		{
			Vw_CustomerTransactionList newVw_CustomerTransactionList = new Vw_CustomerTransactionList();
			newVw_CustomerTransactionList.Id = _id;
			newVw_CustomerTransactionList.WholesalerId = _wholesalerId;
			newVw_CustomerTransactionList.CustomerId = _customerId;
			newVw_CustomerTransactionList.ModeratorId = _moderatorId;
			newVw_CustomerTransactionList.PriCustomerNumber = _priCustomerNumber;
			newVw_CustomerTransactionList.SecCustomerNumber = _secCustomerNumber;
			newVw_CustomerTransactionList.CustomerTransactionTypeId = _customerTransactionTypeId;
			newVw_CustomerTransactionList.CustomerTransactionTypeDisplayName = _customerTransactionTypeDisplayName;
			newVw_CustomerTransactionList.TransactionDescription = _transactionDescription;
			newVw_CustomerTransactionList.TransactionDate = _transactionDate;
			newVw_CustomerTransactionList.TransactionAmount = _transactionAmount;
			newVw_CustomerTransactionList.LocalTaxRate = _localTaxRate;
			newVw_CustomerTransactionList.FederalTaxRate = _federalTaxRate;
			newVw_CustomerTransactionList.LocalTaxAmount = _localTaxAmount;
			newVw_CustomerTransactionList.FederalTaxAmount = _federalTaxAmount;
			newVw_CustomerTransactionList.TransactionTotal = _transactionTotal;
			newVw_CustomerTransactionList.CustomerBalance = _customerBalance;
			newVw_CustomerTransactionList.Wholesaler_ProductId = _wholesaler_ProductId;
			newVw_CustomerTransactionList.ProductRateId = _productRateId;
			newVw_CustomerTransactionList.Quantity = _quantity;
			newVw_CustomerTransactionList.SellRate = _sellRate;
			newVw_CustomerTransactionList.BuyRate = _buyRate;
			newVw_CustomerTransactionList.WsTransactionAmount = _wsTransactionAmount;
			newVw_CustomerTransactionList.ReferenceNumber = _referenceNumber;
			newVw_CustomerTransactionList.UniqueConferenceId = _uniqueConferenceId;
			newVw_CustomerTransactionList.PostedDate = _postedDate;
			newVw_CustomerTransactionList.ModifiedBy = _modifiedBy;
			newVw_CustomerTransactionList.CreatedDate = _createdDate;
			newVw_CustomerTransactionList.PostedToInvoice = _postedToInvoice;
			newVw_CustomerTransactionList.PostedToInvoiceDate = _postedToInvoiceDate;
			newVw_CustomerTransactionList.ElapsedTimeSeconds = _elapsedTimeSeconds;
			newVw_CustomerTransactionList.ProductRateDisplayName = _productRateDisplayName;
			newVw_CustomerTransactionList.Wholesaler_ProductName = _wholesaler_ProductName;
			newVw_CustomerTransactionList.ModeratorName = _moderatorName;
			newVw_CustomerTransactionList.ConferenceName = _conferenceName;
			newVw_CustomerTransactionList.ModeratorConferenceName = _moderatorConferenceName;
			return newVw_CustomerTransactionList;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ID property. 
		///		
		/// </summary>
		/// <value>This type is bigint</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int64 Id
		{
			get
			{
				return this._id; 
			}
			set
			{
				if (_id == value)
					return;
					
				this._id = value;
				this._isDirty = true;
				
				OnPropertyChanged("Id");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WholesalerID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WholesalerId
		{
			get
			{
				return this._wholesalerId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WholesalerId does not allow null values.");
				if (_wholesalerId == value)
					return;
					
				this._wholesalerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WholesalerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 CustomerId
		{
			get
			{
				return this._customerId; 
			}
			set
			{
				if (_customerId == value)
					return;
					
				this._customerId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsModeratorIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ModeratorId
		{
			get
			{
				return this._moderatorId; 
			}
			set
			{
				if (_moderatorId == value && ModeratorId != null )
					return;
					
				this._moderatorId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PriCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PriCustomerNumber
		{
			get
			{
				return this._priCustomerNumber; 
			}
			set
			{
				if (_priCustomerNumber == value)
					return;
					
				this._priCustomerNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("PriCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SecCustomerNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SecCustomerNumber
		{
			get
			{
				return this._secCustomerNumber; 
			}
			set
			{
				if (_secCustomerNumber == value)
					return;
					
				this._secCustomerNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("SecCustomerNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerTransactionTypeID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 CustomerTransactionTypeId
		{
			get
			{
				return this._customerTransactionTypeId; 
			}
			set
			{
				if (_customerTransactionTypeId == value)
					return;
					
				this._customerTransactionTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerTransactionTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerTransactionTypeDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CustomerTransactionTypeDisplayName
		{
			get
			{
				return this._customerTransactionTypeDisplayName; 
			}
			set
			{
				if (_customerTransactionTypeDisplayName == value)
					return;
					
				this._customerTransactionTypeDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerTransactionTypeDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TransactionDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TransactionDescription
		{
			get
			{
				return this._transactionDescription; 
			}
			set
			{
				if (_transactionDescription == value)
					return;
					
				this._transactionDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("TransactionDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TransactionDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime TransactionDate
		{
			get
			{
				return this._transactionDate; 
			}
			set
			{
				if (_transactionDate == value)
					return;
					
				this._transactionDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("TransactionDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TransactionAmount property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTransactionAmountNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TransactionAmount
		{
			get
			{
				return this._transactionAmount; 
			}
			set
			{
				if (_transactionAmount == value && TransactionAmount != null )
					return;
					
				this._transactionAmount = value;
				this._isDirty = true;
				
				OnPropertyChanged("TransactionAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LocalTaxRate property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsLocalTaxRateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? LocalTaxRate
		{
			get
			{
				return this._localTaxRate; 
			}
			set
			{
				if (_localTaxRate == value && LocalTaxRate != null )
					return;
					
				this._localTaxRate = value;
				this._isDirty = true;
				
				OnPropertyChanged("LocalTaxRate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the FederalTaxRate property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFederalTaxRateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? FederalTaxRate
		{
			get
			{
				return this._federalTaxRate; 
			}
			set
			{
				if (_federalTaxRate == value && FederalTaxRate != null )
					return;
					
				this._federalTaxRate = value;
				this._isDirty = true;
				
				OnPropertyChanged("FederalTaxRate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LocalTaxAmount property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsLocalTaxAmountNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? LocalTaxAmount
		{
			get
			{
				return this._localTaxAmount; 
			}
			set
			{
				if (_localTaxAmount == value && LocalTaxAmount != null )
					return;
					
				this._localTaxAmount = value;
				this._isDirty = true;
				
				OnPropertyChanged("LocalTaxAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the FederalTaxAmount property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFederalTaxAmountNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? FederalTaxAmount
		{
			get
			{
				return this._federalTaxAmount; 
			}
			set
			{
				if (_federalTaxAmount == value && FederalTaxAmount != null )
					return;
					
				this._federalTaxAmount = value;
				this._isDirty = true;
				
				OnPropertyChanged("FederalTaxAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TransactionTotal property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTransactionTotalNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TransactionTotal
		{
			get
			{
				return this._transactionTotal; 
			}
			set
			{
				if (_transactionTotal == value && TransactionTotal != null )
					return;
					
				this._transactionTotal = value;
				this._isDirty = true;
				
				OnPropertyChanged("TransactionTotal");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomerBalance property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCustomerBalanceNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? CustomerBalance
		{
			get
			{
				return this._customerBalance; 
			}
			set
			{
				if (_customerBalance == value && CustomerBalance != null )
					return;
					
				this._customerBalance = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomerBalance");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Wholesaler_ProductID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsWholesaler_ProductIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Wholesaler_ProductId
		{
			get
			{
				return this._wholesaler_ProductId; 
			}
			set
			{
				if (_wholesaler_ProductId == value && Wholesaler_ProductId != null )
					return;
					
				this._wholesaler_ProductId = value;
				this._isDirty = true;
				
				OnPropertyChanged("Wholesaler_ProductId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsProductRateIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ProductRateId
		{
			get
			{
				return this._productRateId; 
			}
			set
			{
				if (_productRateId == value && ProductRateId != null )
					return;
					
				this._productRateId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Quantity property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsQuantityNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? Quantity
		{
			get
			{
				return this._quantity; 
			}
			set
			{
				if (_quantity == value && Quantity != null )
					return;
					
				this._quantity = value;
				this._isDirty = true;
				
				OnPropertyChanged("Quantity");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SellRate property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSellRateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? SellRate
		{
			get
			{
				return this._sellRate; 
			}
			set
			{
				if (_sellRate == value && SellRate != null )
					return;
					
				this._sellRate = value;
				this._isDirty = true;
				
				OnPropertyChanged("SellRate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the BuyRate property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsBuyRateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? BuyRate
		{
			get
			{
				return this._buyRate; 
			}
			set
			{
				if (_buyRate == value && BuyRate != null )
					return;
					
				this._buyRate = value;
				this._isDirty = true;
				
				OnPropertyChanged("BuyRate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WSTransactionAmount property. 
		///		
		/// </summary>
		/// <value>This type is decimal</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsWsTransactionAmountNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? WsTransactionAmount
		{
			get
			{
				return this._wsTransactionAmount; 
			}
			set
			{
				if (_wsTransactionAmount == value && WsTransactionAmount != null )
					return;
					
				this._wsTransactionAmount = value;
				this._isDirty = true;
				
				OnPropertyChanged("WsTransactionAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ReferenceNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ReferenceNumber
		{
			get
			{
				return this._referenceNumber; 
			}
			set
			{
				if (_referenceNumber == value)
					return;
					
				this._referenceNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("ReferenceNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UniqueConferenceID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UniqueConferenceId
		{
			get
			{
				return this._uniqueConferenceId; 
			}
			set
			{
				if (_uniqueConferenceId == value)
					return;
					
				this._uniqueConferenceId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UniqueConferenceId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PostedDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime PostedDate
		{
			get
			{
				return this._postedDate; 
			}
			set
			{
				if (_postedDate == value)
					return;
					
				this._postedDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("PostedDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModifiedBy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModifiedBy
		{
			get
			{
				return this._modifiedBy; 
			}
			set
			{
				if (_modifiedBy == value)
					return;
					
				this._modifiedBy = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModifiedBy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreatedDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCreatedDateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? CreatedDate
		{
			get
			{
				return this._createdDate; 
			}
			set
			{
				if (_createdDate == value && CreatedDate != null )
					return;
					
				this._createdDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreatedDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PostedToInvoice property. 
		///		
		/// </summary>
		/// <value>This type is bit</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsPostedToInvoiceNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Boolean? PostedToInvoice
		{
			get
			{
				return this._postedToInvoice; 
			}
			set
			{
				if (_postedToInvoice == value && PostedToInvoice != null )
					return;
					
				this._postedToInvoice = value;
				this._isDirty = true;
				
				OnPropertyChanged("PostedToInvoice");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PostedToInvoiceDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsPostedToInvoiceDateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? PostedToInvoiceDate
		{
			get
			{
				return this._postedToInvoiceDate; 
			}
			set
			{
				if (_postedToInvoiceDate == value && PostedToInvoiceDate != null )
					return;
					
				this._postedToInvoiceDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("PostedToInvoiceDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ElapsedTimeSeconds property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsElapsedTimeSecondsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? ElapsedTimeSeconds
		{
			get
			{
				return this._elapsedTimeSeconds; 
			}
			set
			{
				if (_elapsedTimeSeconds == value && ElapsedTimeSeconds != null )
					return;
					
				this._elapsedTimeSeconds = value;
				this._isDirty = true;
				
				OnPropertyChanged("ElapsedTimeSeconds");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ProductRateDisplayName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ProductRateDisplayName
		{
			get
			{
				return this._productRateDisplayName; 
			}
			set
			{
				if (_productRateDisplayName == value)
					return;
					
				this._productRateDisplayName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ProductRateDisplayName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Wholesaler_ProductName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Wholesaler_ProductName
		{
			get
			{
				return this._wholesaler_ProductName; 
			}
			set
			{
				if (_wholesaler_ProductName == value)
					return;
					
				this._wholesaler_ProductName = value;
				this._isDirty = true;
				
				OnPropertyChanged("Wholesaler_ProductName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModeratorName
		{
			get
			{
				return this._moderatorName; 
			}
			set
			{
				if (_moderatorName == value)
					return;
					
				this._moderatorName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ConferenceName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ConferenceName
		{
			get
			{
				return this._conferenceName; 
			}
			set
			{
				if (_conferenceName == value)
					return;
					
				this._conferenceName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ConferenceName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModeratorConferenceName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModeratorConferenceName
		{
			get
			{
				return this._moderatorConferenceName; 
			}
			set
			{
				if (_moderatorConferenceName == value)
					return;
					
				this._moderatorConferenceName = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModeratorConferenceName");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "vw_CustomerTransactionList"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Vw_CustomerTransactionListBase Entity 
		///</summary>
		public virtual Vw_CustomerTransactionListBase Copy()
		{
			//shallow copy entity
			Vw_CustomerTransactionList copy = new Vw_CustomerTransactionList();
				copy.Id = this.Id;
				copy.WholesalerId = this.WholesalerId;
				copy.CustomerId = this.CustomerId;
				copy.ModeratorId = this.ModeratorId;
				copy.PriCustomerNumber = this.PriCustomerNumber;
				copy.SecCustomerNumber = this.SecCustomerNumber;
				copy.CustomerTransactionTypeId = this.CustomerTransactionTypeId;
				copy.CustomerTransactionTypeDisplayName = this.CustomerTransactionTypeDisplayName;
				copy.TransactionDescription = this.TransactionDescription;
				copy.TransactionDate = this.TransactionDate;
				copy.TransactionAmount = this.TransactionAmount;
				copy.LocalTaxRate = this.LocalTaxRate;
				copy.FederalTaxRate = this.FederalTaxRate;
				copy.LocalTaxAmount = this.LocalTaxAmount;
				copy.FederalTaxAmount = this.FederalTaxAmount;
				copy.TransactionTotal = this.TransactionTotal;
				copy.CustomerBalance = this.CustomerBalance;
				copy.Wholesaler_ProductId = this.Wholesaler_ProductId;
				copy.ProductRateId = this.ProductRateId;
				copy.Quantity = this.Quantity;
				copy.SellRate = this.SellRate;
				copy.BuyRate = this.BuyRate;
				copy.WsTransactionAmount = this.WsTransactionAmount;
				copy.ReferenceNumber = this.ReferenceNumber;
				copy.UniqueConferenceId = this.UniqueConferenceId;
				copy.PostedDate = this.PostedDate;
				copy.ModifiedBy = this.ModifiedBy;
				copy.CreatedDate = this.CreatedDate;
				copy.PostedToInvoice = this.PostedToInvoice;
				copy.PostedToInvoiceDate = this.PostedToInvoiceDate;
				copy.ElapsedTimeSeconds = this.ElapsedTimeSeconds;
				copy.ProductRateDisplayName = this.ProductRateDisplayName;
				copy.Wholesaler_ProductName = this.Wholesaler_ProductName;
				copy.ModeratorName = this.ModeratorName;
				copy.ConferenceName = this.ConferenceName;
				copy.ModeratorConferenceName = this.ModeratorConferenceName;
			copy.AcceptChanges();
			return (Vw_CustomerTransactionList)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="Vw_CustomerTransactionListBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(Vw_CustomerTransactionListBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="Vw_CustomerTransactionListBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="Vw_CustomerTransactionListBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="Vw_CustomerTransactionListBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(Vw_CustomerTransactionListBase Object1, Vw_CustomerTransactionListBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.Id != Object2.Id)
				equal = false;
			if (Object1.WholesalerId != Object2.WholesalerId)
				equal = false;
			if (Object1.CustomerId != Object2.CustomerId)
				equal = false;
			if (Object1.ModeratorId != null && Object2.ModeratorId != null )
			{
				if (Object1.ModeratorId != Object2.ModeratorId)
					equal = false;
			}
			else if (Object1.ModeratorId == null ^ Object1.ModeratorId == null )
			{
				equal = false;
			}
			if (Object1.PriCustomerNumber != null && Object2.PriCustomerNumber != null )
			{
				if (Object1.PriCustomerNumber != Object2.PriCustomerNumber)
					equal = false;
			}
			else if (Object1.PriCustomerNumber == null ^ Object1.PriCustomerNumber == null )
			{
				equal = false;
			}
			if (Object1.SecCustomerNumber != null && Object2.SecCustomerNumber != null )
			{
				if (Object1.SecCustomerNumber != Object2.SecCustomerNumber)
					equal = false;
			}
			else if (Object1.SecCustomerNumber == null ^ Object1.SecCustomerNumber == null )
			{
				equal = false;
			}
			if (Object1.CustomerTransactionTypeId != Object2.CustomerTransactionTypeId)
				equal = false;
			if (Object1.CustomerTransactionTypeDisplayName != null && Object2.CustomerTransactionTypeDisplayName != null )
			{
				if (Object1.CustomerTransactionTypeDisplayName != Object2.CustomerTransactionTypeDisplayName)
					equal = false;
			}
			else if (Object1.CustomerTransactionTypeDisplayName == null ^ Object1.CustomerTransactionTypeDisplayName == null )
			{
				equal = false;
			}
			if (Object1.TransactionDescription != null && Object2.TransactionDescription != null )
			{
				if (Object1.TransactionDescription != Object2.TransactionDescription)
					equal = false;
			}
			else if (Object1.TransactionDescription == null ^ Object1.TransactionDescription == null )
			{
				equal = false;
			}
			if (Object1.TransactionDate != Object2.TransactionDate)
				equal = false;
			if (Object1.TransactionAmount != null && Object2.TransactionAmount != null )
			{
				if (Object1.TransactionAmount != Object2.TransactionAmount)
					equal = false;
			}
			else if (Object1.TransactionAmount == null ^ Object1.TransactionAmount == null )
			{
				equal = false;
			}
			if (Object1.LocalTaxRate != null && Object2.LocalTaxRate != null )
			{
				if (Object1.LocalTaxRate != Object2.LocalTaxRate)
					equal = false;
			}
			else if (Object1.LocalTaxRate == null ^ Object1.LocalTaxRate == null )
			{
				equal = false;
			}
			if (Object1.FederalTaxRate != null && Object2.FederalTaxRate != null )
			{
				if (Object1.FederalTaxRate != Object2.FederalTaxRate)
					equal = false;
			}
			else if (Object1.FederalTaxRate == null ^ Object1.FederalTaxRate == null )
			{
				equal = false;
			}
			if (Object1.LocalTaxAmount != null && Object2.LocalTaxAmount != null )
			{
				if (Object1.LocalTaxAmount != Object2.LocalTaxAmount)
					equal = false;
			}
			else if (Object1.LocalTaxAmount == null ^ Object1.LocalTaxAmount == null )
			{
				equal = false;
			}
			if (Object1.FederalTaxAmount != null && Object2.FederalTaxAmount != null )
			{
				if (Object1.FederalTaxAmount != Object2.FederalTaxAmount)
					equal = false;
			}
			else if (Object1.FederalTaxAmount == null ^ Object1.FederalTaxAmount == null )
			{
				equal = false;
			}
			if (Object1.TransactionTotal != null && Object2.TransactionTotal != null )
			{
				if (Object1.TransactionTotal != Object2.TransactionTotal)
					equal = false;
			}
			else if (Object1.TransactionTotal == null ^ Object1.TransactionTotal == null )
			{
				equal = false;
			}
			if (Object1.CustomerBalance != null && Object2.CustomerBalance != null )
			{
				if (Object1.CustomerBalance != Object2.CustomerBalance)
					equal = false;
			}
			else if (Object1.CustomerBalance == null ^ Object1.CustomerBalance == null )
			{
				equal = false;
			}
			if (Object1.Wholesaler_ProductId != null && Object2.Wholesaler_ProductId != null )
			{
				if (Object1.Wholesaler_ProductId != Object2.Wholesaler_ProductId)
					equal = false;
			}
			else if (Object1.Wholesaler_ProductId == null ^ Object1.Wholesaler_ProductId == null )
			{
				equal = false;
			}
			if (Object1.ProductRateId != null && Object2.ProductRateId != null )
			{
				if (Object1.ProductRateId != Object2.ProductRateId)
					equal = false;
			}
			else if (Object1.ProductRateId == null ^ Object1.ProductRateId == null )
			{
				equal = false;
			}
			if (Object1.Quantity != null && Object2.Quantity != null )
			{
				if (Object1.Quantity != Object2.Quantity)
					equal = false;
			}
			else if (Object1.Quantity == null ^ Object1.Quantity == null )
			{
				equal = false;
			}
			if (Object1.SellRate != null && Object2.SellRate != null )
			{
				if (Object1.SellRate != Object2.SellRate)
					equal = false;
			}
			else if (Object1.SellRate == null ^ Object1.SellRate == null )
			{
				equal = false;
			}
			if (Object1.BuyRate != null && Object2.BuyRate != null )
			{
				if (Object1.BuyRate != Object2.BuyRate)
					equal = false;
			}
			else if (Object1.BuyRate == null ^ Object1.BuyRate == null )
			{
				equal = false;
			}
			if (Object1.WsTransactionAmount != null && Object2.WsTransactionAmount != null )
			{
				if (Object1.WsTransactionAmount != Object2.WsTransactionAmount)
					equal = false;
			}
			else if (Object1.WsTransactionAmount == null ^ Object1.WsTransactionAmount == null )
			{
				equal = false;
			}
			if (Object1.ReferenceNumber != null && Object2.ReferenceNumber != null )
			{
				if (Object1.ReferenceNumber != Object2.ReferenceNumber)
					equal = false;
			}
			else if (Object1.ReferenceNumber == null ^ Object1.ReferenceNumber == null )
			{
				equal = false;
			}
			if (Object1.UniqueConferenceId != null && Object2.UniqueConferenceId != null )
			{
				if (Object1.UniqueConferenceId != Object2.UniqueConferenceId)
					equal = false;
			}
			else if (Object1.UniqueConferenceId == null ^ Object1.UniqueConferenceId == null )
			{
				equal = false;
			}
			if (Object1.PostedDate != Object2.PostedDate)
				equal = false;
			if (Object1.ModifiedBy != null && Object2.ModifiedBy != null )
			{
				if (Object1.ModifiedBy != Object2.ModifiedBy)
					equal = false;
			}
			else if (Object1.ModifiedBy == null ^ Object1.ModifiedBy == null )
			{
				equal = false;
			}
			if (Object1.CreatedDate != null && Object2.CreatedDate != null )
			{
				if (Object1.CreatedDate != Object2.CreatedDate)
					equal = false;
			}
			else if (Object1.CreatedDate == null ^ Object1.CreatedDate == null )
			{
				equal = false;
			}
			if (Object1.PostedToInvoice != null && Object2.PostedToInvoice != null )
			{
				if (Object1.PostedToInvoice != Object2.PostedToInvoice)
					equal = false;
			}
			else if (Object1.PostedToInvoice == null ^ Object1.PostedToInvoice == null )
			{
				equal = false;
			}
			if (Object1.PostedToInvoiceDate != null && Object2.PostedToInvoiceDate != null )
			{
				if (Object1.PostedToInvoiceDate != Object2.PostedToInvoiceDate)
					equal = false;
			}
			else if (Object1.PostedToInvoiceDate == null ^ Object1.PostedToInvoiceDate == null )
			{
				equal = false;
			}
			if (Object1.ElapsedTimeSeconds != null && Object2.ElapsedTimeSeconds != null )
			{
				if (Object1.ElapsedTimeSeconds != Object2.ElapsedTimeSeconds)
					equal = false;
			}
			else if (Object1.ElapsedTimeSeconds == null ^ Object1.ElapsedTimeSeconds == null )
			{
				equal = false;
			}
			if (Object1.ProductRateDisplayName != null && Object2.ProductRateDisplayName != null )
			{
				if (Object1.ProductRateDisplayName != Object2.ProductRateDisplayName)
					equal = false;
			}
			else if (Object1.ProductRateDisplayName == null ^ Object1.ProductRateDisplayName == null )
			{
				equal = false;
			}
			if (Object1.Wholesaler_ProductName != null && Object2.Wholesaler_ProductName != null )
			{
				if (Object1.Wholesaler_ProductName != Object2.Wholesaler_ProductName)
					equal = false;
			}
			else if (Object1.Wholesaler_ProductName == null ^ Object1.Wholesaler_ProductName == null )
			{
				equal = false;
			}
			if (Object1.ModeratorName != null && Object2.ModeratorName != null )
			{
				if (Object1.ModeratorName != Object2.ModeratorName)
					equal = false;
			}
			else if (Object1.ModeratorName == null ^ Object1.ModeratorName == null )
			{
				equal = false;
			}
			if (Object1.ConferenceName != null && Object2.ConferenceName != null )
			{
				if (Object1.ConferenceName != Object2.ConferenceName)
					equal = false;
			}
			else if (Object1.ConferenceName == null ^ Object1.ConferenceName == null )
			{
				equal = false;
			}
			if (Object1.ModeratorConferenceName != null && Object2.ModeratorConferenceName != null )
			{
				if (Object1.ModeratorConferenceName != Object2.ModeratorConferenceName)
					equal = false;
			}
			else if (Object1.ModeratorConferenceName == null ^ Object1.ModeratorConferenceName == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(Vw_CustomerTransactionList entity, string propertyName)
		{
			switch (propertyName)
			{
				case "Id":
					return entity.Id;
				case "WholesalerId":
					return entity.WholesalerId;
				case "CustomerId":
					return entity.CustomerId;
				case "ModeratorId":
					return entity.ModeratorId;
				case "PriCustomerNumber":
					return entity.PriCustomerNumber;
				case "SecCustomerNumber":
					return entity.SecCustomerNumber;
				case "CustomerTransactionTypeId":
					return entity.CustomerTransactionTypeId;
				case "CustomerTransactionTypeDisplayName":
					return entity.CustomerTransactionTypeDisplayName;
				case "TransactionDescription":
					return entity.TransactionDescription;
				case "TransactionDate":
					return entity.TransactionDate;
				case "TransactionAmount":
					return entity.TransactionAmount;
				case "LocalTaxRate":
					return entity.LocalTaxRate;
				case "FederalTaxRate":
					return entity.FederalTaxRate;
				case "LocalTaxAmount":
					return entity.LocalTaxAmount;
				case "FederalTaxAmount":
					return entity.FederalTaxAmount;
				case "TransactionTotal":
					return entity.TransactionTotal;
				case "CustomerBalance":
					return entity.CustomerBalance;
				case "Wholesaler_ProductId":
					return entity.Wholesaler_ProductId;
				case "ProductRateId":
					return entity.ProductRateId;
				case "Quantity":
					return entity.Quantity;
				case "SellRate":
					return entity.SellRate;
				case "BuyRate":
					return entity.BuyRate;
				case "WsTransactionAmount":
					return entity.WsTransactionAmount;
				case "ReferenceNumber":
					return entity.ReferenceNumber;
				case "UniqueConferenceId":
					return entity.UniqueConferenceId;
				case "PostedDate":
					return entity.PostedDate;
				case "ModifiedBy":
					return entity.ModifiedBy;
				case "CreatedDate":
					return entity.CreatedDate;
				case "PostedToInvoice":
					return entity.PostedToInvoice;
				case "PostedToInvoiceDate":
					return entity.PostedToInvoiceDate;
				case "ElapsedTimeSeconds":
					return entity.ElapsedTimeSeconds;
				case "ProductRateDisplayName":
					return entity.ProductRateDisplayName;
				case "Wholesaler_ProductName":
					return entity.Wholesaler_ProductName;
				case "ModeratorName":
					return entity.ModeratorName;
				case "ConferenceName":
					return entity.ConferenceName;
				case "ModeratorConferenceName":
					return entity.ModeratorConferenceName;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as Vw_CustomerTransactionList, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{37}{36}- Id: {0}{36}- WholesalerId: {1}{36}- CustomerId: {2}{36}- ModeratorId: {3}{36}- PriCustomerNumber: {4}{36}- SecCustomerNumber: {5}{36}- CustomerTransactionTypeId: {6}{36}- CustomerTransactionTypeDisplayName: {7}{36}- TransactionDescription: {8}{36}- TransactionDate: {9}{36}- TransactionAmount: {10}{36}- LocalTaxRate: {11}{36}- FederalTaxRate: {12}{36}- LocalTaxAmount: {13}{36}- FederalTaxAmount: {14}{36}- TransactionTotal: {15}{36}- CustomerBalance: {16}{36}- Wholesaler_ProductId: {17}{36}- ProductRateId: {18}{36}- Quantity: {19}{36}- SellRate: {20}{36}- BuyRate: {21}{36}- WsTransactionAmount: {22}{36}- ReferenceNumber: {23}{36}- UniqueConferenceId: {24}{36}- PostedDate: {25}{36}- ModifiedBy: {26}{36}- CreatedDate: {27}{36}- PostedToInvoice: {28}{36}- PostedToInvoiceDate: {29}{36}- ElapsedTimeSeconds: {30}{36}- ProductRateDisplayName: {31}{36}- Wholesaler_ProductName: {32}{36}- ModeratorName: {33}{36}- ConferenceName: {34}{36}- ModeratorConferenceName: {35}{36}", 
				this.Id,
				this.WholesalerId,
				this.CustomerId,
				(this.ModeratorId == null) ? string.Empty : this.ModeratorId.ToString(),
			     
				(this.PriCustomerNumber == null) ? string.Empty : this.PriCustomerNumber.ToString(),
			     
				(this.SecCustomerNumber == null) ? string.Empty : this.SecCustomerNumber.ToString(),
			     
				this.CustomerTransactionTypeId,
				(this.CustomerTransactionTypeDisplayName == null) ? string.Empty : this.CustomerTransactionTypeDisplayName.ToString(),
			     
				(this.TransactionDescription == null) ? string.Empty : this.TransactionDescription.ToString(),
			     
				this.TransactionDate,
				(this.TransactionAmount == null) ? string.Empty : this.TransactionAmount.ToString(),
			     
				(this.LocalTaxRate == null) ? string.Empty : this.LocalTaxRate.ToString(),
			     
				(this.FederalTaxRate == null) ? string.Empty : this.FederalTaxRate.ToString(),
			     
				(this.LocalTaxAmount == null) ? string.Empty : this.LocalTaxAmount.ToString(),
			     
				(this.FederalTaxAmount == null) ? string.Empty : this.FederalTaxAmount.ToString(),
			     
				(this.TransactionTotal == null) ? string.Empty : this.TransactionTotal.ToString(),
			     
				(this.CustomerBalance == null) ? string.Empty : this.CustomerBalance.ToString(),
			     
				(this.Wholesaler_ProductId == null) ? string.Empty : this.Wholesaler_ProductId.ToString(),
			     
				(this.ProductRateId == null) ? string.Empty : this.ProductRateId.ToString(),
			     
				(this.Quantity == null) ? string.Empty : this.Quantity.ToString(),
			     
				(this.SellRate == null) ? string.Empty : this.SellRate.ToString(),
			     
				(this.BuyRate == null) ? string.Empty : this.BuyRate.ToString(),
			     
				(this.WsTransactionAmount == null) ? string.Empty : this.WsTransactionAmount.ToString(),
			     
				(this.ReferenceNumber == null) ? string.Empty : this.ReferenceNumber.ToString(),
			     
				(this.UniqueConferenceId == null) ? string.Empty : this.UniqueConferenceId.ToString(),
			     
				this.PostedDate,
				(this.ModifiedBy == null) ? string.Empty : this.ModifiedBy.ToString(),
			     
				(this.CreatedDate == null) ? string.Empty : this.CreatedDate.ToString(),
			     
				(this.PostedToInvoice == null) ? string.Empty : this.PostedToInvoice.ToString(),
			     
				(this.PostedToInvoiceDate == null) ? string.Empty : this.PostedToInvoiceDate.ToString(),
			     
				(this.ElapsedTimeSeconds == null) ? string.Empty : this.ElapsedTimeSeconds.ToString(),
			     
				(this.ProductRateDisplayName == null) ? string.Empty : this.ProductRateDisplayName.ToString(),
			     
				(this.Wholesaler_ProductName == null) ? string.Empty : this.Wholesaler_ProductName.ToString(),
			     
				(this.ModeratorName == null) ? string.Empty : this.ModeratorName.ToString(),
			     
				(this.ConferenceName == null) ? string.Empty : this.ConferenceName.ToString(),
			     
				(this.ModeratorConferenceName == null) ? string.Empty : this.ModeratorConferenceName.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the Vw_CustomerTransactionList columns.
	/// </summary>
	[Serializable]
	public enum Vw_CustomerTransactionListColumn
	{
		/// <summary>
		/// ID : 
		/// </summary>
		[EnumTextValue("ID")]
		[ColumnEnum("ID", typeof(System.Int64), System.Data.DbType.Int64, false, false, false)]
		Id,
		/// <summary>
		/// WholesalerID : 
		/// </summary>
		[EnumTextValue("WholesalerID")]
		[ColumnEnum("WholesalerID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 10)]
		WholesalerId,
		/// <summary>
		/// CustomerID : 
		/// </summary>
		[EnumTextValue("CustomerID")]
		[ColumnEnum("CustomerID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CustomerId,
		/// <summary>
		/// ModeratorID : 
		/// </summary>
		[EnumTextValue("ModeratorID")]
		[ColumnEnum("ModeratorID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ModeratorId,
		/// <summary>
		/// PriCustomerNumber : 
		/// </summary>
		[EnumTextValue("PriCustomerNumber")]
		[ColumnEnum("PriCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
		PriCustomerNumber,
		/// <summary>
		/// SecCustomerNumber : 
		/// </summary>
		[EnumTextValue("SecCustomerNumber")]
		[ColumnEnum("SecCustomerNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 6)]
		SecCustomerNumber,
		/// <summary>
		/// CustomerTransactionTypeID : 
		/// </summary>
		[EnumTextValue("CustomerTransactionTypeID")]
		[ColumnEnum("CustomerTransactionTypeID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CustomerTransactionTypeId,
		/// <summary>
		/// CustomerTransactionTypeDisplayName : 
		/// </summary>
		[EnumTextValue("CustomerTransactionTypeDisplayName")]
		[ColumnEnum("CustomerTransactionTypeDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		CustomerTransactionTypeDisplayName,
		/// <summary>
		/// TransactionDescription : 
		/// </summary>
		[EnumTextValue("TransactionDescription")]
		[ColumnEnum("TransactionDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		TransactionDescription,
		/// <summary>
		/// TransactionDate : 
		/// </summary>
		[EnumTextValue("TransactionDate")]
		[ColumnEnum("TransactionDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		TransactionDate,
		/// <summary>
		/// TransactionAmount : 
		/// </summary>
		[EnumTextValue("TransactionAmount")]
		[ColumnEnum("TransactionAmount", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TransactionAmount,
		/// <summary>
		/// LocalTaxRate : 
		/// </summary>
		[EnumTextValue("LocalTaxRate")]
		[ColumnEnum("LocalTaxRate", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		LocalTaxRate,
		/// <summary>
		/// FederalTaxRate : 
		/// </summary>
		[EnumTextValue("FederalTaxRate")]
		[ColumnEnum("FederalTaxRate", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FederalTaxRate,
		/// <summary>
		/// LocalTaxAmount : 
		/// </summary>
		[EnumTextValue("LocalTaxAmount")]
		[ColumnEnum("LocalTaxAmount", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		LocalTaxAmount,
		/// <summary>
		/// FederalTaxAmount : 
		/// </summary>
		[EnumTextValue("FederalTaxAmount")]
		[ColumnEnum("FederalTaxAmount", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FederalTaxAmount,
		/// <summary>
		/// TransactionTotal : 
		/// </summary>
		[EnumTextValue("TransactionTotal")]
		[ColumnEnum("TransactionTotal", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TransactionTotal,
		/// <summary>
		/// CustomerBalance : 
		/// </summary>
		[EnumTextValue("CustomerBalance")]
		[ColumnEnum("CustomerBalance", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CustomerBalance,
		/// <summary>
		/// Wholesaler_ProductID : 
		/// </summary>
		[EnumTextValue("Wholesaler_ProductID")]
		[ColumnEnum("Wholesaler_ProductID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Wholesaler_ProductId,
		/// <summary>
		/// ProductRateID : 
		/// </summary>
		[EnumTextValue("ProductRateID")]
		[ColumnEnum("ProductRateID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ProductRateId,
		/// <summary>
		/// Quantity : 
		/// </summary>
		[EnumTextValue("Quantity")]
		[ColumnEnum("Quantity", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Quantity,
		/// <summary>
		/// SellRate : 
		/// </summary>
		[EnumTextValue("SellRate")]
		[ColumnEnum("SellRate", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SellRate,
		/// <summary>
		/// BuyRate : 
		/// </summary>
		[EnumTextValue("BuyRate")]
		[ColumnEnum("BuyRate", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		BuyRate,
		/// <summary>
		/// WSTransactionAmount : 
		/// </summary>
		[EnumTextValue("WSTransactionAmount")]
		[ColumnEnum("WSTransactionAmount", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		WsTransactionAmount,
		/// <summary>
		/// ReferenceNumber : 
		/// </summary>
		[EnumTextValue("ReferenceNumber")]
		[ColumnEnum("ReferenceNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ReferenceNumber,
		/// <summary>
		/// UniqueConferenceID : 
		/// </summary>
		[EnumTextValue("UniqueConferenceID")]
		[ColumnEnum("UniqueConferenceID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		UniqueConferenceId,
		/// <summary>
		/// PostedDate : 
		/// </summary>
		[EnumTextValue("PostedDate")]
		[ColumnEnum("PostedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		PostedDate,
		/// <summary>
		/// ModifiedBy : 
		/// </summary>
		[EnumTextValue("ModifiedBy")]
		[ColumnEnum("ModifiedBy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ModifiedBy,
		/// <summary>
		/// CreatedDate : 
		/// </summary>
		[EnumTextValue("CreatedDate")]
		[ColumnEnum("CreatedDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CreatedDate,
		/// <summary>
		/// PostedToInvoice : 
		/// </summary>
		[EnumTextValue("PostedToInvoice")]
		[ColumnEnum("PostedToInvoice", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		PostedToInvoice,
		/// <summary>
		/// PostedToInvoiceDate : 
		/// </summary>
		[EnumTextValue("PostedToInvoiceDate")]
		[ColumnEnum("PostedToInvoiceDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		PostedToInvoiceDate,
		/// <summary>
		/// ElapsedTimeSeconds : 
		/// </summary>
		[EnumTextValue("ElapsedTimeSeconds")]
		[ColumnEnum("ElapsedTimeSeconds", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		ElapsedTimeSeconds,
		/// <summary>
		/// ProductRateDisplayName : 
		/// </summary>
		[EnumTextValue("ProductRateDisplayName")]
		[ColumnEnum("ProductRateDisplayName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		ProductRateDisplayName,
		/// <summary>
		/// Wholesaler_ProductName : 
		/// </summary>
		[EnumTextValue("Wholesaler_ProductName")]
		[ColumnEnum("Wholesaler_ProductName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Wholesaler_ProductName,
		/// <summary>
		/// ModeratorName : 
		/// </summary>
		[EnumTextValue("ModeratorName")]
		[ColumnEnum("ModeratorName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ModeratorName,
		/// <summary>
		/// ConferenceName : 
		/// </summary>
		[EnumTextValue("ConferenceName")]
		[ColumnEnum("ConferenceName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
		ConferenceName,
		/// <summary>
		/// ModeratorConferenceName : 
		/// </summary>
		[EnumTextValue("ModeratorConferenceName")]
		[ColumnEnum("ModeratorConferenceName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 203)]
		ModeratorConferenceName
	}//End enum

} // end namespace
